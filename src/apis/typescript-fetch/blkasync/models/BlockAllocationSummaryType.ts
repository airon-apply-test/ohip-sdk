/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block Reservation Asynchronous API
 * APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 22.4.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.4.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoomAllocationDateType } from './RoomAllocationDateType';
import {
    RoomAllocationDateTypeFromJSON,
    RoomAllocationDateTypeFromJSONTyped,
    RoomAllocationDateTypeToJSON,
} from './RoomAllocationDateType';

/**
 * 
 * @export
 * @interface BlockAllocationSummaryType
 */
export interface BlockAllocationSummaryType {
    /**
     * A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    blockId?: string;
    /**
     * Defined block code for the block.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    blockCode?: string;
    /**
     * Name of the block.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    blockName?: string;
    /**
     * A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    masterBlockId?: string;
    /**
     * Booking Status of the block.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    status?: string;
    /**
     * Market Code of the block.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    marketCode?: string;
    /**
     * 
     * @type {Date}
     * @memberof BlockAllocationSummaryType
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof BlockAllocationSummaryType
     */
    endDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof BlockAllocationSummaryType
     */
    cutOffDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof BlockAllocationSummaryType
     */
    cutOffDays?: number;
    /**
     * Cancellation Date.
     * @type {Date}
     * @memberof BlockAllocationSummaryType
     */
    cancellationDate?: Date;
    /**
     * Code that idenfies the reason for cancellation.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    cancellationCode?: string;
    /**
     * Description that explains the reason for cancellation.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    cancellationDescription?: string;
    /**
     * Catering Owner
     * @type {number}
     * @memberof BlockAllocationSummaryType
     */
    cateringOwner?: number;
    /**
     * Primary Catering Owner Code
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    cateringOwnerCode?: string;
    /**
     * Property of Catering Owner
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    cateringOwnerResort?: string;
    /**
     * Owner ID
     * @type {number}
     * @memberof BlockAllocationSummaryType
     */
    owner?: number;
    /**
     * Block Owner Code
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    ownerCode?: string;
    /**
     * Property of Business Block Owner
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    ownerResort?: string;
    /**
     * Rooms Owner
     * @type {number}
     * @memberof BlockAllocationSummaryType
     */
    roomsOwner?: number;
    /**
     * Primary Rooms Owner Code
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    roomsOwnerCode?: string;
    /**
     * Property of Rooms Owner
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    roomsOwnerResort?: string;
    /**
     * The business date the block was created.
     * @type {Date}
     * @memberof BlockAllocationSummaryType
     */
    createDateTime?: Date;
    /**
     * Indicates the internal type of the block like G, etc.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    blockType?: string;
    /**
     * Booking Method.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    reservationMethod?: string;
    /**
     * Rate code associated with Block.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    ratePlanCode?: string;
    /**
     * Date Time when the block was modified last.
     * @type {Date}
     * @memberof BlockAllocationSummaryType
     */
    lastModifiedDate?: Date;
    /**
     * Source of the Block.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    sourceCode?: string;
    /**
     * 
     * @type {Array<RoomAllocationDateType>}
     * @memberof BlockAllocationSummaryType
     */
    allocationDates?: Array<RoomAllocationDateType>;
}

/**
 * Check if a given object implements the BlockAllocationSummaryType interface.
 */
export function instanceOfBlockAllocationSummaryType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BlockAllocationSummaryTypeFromJSON(json: any): BlockAllocationSummaryType {
    return BlockAllocationSummaryTypeFromJSONTyped(json, false);
}

export function BlockAllocationSummaryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockAllocationSummaryType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockId': !exists(json, 'blockId') ? undefined : json['blockId'],
        'blockCode': !exists(json, 'blockCode') ? undefined : json['blockCode'],
        'blockName': !exists(json, 'blockName') ? undefined : json['blockName'],
        'masterBlockId': !exists(json, 'masterBlockId') ? undefined : json['masterBlockId'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'marketCode': !exists(json, 'marketCode') ? undefined : json['marketCode'],
        'startDate': !exists(json, 'startDate') ? undefined : (new Date(json['startDate'])),
        'endDate': !exists(json, 'endDate') ? undefined : (new Date(json['endDate'])),
        'cutOffDate': !exists(json, 'cutOffDate') ? undefined : (new Date(json['cutOffDate'])),
        'cutOffDays': !exists(json, 'cutOffDays') ? undefined : json['cutOffDays'],
        'cancellationDate': !exists(json, 'cancellationDate') ? undefined : (new Date(json['cancellationDate'])),
        'cancellationCode': !exists(json, 'cancellationCode') ? undefined : json['cancellationCode'],
        'cancellationDescription': !exists(json, 'cancellationDescription') ? undefined : json['cancellationDescription'],
        'cateringOwner': !exists(json, 'cateringOwner') ? undefined : json['cateringOwner'],
        'cateringOwnerCode': !exists(json, 'cateringOwnerCode') ? undefined : json['cateringOwnerCode'],
        'cateringOwnerResort': !exists(json, 'cateringOwnerResort') ? undefined : json['cateringOwnerResort'],
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
        'ownerCode': !exists(json, 'ownerCode') ? undefined : json['ownerCode'],
        'ownerResort': !exists(json, 'ownerResort') ? undefined : json['ownerResort'],
        'roomsOwner': !exists(json, 'roomsOwner') ? undefined : json['roomsOwner'],
        'roomsOwnerCode': !exists(json, 'roomsOwnerCode') ? undefined : json['roomsOwnerCode'],
        'roomsOwnerResort': !exists(json, 'roomsOwnerResort') ? undefined : json['roomsOwnerResort'],
        'createDateTime': !exists(json, 'createDateTime') ? undefined : (new Date(json['createDateTime'])),
        'blockType': !exists(json, 'blockType') ? undefined : json['blockType'],
        'reservationMethod': !exists(json, 'reservationMethod') ? undefined : json['reservationMethod'],
        'ratePlanCode': !exists(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : (new Date(json['lastModifiedDate'])),
        'sourceCode': !exists(json, 'sourceCode') ? undefined : json['sourceCode'],
        'allocationDates': !exists(json, 'allocationDates') ? undefined : ((json['allocationDates'] as Array<any>).map(RoomAllocationDateTypeFromJSON)),
    };
}

export function BlockAllocationSummaryTypeToJSON(value?: BlockAllocationSummaryType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blockId': value.blockId,
        'blockCode': value.blockCode,
        'blockName': value.blockName,
        'masterBlockId': value.masterBlockId,
        'status': value.status,
        'marketCode': value.marketCode,
        'startDate': value.startDate === undefined ? undefined : (value.startDate.toISOString()),
        'endDate': value.endDate === undefined ? undefined : (value.endDate.toISOString()),
        'cutOffDate': value.cutOffDate === undefined ? undefined : (value.cutOffDate.toISOString()),
        'cutOffDays': value.cutOffDays,
        'cancellationDate': value.cancellationDate === undefined ? undefined : (value.cancellationDate.toISOString()),
        'cancellationCode': value.cancellationCode,
        'cancellationDescription': value.cancellationDescription,
        'cateringOwner': value.cateringOwner,
        'cateringOwnerCode': value.cateringOwnerCode,
        'cateringOwnerResort': value.cateringOwnerResort,
        'owner': value.owner,
        'ownerCode': value.ownerCode,
        'ownerResort': value.ownerResort,
        'roomsOwner': value.roomsOwner,
        'roomsOwnerCode': value.roomsOwnerCode,
        'roomsOwnerResort': value.roomsOwnerResort,
        'createDateTime': value.createDateTime === undefined ? undefined : (value.createDateTime.toISOString()),
        'blockType': value.blockType,
        'reservationMethod': value.reservationMethod,
        'ratePlanCode': value.ratePlanCode,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : (value.lastModifiedDate.toISOString()),
        'sourceCode': value.sourceCode,
        'allocationDates': value.allocationDates === undefined ? undefined : ((value.allocationDates as Array<any>).map(RoomAllocationDateTypeToJSON)),
    };
}

