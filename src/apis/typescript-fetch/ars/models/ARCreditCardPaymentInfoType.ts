/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtorsâ€™ accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 22.3.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';
import type { ProfileId } from './ProfileId';
import {
    ProfileIdFromJSON,
    ProfileIdFromJSONTyped,
    ProfileIdToJSON,
} from './ProfileId';

/**
 * AR Credit Card payment information.
 * @export
 * @interface ARCreditCardPaymentInfoType
 */
export interface ARCreditCardPaymentInfoType {
    /**
     * Guest Name .
     * @type {string}
     * @memberof ARCreditCardPaymentInfoType
     */
    guestName?: string;
    /**
     * 
     * @type {ProfileId}
     * @memberof ARCreditCardPaymentInfoType
     */
    profileId?: ProfileId;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof ARCreditCardPaymentInfoType
     */
    amount?: CurrencyAmountType;
    /**
     * Date of posting.
     * @type {Date}
     * @memberof ARCreditCardPaymentInfoType
     */
    postingDate?: Date;
    /**
     * Reference Text for the payment.
     * @type {string}
     * @memberof ARCreditCardPaymentInfoType
     */
    reference?: string;
    /**
     * Remarks for payment.
     * @type {string}
     * @memberof ARCreditCardPaymentInfoType
     */
    remark?: string;
    /**
     * The Folio number of this posting, if there was a Folio already generated.
     * @type {number}
     * @memberof ARCreditCardPaymentInfoType
     */
    folioNo?: number;
    /**
     * Bill Number returned by the Fiscal Printer.
     * @type {number}
     * @memberof ARCreditCardPaymentInfoType
     */
    fiscalFolioNo?: number;
    /**
     * Transaction number of the payment.
     * @type {number}
     * @memberof ARCreditCardPaymentInfoType
     */
    transactionNo?: number;
    /**
     * Transaction Date of the payment.
     * @type {Date}
     * @memberof ARCreditCardPaymentInfoType
     */
    transactionDate?: Date;
}

/**
 * Check if a given object implements the ARCreditCardPaymentInfoType interface.
 */
export function instanceOfARCreditCardPaymentInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARCreditCardPaymentInfoTypeFromJSON(json: any): ARCreditCardPaymentInfoType {
    return ARCreditCardPaymentInfoTypeFromJSONTyped(json, false);
}

export function ARCreditCardPaymentInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARCreditCardPaymentInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'guestName': !exists(json, 'guestName') ? undefined : json['guestName'],
        'profileId': !exists(json, 'profileId') ? undefined : ProfileIdFromJSON(json['profileId']),
        'amount': !exists(json, 'amount') ? undefined : CurrencyAmountTypeFromJSON(json['amount']),
        'postingDate': !exists(json, 'postingDate') ? undefined : (new Date(json['postingDate'])),
        'reference': !exists(json, 'reference') ? undefined : json['reference'],
        'remark': !exists(json, 'remark') ? undefined : json['remark'],
        'folioNo': !exists(json, 'folioNo') ? undefined : json['folioNo'],
        'fiscalFolioNo': !exists(json, 'fiscalFolioNo') ? undefined : json['fiscalFolioNo'],
        'transactionNo': !exists(json, 'transactionNo') ? undefined : json['transactionNo'],
        'transactionDate': !exists(json, 'transactionDate') ? undefined : (new Date(json['transactionDate'])),
    };
}

export function ARCreditCardPaymentInfoTypeToJSON(value?: ARCreditCardPaymentInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'guestName': value.guestName,
        'profileId': ProfileIdToJSON(value.profileId),
        'amount': CurrencyAmountTypeToJSON(value.amount),
        'postingDate': value.postingDate === undefined ? undefined : (value.postingDate.toISOString().substr(0,10)),
        'reference': value.reference,
        'remark': value.remark,
        'folioNo': value.folioNo,
        'fiscalFolioNo': value.fiscalFolioNo,
        'transactionNo': value.transactionNo,
        'transactionDate': value.transactionDate === undefined ? undefined : (value.transactionDate.toISOString().substr(0,10)),
    };
}

