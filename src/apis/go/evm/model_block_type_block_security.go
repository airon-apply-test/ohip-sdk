/*
OPERA Cloud Sales Event Management API

APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 21.5.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>

API version: 21.5.0.0
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evm

import (
	"encoding/json"
)

// checks if the BlockTypeBlockSecurity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockTypeBlockSecurity{}

// BlockTypeBlockSecurity Block security information used for an external system. Only available if configured in OPERA Cloud.
type BlockTypeBlockSecurity struct {
	// Secured from DI Display.
	SecuredFromDIdisplayYn *bool `json:"securedFromDIdisplayYn,omitempty"`
	// All Description DD Secured.
	AllDescriptionDDSecuredYn *bool `json:"allDescriptionDDSecuredYn,omitempty"`
	// Rates Secured from GNR.
	RatesSecuredfromGNRYn *bool `json:"ratesSecuredfromGNRYn,omitempty"`
	// Rates Secured from All Displays.
	RatesSecuredfromAllDisplaysYn *bool `json:"ratesSecuredfromAllDisplaysYn,omitempty"`
	// Housing Information Secured.
	HousingInformationSecuredYn *bool `json:"housingInformationSecuredYn,omitempty"`
}

// NewBlockTypeBlockSecurity instantiates a new BlockTypeBlockSecurity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockTypeBlockSecurity() *BlockTypeBlockSecurity {
	this := BlockTypeBlockSecurity{}
	return &this
}

// NewBlockTypeBlockSecurityWithDefaults instantiates a new BlockTypeBlockSecurity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockTypeBlockSecurityWithDefaults() *BlockTypeBlockSecurity {
	this := BlockTypeBlockSecurity{}
	return &this
}

// GetSecuredFromDIdisplayYn returns the SecuredFromDIdisplayYn field value if set, zero value otherwise.
func (o *BlockTypeBlockSecurity) GetSecuredFromDIdisplayYn() bool {
	if o == nil || IsNil(o.SecuredFromDIdisplayYn) {
		var ret bool
		return ret
	}
	return *o.SecuredFromDIdisplayYn
}

// GetSecuredFromDIdisplayYnOk returns a tuple with the SecuredFromDIdisplayYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockTypeBlockSecurity) GetSecuredFromDIdisplayYnOk() (*bool, bool) {
	if o == nil || IsNil(o.SecuredFromDIdisplayYn) {
		return nil, false
	}
	return o.SecuredFromDIdisplayYn, true
}

// HasSecuredFromDIdisplayYn returns a boolean if a field has been set.
func (o *BlockTypeBlockSecurity) HasSecuredFromDIdisplayYn() bool {
	if o != nil && !IsNil(o.SecuredFromDIdisplayYn) {
		return true
	}

	return false
}

// SetSecuredFromDIdisplayYn gets a reference to the given bool and assigns it to the SecuredFromDIdisplayYn field.
func (o *BlockTypeBlockSecurity) SetSecuredFromDIdisplayYn(v bool) {
	o.SecuredFromDIdisplayYn = &v
}

// GetAllDescriptionDDSecuredYn returns the AllDescriptionDDSecuredYn field value if set, zero value otherwise.
func (o *BlockTypeBlockSecurity) GetAllDescriptionDDSecuredYn() bool {
	if o == nil || IsNil(o.AllDescriptionDDSecuredYn) {
		var ret bool
		return ret
	}
	return *o.AllDescriptionDDSecuredYn
}

// GetAllDescriptionDDSecuredYnOk returns a tuple with the AllDescriptionDDSecuredYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockTypeBlockSecurity) GetAllDescriptionDDSecuredYnOk() (*bool, bool) {
	if o == nil || IsNil(o.AllDescriptionDDSecuredYn) {
		return nil, false
	}
	return o.AllDescriptionDDSecuredYn, true
}

// HasAllDescriptionDDSecuredYn returns a boolean if a field has been set.
func (o *BlockTypeBlockSecurity) HasAllDescriptionDDSecuredYn() bool {
	if o != nil && !IsNil(o.AllDescriptionDDSecuredYn) {
		return true
	}

	return false
}

// SetAllDescriptionDDSecuredYn gets a reference to the given bool and assigns it to the AllDescriptionDDSecuredYn field.
func (o *BlockTypeBlockSecurity) SetAllDescriptionDDSecuredYn(v bool) {
	o.AllDescriptionDDSecuredYn = &v
}

// GetRatesSecuredfromGNRYn returns the RatesSecuredfromGNRYn field value if set, zero value otherwise.
func (o *BlockTypeBlockSecurity) GetRatesSecuredfromGNRYn() bool {
	if o == nil || IsNil(o.RatesSecuredfromGNRYn) {
		var ret bool
		return ret
	}
	return *o.RatesSecuredfromGNRYn
}

// GetRatesSecuredfromGNRYnOk returns a tuple with the RatesSecuredfromGNRYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockTypeBlockSecurity) GetRatesSecuredfromGNRYnOk() (*bool, bool) {
	if o == nil || IsNil(o.RatesSecuredfromGNRYn) {
		return nil, false
	}
	return o.RatesSecuredfromGNRYn, true
}

// HasRatesSecuredfromGNRYn returns a boolean if a field has been set.
func (o *BlockTypeBlockSecurity) HasRatesSecuredfromGNRYn() bool {
	if o != nil && !IsNil(o.RatesSecuredfromGNRYn) {
		return true
	}

	return false
}

// SetRatesSecuredfromGNRYn gets a reference to the given bool and assigns it to the RatesSecuredfromGNRYn field.
func (o *BlockTypeBlockSecurity) SetRatesSecuredfromGNRYn(v bool) {
	o.RatesSecuredfromGNRYn = &v
}

// GetRatesSecuredfromAllDisplaysYn returns the RatesSecuredfromAllDisplaysYn field value if set, zero value otherwise.
func (o *BlockTypeBlockSecurity) GetRatesSecuredfromAllDisplaysYn() bool {
	if o == nil || IsNil(o.RatesSecuredfromAllDisplaysYn) {
		var ret bool
		return ret
	}
	return *o.RatesSecuredfromAllDisplaysYn
}

// GetRatesSecuredfromAllDisplaysYnOk returns a tuple with the RatesSecuredfromAllDisplaysYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockTypeBlockSecurity) GetRatesSecuredfromAllDisplaysYnOk() (*bool, bool) {
	if o == nil || IsNil(o.RatesSecuredfromAllDisplaysYn) {
		return nil, false
	}
	return o.RatesSecuredfromAllDisplaysYn, true
}

// HasRatesSecuredfromAllDisplaysYn returns a boolean if a field has been set.
func (o *BlockTypeBlockSecurity) HasRatesSecuredfromAllDisplaysYn() bool {
	if o != nil && !IsNil(o.RatesSecuredfromAllDisplaysYn) {
		return true
	}

	return false
}

// SetRatesSecuredfromAllDisplaysYn gets a reference to the given bool and assigns it to the RatesSecuredfromAllDisplaysYn field.
func (o *BlockTypeBlockSecurity) SetRatesSecuredfromAllDisplaysYn(v bool) {
	o.RatesSecuredfromAllDisplaysYn = &v
}

// GetHousingInformationSecuredYn returns the HousingInformationSecuredYn field value if set, zero value otherwise.
func (o *BlockTypeBlockSecurity) GetHousingInformationSecuredYn() bool {
	if o == nil || IsNil(o.HousingInformationSecuredYn) {
		var ret bool
		return ret
	}
	return *o.HousingInformationSecuredYn
}

// GetHousingInformationSecuredYnOk returns a tuple with the HousingInformationSecuredYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockTypeBlockSecurity) GetHousingInformationSecuredYnOk() (*bool, bool) {
	if o == nil || IsNil(o.HousingInformationSecuredYn) {
		return nil, false
	}
	return o.HousingInformationSecuredYn, true
}

// HasHousingInformationSecuredYn returns a boolean if a field has been set.
func (o *BlockTypeBlockSecurity) HasHousingInformationSecuredYn() bool {
	if o != nil && !IsNil(o.HousingInformationSecuredYn) {
		return true
	}

	return false
}

// SetHousingInformationSecuredYn gets a reference to the given bool and assigns it to the HousingInformationSecuredYn field.
func (o *BlockTypeBlockSecurity) SetHousingInformationSecuredYn(v bool) {
	o.HousingInformationSecuredYn = &v
}

func (o BlockTypeBlockSecurity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockTypeBlockSecurity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SecuredFromDIdisplayYn) {
		toSerialize["securedFromDIdisplayYn"] = o.SecuredFromDIdisplayYn
	}
	if !IsNil(o.AllDescriptionDDSecuredYn) {
		toSerialize["allDescriptionDDSecuredYn"] = o.AllDescriptionDDSecuredYn
	}
	if !IsNil(o.RatesSecuredfromGNRYn) {
		toSerialize["ratesSecuredfromGNRYn"] = o.RatesSecuredfromGNRYn
	}
	if !IsNil(o.RatesSecuredfromAllDisplaysYn) {
		toSerialize["ratesSecuredfromAllDisplaysYn"] = o.RatesSecuredfromAllDisplaysYn
	}
	if !IsNil(o.HousingInformationSecuredYn) {
		toSerialize["housingInformationSecuredYn"] = o.HousingInformationSecuredYn
	}
	return toSerialize, nil
}

type NullableBlockTypeBlockSecurity struct {
	value *BlockTypeBlockSecurity
	isSet bool
}

func (v NullableBlockTypeBlockSecurity) Get() *BlockTypeBlockSecurity {
	return v.value
}

func (v *NullableBlockTypeBlockSecurity) Set(val *BlockTypeBlockSecurity) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockTypeBlockSecurity) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockTypeBlockSecurity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockTypeBlockSecurity(val *BlockTypeBlockSecurity) *NullableBlockTypeBlockSecurity {
	return &NullableBlockTypeBlockSecurity{value: val, isSet: true}
}

func (v NullableBlockTypeBlockSecurity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockTypeBlockSecurity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


