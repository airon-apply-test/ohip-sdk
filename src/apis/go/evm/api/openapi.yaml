openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for Event Management functionality in OPERA Cloud. <br\
    \ /><br />The Events feature in OPERA Cloud is designed to manage any kind of\
    \ catering activity. Events can be as simple as a one-hour reception or more complex,\
    \ such as a three-day business meeting with meals, breaks, and specific meeting\
    \ functionSpaceDetails with setupCode and resource requirements. Any group function\
    \ can be an Event.<br /><br /> Compatible with OPERA Cloud release 21.5.0.0.<br\
    \ /><br /><p> This document and all content within is available under the Universal\
    \ Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c)\
    \ 2020, 2022 Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Sales Event Management API
  version: 21.5.0.0
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /evm/v1
tags:
- description: "The Event APIs will allow you to retrieve, create, manage and delete\
    \ events and related event functionality such as event resources, catering packages\
    \ and even event waitlists."
  name: EventManagement
paths:
  /events:
    get:
      description: "This API fetches catering events for multiple hotels, based on\
        \ search criteria such as dates, linked block, status, function space, and\
        \ more. The data returned in the result contains, event type, description,\
        \ dates and times, attendees, function space, setup style and more. <p><strong>OperationId:</strong>getEventsMultipleHotels</p>"
      operationId: getEventsMultipleHotels
      parameters:
      - description: This is the Hotel Code of the Event
        example:
        - BHOTEL
        - WORLDHOTEL
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The starting value of the date range.
        example: 2020-12-30
        in: query
        name: eventStartDate
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        example: 2020-12-30
        in: query
        name: eventEndDate
        schema:
          format: date
          type: string
      - description: Block ID linked to the Catering Event
        example:
        - "52346234"
        explode: true
        in: query
        name: blockId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique ID for the catering event
        example:
        - "823814534"
        explode: true
        in: query
        name: eventId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Simple type for block instructions to be used in requests for\
          \ fetching blocks. Valid status values are Group, Source, TravelAgent, Contact,\
          \ Company."
        explode: true
        in: query
        name: category
        schema:
          items:
            enum:
            - Group
            - Source
            - Agent
            - Contact
            - Company
            - Account
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Attached profile name
        explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying numeric value assigned to a profile utilized
          to fetch events associated to blocks linked to the profile.
        example:
        - "323816531"
        explode: true
        in: query
        name: attachedProfileId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Status Codes associated with the events to be fetched.
        example:
        - ACT
        - DEF
        explode: true
        in: query
        name: eventStatusCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Event Type Codes associated with the events to be fetched.
        example:
        - BRK
        - COF
        explode: true
        in: query
        name: eventTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - example:
        - SPACE01
        - SPACE02
        explode: true
        in: query
        name: functionSpaceCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates whether to include inactive events in search result.
        example: false
        in: query
        name: includeInactive
        schema:
          default: false
          type: boolean
      - description: Indicates whether to include the alternate events in the search
          result.
        example: false
        in: query
        name: includeAlternateEvents
        schema:
          default: false
          type: boolean
      - description: Indicates whether to include the sub events in the search result.
        example: false
        in: query
        name: includeSubEvents
        schema:
          default: false
          type: boolean
      - description: A collection of supported list of order by for search catering
          events.
        example: StartDateTimeAsc
        in: query
        name: cateringEventOrderBy
        schema:
          default: StartDateTimeAsc
          enum:
          - StartDateTimeAsc
          - StartDateTimeMasterSubAsc
          type: string
      - description: Instructions to fetch details information about the selected
          event. The BlocksInfo fetch instructions will retain a limited amount of
          data for the associated block.  The Indicators instruction will provide
          a count.
        example:
        - Indicators
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - EventDetails
            - BlocksInfo
            - Indicators
            - Notes
            - SubEventsInfo
            - AlternateEventsInfo
            - MasterEventInfo
            - Revenues
            - IncludeInactiveSubEventsInfo
            - IncludeInactiveMasterEventInfo
            - ActualEventDetails
            - EligibleMasterEventDetails
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        example: 200
        in: query
        name: limit
        schema:
          default: 200
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        example: 0
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partnerâ€™s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the eventEndDate
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/events'
            application/json:
              example:
                eventSummaries:
                  eventSummary:
                  - eventId:
                      id: "121294"
                    blockIdList:
                    - id: "18450"
                    blockName: ACME Convention
                    attendees: "10"
                    eventStatus:
                      status:
                        code: INQ
                        description: Inquiry
                      color: Cyan
                    cateringStatusType: Inquiry
                    cateringStatusDeductInventory: false
                    cateringStatusReturnToInventory: false
                    masterEvent: true
                    subEvent: false
                    packageEvent: true
                    alternateEvent: false
                    displayDoorCard: true
                    doorCard: ACME Convention
                    excludeFromForecast: false
                    useForecastRevenue: true
                    loudEvent: false
                    eventShared: false
                    shareable: false
                    packageCode: MTGBRK
                    packageName: Meeting Break Package
                    hotelId: TOKYO
                    blockHotelCode: TAIPEI
                    hasPostings: false
                    blockHasPostings: false
                    hasPartialPostings: false
                    allPosted: false
                    nothingPosted: false
                    eventStartDate: 2014-10-07 09:00:00.0
                    eventEndDate: 2014-10-07 18:00:00.0
                    type: MTG
                    eventName: Meeting
                    cateringCurrency: USD
                    cateringQuotedCurrency: USD
                  - eventId:
                      id: "108541"
                    eventLink:
                      id:
                        id: "1090"
                      type: SubEvent
                      masterEventDates:
                        startDateTime: 2015-12-05 12:00:00.0
                        endDateTime: 2015-12-05 13:00:00.0
                    blockIdList:
                    - id: "11298"
                    blockName: The Convention
                    attendees: "1"
                    functionSpaceCode:
                      code: ANNA
                      description: Annapolis Room
                    rentalAmount: "20"
                    functionSpaceSetup:
                      code: BOA
                      description: Boardroom Style
                    eventStatus:
                      status:
                        code: DEF
                        description: Definite-1
                      color: Red
                    cateringStatusDeductInventory: true
                    cateringStatusReturnToInventory: false
                    setupTime: "5"
                    tearDownTime: "5"
                    masterEvent: false
                    subEvent: true
                    packageEvent: false
                    alternateEvent: false
                    displayDoorCard: true
                    excludeFromForecast: false
                    useForecastRevenue: true
                    loudEvent: false
                    rentalCode: FULL
                    eventShared: false
                    shareable: false
                    hotelId: TOKYO
                    blockHotelCode: TOKYO
                    hasPostings: false
                    blockHasPostings: false
                    hasPartialPostings: false
                    allPosted: false
                    nothingPosted: false
                    eventStartDate: 2015-12-05 09:00:00.0
                    eventEndDate: 2015-12-05 18:00:00.0
                    type: MTG
                    eventName: Meeting
                    cateringCurrency: USD
                    cateringQuotedCurrency: USD
                  - eventId:
                      id: "1090"
                    blockIdList:
                    - id: "11298"
                    blockName: The Convention
                    attendees: "1"
                    eventStatus:
                      status:
                        code: DEF
                        description: Definite-1
                      color: Red
                    cateringStatusDeductInventory: true
                    cateringStatusReturnToInventory: false
                    masterEvent: true
                    subEvent: false
                    packageEvent: false
                    alternateEvent: false
                    displayDoorCard: true
                    doorCard: The Convention
                    excludeFromForecast: false
                    useForecastRevenue: false
                    loudEvent: false
                    eventShared: false
                    shareable: false
                    hotelId: TOKYO
                    blockHotelCode: TOKYO
                    hasPostings: false
                    blockHasPostings: false
                    hasPartialPostings: false
                    allPosted: false
                    nothingPosted: false
                    eventStartDate: 2015-12-05 12:00:00.0
                    eventEndDate: 2015-12-05 13:00:00.0
                    type: LUN
                    eventName: Lunch
                    cateringCurrency: USD
                    cateringQuotedCurrency: USD
                  - eventId:
                      type: EventId
                      idContext: OPERA
                      id: "401315"
                    blockIdList:
                    - id: "251730"
                      type: Block
                    blockName: 27 issue
                    attendees: "11"
                    functionSpaceDetails:
                      code: ANNA
                      description: Annapolis Room
                    rentalAmount: "122"
                    functionSpaceSetup:
                      code: CON
                      description: Conference
                    eventStatus:
                      status:
                        code: ACT
                        description: Actual
                      color: Brown
                    cateringStatusType: Actual
                    cateringStatusDeductInventory: true
                    cateringStatusReturnToInventory: false
                    setupTime: "0"
                    tearDownTime: "0"
                    masterEvent: false
                    subEvent: false
                    packageEvent: false
                    alternateEvent: false
                    displayDoorCard: true
                    doorCard: 27 issue
                    excludeFromForecast: false
                    minimumOccupancy: "1"
                    maximumOccupancy: "55"
                    loudEvent: false
                    rentalCode: CMP
                    eventShared: false
                    shareable: false
                    hotelId: TOKYO
                    blockHotelCode: TOKYO
                    hasPostings: false
                    blockHasPostings: false
                    hasPartialPostings: false
                    allPosted: false
                    nothingPosted: true
                    eventStartDate: 2017-01-06 09:00:00.0
                    eventEndDate: 2017-01-06 18:00:00.0
                    type: MTG
                    eventName: Meeting
                    cateringCurrency: USD
                    cateringQuotedCurrency: EUR
                  totalPages: "1000"
                  offset: "4"
                  limit: "4"
                  hasMore: false
                  totalResults: "1000"
          description: Response object for fetching events.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: EventsMultipleHotels not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Events '
      tags:
      - EventManagement
  /hotels/{hotelId}/events:
    get:
      description: "This API fetches catering events for a specific hotel, based on\
        \ search criteria such as dates, linked block, status, function space, and\
        \ more. The data returned in the result contains, event type, description,\
        \ dates and times, attendees, function space, setup style and more. <p><strong>OperationId:</strong>getEventsOneHotel</p>"
      operationId: getEventsOneHotel
      parameters:
      - description: Unique ID of a hotel
        example: BHOTEL
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: The starting value of the date range.
        example: 2020-12-30
        in: query
        name: eventStartDate
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        example: 2020-12-30
        in: query
        name: eventEndDate
        schema:
          format: date
          type: string
      - description: Block ID linked to the Catering Event
        explode: true
        in: query
        name: blockId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique ID for the catering event
        example:
        - "823814534"
        explode: true
        in: query
        name: eventId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying numeric value assigned to a profile utilized
          to fetch events associated to blocks linked to the profile.
        example: "323816531"
        in: query
        name: attachedProfileId
        schema:
          type: string
      - description: Status Codes associated with the events to be fetched.
        example:
        - ACT
        - DEF
        explode: true
        in: query
        name: eventStatusCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Event Type Codes associated with the events to be fetched.
        example:
        - BRK
        - COF
        explode: true
        in: query
        name: eventTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - example:
        - SPACE01
        - SPACE02
        explode: true
        in: query
        name: functionSpaceCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates whether to include inactive events in search result.
        example: false
        in: query
        name: includeInactive
        schema:
          default: false
          type: boolean
      - description: Indicates whether to include the alternate events in the search
          result.
        example: false
        in: query
        name: includeAlternateEvents
        schema:
          default: false
          type: boolean
      - description: Indicates whether to include the sub events in the search result.
        example: false
        in: query
        name: includeSubEvents
        schema:
          default: false
          type: boolean
      - description: A collection of supported list of order by for search catering
          events.
        example: StartDateTimeAsc
        in: query
        name: cateringEventOrderBy
        schema:
          default: StartDateTimeAsc
          enum:
          - StartDateTimeAsc
          - StartDateTimeMasterSubAsc
          type: string
      - description: Instruction to fetch all eligible master events for the selected
          event
        example:
        - Indicators
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - EventDetails
            - BlocksInfo
            - Indicators
            - Notes
            - SubEventsInfo
            - AlternateEventsInfo
            - MasterEventInfo
            - Revenues
            - IncludeInactiveSubEventsInfo
            - IncludeInactiveMasterEventInfo
            - ActualEventDetails
            - EligibleMasterEventDetails
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        example: 200
        in: query
        name: limit
        schema:
          default: 200
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        example: 0
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partnerâ€™s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the eventEndDate
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/events'
            application/json:
              example:
                eventSummaries:
                  eventSummary:
                  - eventId:
                      id: "121294"
                    blockIdList:
                    - id: "18450"
                    blockName: ACME Convention
                    attendees: "10"
                    eventStatus:
                      status:
                        code: INQ
                        description: Inquiry
                      color: Cyan
                    cateringStatusType: Inquiry
                    cateringStatusDeductInventory: false
                    cateringStatusReturnToInventory: false
                    masterEvent: true
                    subEvent: false
                    packageEvent: true
                    alternateEvent: false
                    displayDoorCard: true
                    doorCard: ACME Convention
                    excludeFromForecast: false
                    useForecastRevenue: true
                    loudEvent: false
                    eventShared: false
                    shareable: false
                    packageCode: MTGBRK
                    packageName: Meeting Break Package
                    hotelId: TOKYO
                    blockHotelCode: TAIPEI
                    hasPostings: false
                    blockHasPostings: false
                    hasPartialPostings: false
                    allPosted: false
                    nothingPosted: false
                    eventStartDate: 2014-10-07 09:00:00.0
                    eventEndDate: 2014-10-07 18:00:00.0
                    type: MTG
                    eventName: Meeting
                    cateringCurrency: USD
                    cateringQuotedCurrency: USD
                  - eventId:
                      id: "108541"
                    eventLink:
                      id:
                        id: "1090"
                      type: SubEvent
                      masterEventDates:
                        startDateTime: 2015-12-05 12:00:00.0
                        endDateTime: 2015-12-05 13:00:00.0
                    blockIdList:
                    - id: "11298"
                    blockName: The Convention
                    attendees: "1"
                    functionSpaceCode:
                      code: ANNA
                      description: Annapolis Room
                    rentalAmount: "20"
                    functionSpaceSetup:
                      code: BOA
                      description: Boardroom Style
                    eventStatus:
                      status:
                        code: DEF
                        description: Definite-1
                      color: Red
                    cateringStatusDeductInventory: true
                    cateringStatusReturnToInventory: false
                    setupTime: "5"
                    tearDownTime: "5"
                    masterEvent: false
                    subEvent: true
                    packageEvent: false
                    alternateEvent: false
                    displayDoorCard: true
                    excludeFromForecast: false
                    useForecastRevenue: true
                    loudEvent: false
                    rentalCode: FULL
                    eventShared: false
                    shareable: false
                    hotelId: TOKYO
                    blockHotelCode: TOKYO
                    hasPostings: false
                    blockHasPostings: false
                    hasPartialPostings: false
                    allPosted: false
                    nothingPosted: false
                    eventStartDate: 2015-12-05 09:00:00.0
                    eventEndDate: 2015-12-05 18:00:00.0
                    type: MTG
                    eventName: Meeting
                    cateringCurrency: USD
                    cateringQuotedCurrency: USD
                  - eventId:
                      id: "1090"
                    blockIdList:
                    - id: "11298"
                    blockName: The Convention
                    attendees: "1"
                    eventStatus:
                      status:
                        code: DEF
                        description: Definite-1
                      color: Red
                    cateringStatusDeductInventory: true
                    cateringStatusReturnToInventory: false
                    masterEvent: true
                    subEvent: false
                    packageEvent: false
                    alternateEvent: false
                    displayDoorCard: true
                    doorCard: The Convention
                    excludeFromForecast: false
                    useForecastRevenue: false
                    loudEvent: false
                    eventShared: false
                    shareable: false
                    hotelId: TOKYO
                    blockHotelCode: TOKYO
                    hasPostings: false
                    blockHasPostings: false
                    hasPartialPostings: false
                    allPosted: false
                    nothingPosted: false
                    eventStartDate: 2015-12-05 12:00:00.0
                    eventEndDate: 2015-12-05 13:00:00.0
                    type: LUN
                    eventName: Lunch
                    cateringCurrency: USD
                    cateringQuotedCurrency: USD
                  - eventId:
                      type: EventId
                      idContext: OPERA
                      id: "401315"
                    blockIdList:
                    - id: "251730"
                      type: Block
                    blockName: 27 issue
                    attendees: "11"
                    functionSpaceDetails:
                      code: ANNA
                      description: Annapolis Room
                    rentalAmount: "122"
                    functionSpaceSetup:
                      code: CON
                      description: Conference
                    eventStatus:
                      status:
                        code: ACT
                        description: Actual
                      color: Brown
                    cateringStatusType: Actual
                    cateringStatusDeductInventory: true
                    cateringStatusReturnToInventory: false
                    setupTime: "0"
                    tearDownTime: "0"
                    masterEvent: false
                    subEvent: false
                    packageEvent: false
                    alternateEvent: false
                    displayDoorCard: true
                    doorCard: 27 issue
                    excludeFromForecast: false
                    minimumOccupancy: "1"
                    maximumOccupancy: "55"
                    loudEvent: false
                    rentalCode: CMP
                    eventShared: false
                    shareable: false
                    hotelId: TOKYO
                    blockHotelCode: TOKYO
                    hasPostings: false
                    blockHasPostings: false
                    hasPartialPostings: false
                    allPosted: false
                    nothingPosted: true
                    eventStartDate: 2017-01-06 09:00:00.0
                    eventEndDate: 2017-01-06 18:00:00.0
                    type: MTG
                    eventName: Meeting
                    cateringCurrency: USD
                    cateringQuotedCurrency: EUR
                  totalPages: "1000"
                  offset: "4"
                  limit: "4"
                  hasMore: false
                  totalResults: "1000"
          description: Response object for fetching events.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: EventsOneHotel not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Events '
      tags:
      - EventManagement
  /hotels/{hotelId}/events/{eventId}:
    get:
      description: "This API will allow you to retrieve the details of one event by\
        \ specifying the event ID in the path. Event details such as event type, event\
        \ description, start date / time and end date time, attendees, function space,\
        \ setup style, function space rate, and more  will be returned. You can also\
        \ add fetch instructions to specify what additional event data, such as block\
        \ information, revenue information, event notes, and master / sub event information\
        \ you would like returned in the response. If you don&apos;t know the eventID,\
        \ please use getEvents API to find the event and its respective eventID. <p><strong>OperationId:</strong>getEvent</p>"
      operationId: getEvent
      parameters:
      - description: Unique ID of the event
        example: "3700516"
        in: path
        name: eventId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of a hotel
        example: BHOTEL
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Instruction to fetch all eligible master events for the selected
          event
        example:
        - Indicators
        - Notes
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - EventDetails
            - BlocksInfo
            - Indicators
            - Notes
            - AlternateEventsInfo
            - SubEventsInfo
            - MasterEventInfo
            - Revenues
            - IncludeInactiveSubEventsInfo
            - IncludeInactiveMasterEventInfo
            - ActualEventDetails
            - EligibleMasterEventDetails
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partnerâ€™s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the eventEndDate
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/event'
            application/json:
              example:
                eventDetails:
                - eventPrimaryInfo:
                    eventId:
                      id: "238039"
                    hotelId: HOTEL1
                  eventDetail:
                    eventName:
                      defaultText: Breakfast - Buffet and Meeting
                    eventType: BRKFTB
                    eventTimeSpan:
                      startDateTime: 2020-02-20 06:00:00.0
                      endDateTime: 2020-02-20 07:00:00.0
                    eventStatus:
                      status:
                        code: INQ
                    attendees:
                      expected: "10"
                    doorcard: Buffet Breakfast
                    masterEvent: true
                    subEvent: false
                    packageEvent: false
                    alternateEvent: false
                    notMoveable: false
                    loudEvent: false
                    hasPostings: false
                    displayDoorcard: true
                    cateringDeductInventory: false
                    eventShared: false
                    createDateTime: 2020-03-31 10:30:38.0
                    creatorId: BEN@SFIRST
                    lastModifyDateTime: 2020-07-13 01:47:29.0
                    lastModifierId: SAM@VAFIRST
                    includeSpaceInPackage: false
                    eventLevelRevenueActualization: true
                  eventBlockInfo:
                    blockIdList:
                    - id: "427673"
                    blockDetails:
                      blockCode: 180220DIVB
                      blockName: First Company Block with Events
                      blockDates:
                        startDate: 2020-02-20
                        endDate: 2020-02-26
                    blockProfiles:
                      fullOverlay: false
                    hotelId: HOTEL1
                  functionSpaceInformation:
                    functionSpaceCode: "103"
                    functionSpaceDescription: Conway Room
                    setupCode: CON
                    setupDescription: Conference Room
                    setupTime: "7"
                    setdownTime: "0"
                    rentalCode: CUSTOM
                    minimumOccupancy: "1"
                    maximumOccupancy: "20"
                    shareable: false
                  eventNotes:
                  - noteId:
                      id: "57013"
                    noteCode: CH
                    internal: true
                    noteTitle: Change
                    comment: Change Notes
                    createDateTime: 2020-05-14 02:23:23.0
                    creatorId: JEN@SFIRST
                    lastModifyDateTime: 2020-05-14 02:23:23.0
                    lastModifierId: JEN@SFIRST
                  - noteId:
                      id: "57014"
                    noteCode: CH
                    internal: false
                    noteTitle: Change
                    comment: "Change comment: non internal Event"
                    createDateTime: 2020-05-14 02:23:50.0
                    creatorId: JEN@SFIRST
                    lastModifyDateTime: 2020-05-14 02:23:50.0
                    lastModifierId: JEN@SFIRST
                  onTheBooksRevenue:
                    amount: "250"
          description: Response object for fetching event.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Event not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get an Event
      tags:
      - EventManagement
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partnerâ€™s Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the eventEndDate
        user is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    events:
      description: Response object for fetching events.
      properties:
        eventSummaries:
          $ref: '#/components/schemas/eventSummariesInfoType'
        masterInfoList:
          description: Refer to Generic common types document
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success elementSpace to define
            a business error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eventSummariesInfoType:
      description: Collection of events.
      properties:
        eventSummary:
          description: Contains master/sub-events or standalone events summary information
          items:
            $ref: '#/components/schemas/eventSummaryInfoType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    eventSummaryInfoType:
      description: Contains information about an event.
      properties:
        eventId:
          $ref: '#/components/schemas/eventId'
        eventLink:
          $ref: '#/components/schemas/cateringEventLinkType'
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        blockName:
          description: Name of the block.
          maxLength: 2000
          minLength: 0
          type: string
        attendees:
          description: Number of event attendees.
          type: integer
        functionSpaceDetails:
          $ref: '#/components/schemas/codeDescriptionType'
        rentalAmount:
          description: Rental amount for the event function space.
          type: number
        functionSpaceSetup:
          $ref: '#/components/schemas/codeDescriptionType'
        indicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        eventStatus:
          $ref: '#/components/schemas/bookingStatusType'
        waitlistReturnStatus:
          $ref: '#/components/schemas/bookingStatusType'
        cateringStatusType:
          $ref: '#/components/schemas/cateringStatusTypeType'
        cateringStatusDeductInventory:
          description: Flag to indicate if the Catering event deducts resources from
            inventory.
          type: boolean
        cateringStatusReturnToInventory:
          description: Flag to indicate if the Catering event returns resources to
            inventory.
          type: boolean
        setupTime:
          description: Event space setupCode time in minutes.
          type: integer
        tearDownTime:
          description: Event space tear down time in minutes.
          type: integer
        masterEvent:
          description: Flag to indicate if the event is a master event.
          type: boolean
        subEvent:
          description: Flag to indicate if the event is a sub event.
          type: boolean
        packageEvent:
          description: Flag to indicate if the event is part of a package.
          type: boolean
        alternateEvent:
          description: Flag to indicate if the event is booked as a backup for another
            event.
          type: boolean
        displayDoorCard:
          description: Flag to indicate if the doorcard has been selected to display
            on reports or external readerboard systems.
          type: boolean
        doorCard:
          description: The doorcard to be displayed on reports or external readerboard
            systems.
          maxLength: 60
          minLength: 0
          type: string
        excludeFromForecast:
          description: Flag to indicate if the event revenue should be excluded from
            the forecast.
          type: boolean
        useForecastRevenue:
          description: "Flag to indicate whether to only use the forecasted values\
            \ when reporting, regardless of whether resources are booked on an event."
          type: boolean
        setupCode:
          description: Setup style code.
          maxLength: 20
          minLength: 0
          type: string
        minimumOccupancy:
          description: Minimum Occupancy for the SetupCode of Catring Event.
          type: integer
        maximumOccupancy:
          description: Maximum Occupancy for the SetupCode of Catring Event.
          type: integer
        discountPercentage:
          description: Discount Percentage applied to Rent Amount.
          maximum: 100
          minimum: 0
          type: number
        loudEvent:
          description: Indicates whether the event is expected to be noisy and might
            possibly disturb other events.
          type: boolean
        rentalCode:
          description: Rate Code for function space.
          maxLength: 20
          minLength: 0
          type: string
        eventShared:
          description: Flag to indicate if the event is shareable with other events.
          type: boolean
        shareable:
          description: Flag to indicate if the event functionSpaceDetails is shareable.
          type: boolean
        inactiveDate:
          description: Inactivation date of the event.
          format: date
          type: string
        packageCode:
          description: Package Code of the Event if it has a Package Enabled in it.
          maxLength: 20
          minLength: 0
          type: string
        packageName:
          description: Package Name of the Event.
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: Hotel where the event is booked.
          maxLength: 20
          minLength: 0
          type: string
        blockHotelCode:
          description: Hotel where the Block is created for the event.
          maxLength: 20
          minLength: 0
          type: string
        hasPostings:
          description: Indicates whether the event has postings.
          type: boolean
        blockHasPostings:
          description: Indicates whether any event in the block has postings.
          type: boolean
        hasPartialPostings:
          description: "Indicates whether the event has posted some charges, but not\
            \ all."
          type: boolean
        allPosted:
          description: Indicates whether the event has posted all charges.
          type: boolean
        nothingPosted:
          description: Indicates that none of the charges on the event have been posted.
          type: boolean
        eventStartDate:
          description: The starting value of the time span.
          format: date-time
          type: string
        eventEndDate:
          description: The ending value of the time span.
          format: date-time
          type: string
        type:
          description: "Type of event. Examples are LUN, DIN, etc."
          maxLength: 20
          minLength: 0
          type: string
        eventName:
          description: Name of event. This is used to describe the event.
          maxLength: 60
          minLength: 0
          type: string
        cateringCurrency:
          description: Currency code when base currency of the property is different
            than the catering currency.
          maxLength: 3
          minLength: 3
          type: string
        cateringQuotedCurrency:
          description: Currency code which is been quoted for Catering Events
          maxLength: 3
          minLength: 3
          type: string
        eventIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
      type: object
    eventId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 20
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    cateringEventLinkType:
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        type:
          $ref: '#/components/schemas/cateringEventLinkTypeType'
        masterEventDates:
          $ref: '#/components/schemas/dateTimeSpanType'
      type: object
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    cateringEventLinkTypeType:
      description: A collection of supported list of link types for catering events.
      enum:
      - SubEvent
      - Alternate
      type: string
    dateTimeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield eventEndDate date."
      properties:
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
      type: object
    blockIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    indicatorsType:
      description: Collection of lamp indicators.
      items:
        $ref: '#/components/schemas/indicatorType'
      maxItems: 4000
      type: array
    indicatorType:
      description: Lamp indicator Type.
      properties:
        indicatorName:
          description: Name of the indicator.
          maxLength: 80
          minLength: 0
          type: string
        count:
          description: Indicates number of occurrences of the indicator.
          type: integer
      type: object
    bookingStatusType:
      description: "Booking status code, description and configured color of the status.\
        \ This will be used for block and event statuses."
      properties:
        status:
          $ref: '#/components/schemas/codeDescriptionType'
        color:
          $ref: '#/components/schemas/statusColorType'
      type: object
    statusColorType:
      description: Status code color configuration type.
      enum:
      - White
      - Red
      - Blue
      - Cyan
      - Magenta
      - Green
      - Brown
      - Black
      - Yellow
      - Gray
      type: string
    cateringStatusTypeType:
      description: List of Event Status Types to identify the current status of catering
        events.
      enum:
      - Waitlist
      - Regret
      - Inquiry
      - Cancel
      - Actual
      - Referral
      - Lost
      type: string
    masterInfoType:
      properties:
        codeInfo:
          items:
            $ref: '#/components/schemas/codeInfoType'
          maxItems: 4000
          type: array
        codeType:
          $ref: '#/components/schemas/masterType'
      type: object
    codeInfoType:
      description: ""
      properties:
        description:
          maxLength: 80
          minLength: 0
          type: string
        addtionalCodeInfo:
          description: Holds name of additional code information
          items:
            $ref: '#/components/schemas/addtionalCodeInfoType_inner'
          maxItems: 4000
          type: array
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    addtionalCodeInfoType:
      description: Holds name of additional code information
      items:
        $ref: '#/components/schemas/addtionalCodeInfoType_inner'
      maxItems: 4000
      type: array
    masterInfoCodeDetailType:
      enum:
      - LongDescription
      - ShortDescription
      type: string
    masterType:
      enum:
      - Country
      - State
      - AddressType
      - PhoneType
      - RateCategory
      - CalculationRule
      - PostingRythym
      - BillingInstruction
      - TransactionCode
      - DisplaySet
      - MailingActions
      - DistanceType
      - District
      - Territory
      - FiscalRegion
      - InventoryItem
      - Package
      - RoomFeaturePreference
      - SpecialPreference
      - Promotion
      - Department
      - ReservationPreference
      - FacilityTask
      - RoomType
      - RateCode
      - OutOfOrderReason
      - Block
      type: string
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    warningsType:
      description: Used in conjunction with the Success elementSpace to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning elementSpace MUST contain the Type attribute that
            uses a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    event:
      description: Object containing details of the event.
      properties:
        eventDetails:
          description: Pertain event information.
          items:
            $ref: '#/components/schemas/eventInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success elementSpace to define
            a business error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eventsInfoType:
      description: Pertain event information.
      items:
        $ref: '#/components/schemas/eventInfoType'
      maxItems: 4000
      type: array
    eventInfoType:
      description: Catering Event information.
      properties:
        eventPrimaryInfo:
          $ref: '#/components/schemas/eventPrimaryInfoType'
        eventDetail:
          $ref: '#/components/schemas/eventDetailType'
        eventResources:
          description: Event resources information.
          items:
            $ref: '#/components/schemas/cateringEventResourceType'
          maxItems: 4000
          type: array
        processInstructions:
          $ref: '#/components/schemas/eventProcessInstructionsType'
        eventBlockInfo:
          $ref: '#/components/schemas/blockType'
        functionSpaceInformation:
          $ref: '#/components/schemas/eventFunctionSpaceType'
        eventNotes:
          description: Pertain event information.
          items:
            $ref: '#/components/schemas/eventNoteType'
          maxItems: 4000
          type: array
        eventIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        onTheBooksRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        subEventsDetail:
          description: Pertain event few information about events.
          items:
            $ref: '#/components/schemas/lightEventDetailType'
          maxItems: 4000
          type: array
        altEventsDetail:
          description: Pertain event few information about events.
          items:
            $ref: '#/components/schemas/lightEventDetailType'
          maxItems: 4000
          type: array
        masterEventDetail:
          $ref: '#/components/schemas/lightEventDetailType'
        eventRevenues:
          $ref: '#/components/schemas/eventRevenuesInformationType'
      type: object
    eventPrimaryInfoType:
      description: Pertain event identifications.
      properties:
        eventId:
          $ref: '#/components/schemas/eventId'
        hotelId:
          description: Hotel code where event will be organized.
          maxLength: 20
          minLength: 0
          type: string
        includeSubEvents:
          description: Indicates whether to delete/inactive the sub event(s) of the
            master event.
          type: boolean
      type: object
    eventDetailType:
      description: Pertain Information about the Event Details
      properties:
        eventName:
          $ref: '#/components/schemas/translationTextType60'
        eventType:
          description: Type of event.
          maxLength: 20
          minLength: 0
          type: string
        eventTimeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        eventStatus:
          $ref: '#/components/schemas/bookingStatusType'
        waitlistReturnStatus:
          $ref: '#/components/schemas/bookingStatusType'
        cateringStatusType:
          $ref: '#/components/schemas/cateringStatusTypeType'
        attendees:
          $ref: '#/components/schemas/cateringEventsAttendeesType'
        masterEventId:
          $ref: '#/components/schemas/uniqueID_Type'
        doorcard:
          description: It is the group details to display on the outside of a meeting
            functionSpaceDetails.
          maxLength: 50
          minLength: 0
          type: string
        eventLink:
          $ref: '#/components/schemas/cateringEventLinkType'
        inactiveDate:
          description: Inactivation date of the event.
          format: date
          type: string
        packageId:
          description: Package Id of the Event.
          type: integer
        packageName:
          description: Package Name of the Event.
          maxLength: 200
          minLength: 0
          type: string
        masterEvent:
          description: Indicates whether event is master event.
          type: boolean
        subEvent:
          description: Flag to indicate if the event is a sub event.
          type: boolean
        packageEvent:
          description: Flag to indicate if the event is part of a package.
          type: boolean
        alternateEvent:
          description: Flag to indicate if the event is booked as a backup for another
            event.
          type: boolean
        waitlisted:
          description: Indicates whether event is wait listed.
          type: boolean
        notMoveable:
          description: Indicates whether event dates and functionSpaceDetails are
            move able.
          type: boolean
        loudEvent:
          description: Indicates whether the event is expected to be noisy and might
            possibly disturb other events.
          type: boolean
        hasPostings:
          description: Indicates whether the events has postings.
          type: boolean
        displayDoorcard:
          description: Indicates whether display the doorcard information on the Event
            Overview report.
          type: boolean
        cateringDeductInventory:
          description: Indicates if catering event's spaces are deducted from inventory
          type: boolean
        eventShared:
          description: Flag to indicate if the event is shareable with other events.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        includeSpaceInPackage:
          description: Flag to indicate if the event space is associated from the
            Package
          type: boolean
        eventLevelRevenueActualization:
          description: Flag that indicates if actual revenue can be manually edited.
          type: boolean
      type: object
    translationTextType60:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 60.
          maxLength: 60
          minLength: 0
          type: string
        translations:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    translationsTextType:
      description: Language code for the translation.
      items:
        $ref: '#/components/schemas/translationsTextType_inner'
      maxItems: 4000
      type: array
    cateringEventsAttendeesType:
      description: All different attendees that a catering event can have.
      properties:
        expected:
          description: Number of expected attendees for the catering event.
          type: integer
        guaranteed:
          description: Number of guaranteed attendees for the catering event.
          type: integer
        actual:
          description: Number of actual attendees attending to the catering event.
          type: integer
        set:
          description: "Setup for number of event attendees for resources (i.e. water,\
            \ pads, tables, etc.)."
          type: integer
        billed:
          description: This defines the count of billed attendees with respect to
            the menu.
          type: integer
        packageExpected:
          description: Number of package expected attendees for the catering event.
          type: integer
        packageGuaranteed:
          description: Number of package guaranteed attendees for the catering event.
          type: integer
        packageActual:
          description: Number of actual package attendees attending the catering event.
          type: integer
        packageBilled:
          description: This defines the count of package billed attendees with respect
            to the menu.
          type: integer
      type: object
    eventResourcesListType:
      description: Event resources information.
      items:
        $ref: '#/components/schemas/cateringEventResourceType'
      maxItems: 4000
      type: array
    cateringEventResourceType:
      description: Event resource information.
      properties:
        resourceId:
          $ref: '#/components/schemas/resourceId'
        resourceType:
          $ref: '#/components/schemas/resourceType'
        resourceName:
          description: "Resource name, this could be a resource item or a menu."
          maxLength: 200
          minLength: 0
          type: string
        setupCode:
          description: Setup style for the function space.
          maxLength: 20
          minLength: 0
          type: string
        itemAttribute:
          description: Item attribute name for non Food and Beverage item.
          maxLength: 200
          minLength: 0
          type: string
        quantity:
          description: The required quantity of the resource.
          type: number
        hours:
          description: The number of charged hours for the resource.
          type: number
        persons:
          description: The number of charged persons for the resource.
          type: number
        quantityIncluded:
          description: The attendees/quantity of an item INCLUDED in a package price.
          type: number
        quantityExcluded:
          description: "The attendees/quantity charged extra, EXCLUDED from the package\
            \ price."
          type: number
        unitPrice:
          $ref: '#/components/schemas/currencyAmountType'
        revenue:
          $ref: '#/components/schemas/currencyAmountType'
        rentalCode:
          description: Rate Code that is attached to the function spaces and non Food
            and Beverage items
          maxLength: 20
          minLength: 0
          type: string
        discount:
          description: The menu discount percentage.
          type: number
        eventResourceNotes:
          description: Contains event resource comment information.
          items:
            $ref: '#/components/schemas/eventResourceNoteType'
          maxItems: 4000
          type: array
        sellStartDate:
          description: Sell Start Date of resource of type Menu.
          format: date
          type: string
        sellEndDate:
          description: Sell End Date of resource of type Menu.
          format: date
          type: string
        eventStartDate:
          description: Event Start Date of resource of type Menu.
          format: date
          type: string
        eventEndDate:
          description: Event End Date of resource of type Menu.
          format: date
          type: string
        consumptionBased:
          description: Indicates that this resource is consumption based in a catering
            package
          type: boolean
        multiChoice:
          description: Indicates that this resource is a MultiChoice Menu or not
          type: boolean
        hotelId:
          description: Hotel code which the event resource belong to.
          maxLength: 20
          minLength: 0
          type: string
        order:
          description: The order of the resource in the Banquet Event Order within
            their specific resource group.
          type: string
        hasDiscountMenuItem:
          description: Flag that indicates if at least one menu item has a discount.
          type: boolean
        hasNotes:
          description: Flag that indicates the resource has notes associated with
            it.
          type: boolean
        external:
          description: Indicates that item must be ordered externally.
          type: boolean
        custom:
          description: Indicates that this resource item is a custom item added for
            this event.
          type: boolean
        packaged:
          description: Indicates that this resource is included in a catering package.
          type: boolean
      type: object
    resourceId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    resourceType:
      description: List of resource types.
      enum:
      - FunctionSpace
      - Menu
      - Item
      type: string
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    eventResourceNotesType:
      description: Contains event resource comment information.
      items:
        $ref: '#/components/schemas/eventResourceNoteType'
      maxItems: 4000
      type: array
    eventResourceNoteType:
      description: Contains the event resource's comment information.
      properties:
        noteId:
          $ref: '#/components/schemas/uniqueID_Type'
        noteCode:
          description: Note code.
          maxLength: 20
          minLength: 0
          type: string
        internal:
          description: Indicates if the comment is internal use only.
          type: boolean
        noteTitle:
          description: Contains comment title.
          maxLength: 200
          minLength: 0
          type: string
        comment:
          description: Contains comment text.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Contains display sequence.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    eventProcessInstructionsType:
      description: Instructions to control how the event is created.
      properties:
        overrideCapacity:
          description: Flag to indicate if configured function space capacity can
            be overriden.
          type: boolean
        overbook:
          description: Flag to indicate if the function space can be booked when it
            is occupied by another event.
          type: boolean
        shareable:
          description: Flag to indicate if the function space can be booked as shareable
            with another event.
          type: boolean
        overrideMaxgroups:
          description: Flag to indicate if maximum group configured in function space
            can be overriden.
          type: boolean
        waitList:
          description: Flag to indicate if the event can be waitlisted when function
            space is not available.
          type: boolean
        warnFunctionSpace:
          description: Flag to return a warning when the functionspace is being used
            by other catering event.
          type: boolean
        convertToSubEvent:
          description: Flag to indicate that the Event is being converted from Regular
            Event as a Sub Event linking to a Master Event.
          type: boolean
        convertToRegularEvent:
          description: Flag to indicate that the Event is being converted from Sub
            Event as a Regular Event.
          type: boolean
        quickEvent:
          description: Flag to indicate that both Block and Event would be created
            as part of the Quick Event process.
          type: boolean
      type: object
    blockType:
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        blockDetails:
          $ref: '#/components/schemas/blockDetailsType'
        blockOwners:
          $ref: '#/components/schemas/blockOwnersType'
        catering:
          $ref: '#/components/schemas/cateringType'
        blockProfiles:
          $ref: '#/components/schemas/blockType_blockProfiles'
        inventoryItems:
          description: Inventory item attached to a block.
          items:
            $ref: '#/components/schemas/blockInventoryItemType'
          maxItems: 4000
          type: array
        blockStatistics:
          $ref: '#/components/schemas/blockStatisticsType'
        comments:
          $ref: '#/components/schemas/blockType_comments'
        blockIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        traces:
          description: List of Block traces.
          items:
            $ref: '#/components/schemas/blockTraceType'
          maxItems: 4000
          type: array
        statistics:
          description: "Statistics summary information including Rooms Sold, Room\
            \ Revenue, Food and Beverage Revenue, Average Room Rate,etc."
          items:
            $ref: '#/components/schemas/blockStatisticsSummaryType'
          maxItems: 3
          type: array
        blockSecurity:
          $ref: '#/components/schemas/blockType_blockSecurity'
        sellMessages:
          $ref: '#/components/schemas/sellMessageConfigsType'
        attachments:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        washSchedules:
          description: "Wash Schedule attached to the block, which allows to release\
            \ inventory based on selected wash schedule type."
          items:
            $ref: '#/components/schemas/blockWashScheduleType'
          maxItems: 4000
          type: array
        restrictions:
          $ref: '#/components/schemas/blockRestrictionsType'
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        markAsRecentlyAccessed:
          description: Mark this block as recently accessed.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    externalReferencesType:
      description: This type contains unique information of external reference.
      items:
        $ref: '#/components/schemas/externalReferenceType'
      maxItems: 4000
      type: array
    externalReferenceType:
      description: This type contains unique information of external reference.
      properties:
        id:
          description: Unique ID of external reference.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: ID extension for external reference.
          type: integer
        idContext:
          description: ID context for external reference.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    blockDetailsType:
      description: Information about the Block Details
      properties:
        blockCode:
          description: Block code for the block.
          maxLength: 20
          minLength: 0
          type: string
        blockName:
          description: Name of the block.
          maxLength: 2000
          minLength: 0
          type: string
        blockDates:
          $ref: '#/components/schemas/timeSpanType'
        shoulderDates:
          $ref: '#/components/schemas/timeSpanType'
        blockStatus:
          $ref: '#/components/schemas/bookingStatusDetailType'
        reservationType:
          $ref: '#/components/schemas/reservationTypeInfoType'
        marketCode:
          $ref: '#/components/schemas/marketCodeInfoType'
        sourceOfSale:
          $ref: '#/components/schemas/blockSourceOfSaleType'
        bookingType:
          $ref: '#/components/schemas/codeDescriptionType'
        status:
          description: Internal status for the block.
          maxLength: 20
          minLength: 0
          type: string
        blockType:
          description: Internal type of the block.
          maxLength: 20
          minLength: 0
          type: string
        conversionCode:
          description: Indicates the likelihood description of the block moving to
            the next active block status.
          maxLength: 20
          minLength: 0
          type: string
        conversionCodeDescription:
          description: Indicates the likelihood of the block moving to the next active
            block status.
          maxLength: 2000
          minLength: 0
          type: string
        rateProtectionDetails:
          $ref: '#/components/schemas/blockRateProtectionType'
        nonCompeteDetails:
          $ref: '#/components/schemas/blockNonCompeteType'
        rankingCode:
          description: Indicates the ranking of the block.
          maxLength: 20
          minLength: 0
          type: string
        rankingCodeDescription:
          description: Indicates the ranking description of the block.
          maxLength: 2000
          minLength: 0
          type: string
        currencyCode:
          description: Currency Code attached to the business block.
          maxLength: 20
          minLength: 0
          type: string
        hotelName:
          description: A text field used to communicate the proper name of the hotel.
          maxLength: 80
          minLength: 0
          type: string
        blockClassification:
          $ref: '#/components/schemas/blockClassificationType'
        primaryOwners:
          $ref: '#/components/schemas/blockDetailsType_primaryOwners'
        primaryProfiles:
          $ref: '#/components/schemas/blockDetailsType_primaryProfiles'
        cateringOnlyBlock:
          description: Indicates if this is a catering only block.
          type: boolean
        flexibleDates:
          description: Indicates if alternate dates are allowed for the booking.
          type: boolean
        externalLocked:
          description: Indicates if the block is locked by an external system.
          type: boolean
      type: object
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield eventEndDate date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
      type: object
    bookingStatusDetailType:
      description: Booking Status details of the business block.
      properties:
        bookingStatus:
          $ref: '#/components/schemas/bookingStatusType'
        deductInventory:
          description: Indicates if blocked rooms are deducted from inventory.
          type: boolean
        cateringDeductInventory:
          description: Indicates if catering event's spaces are deducted from inventory
          type: boolean
        returnToInventory:
          description: Indicates if blocked rooms will be returned to availability
            or not.
          type: boolean
        statusType:
          $ref: '#/components/schemas/blockStatusTypeType'
        catStatusType:
          $ref: '#/components/schemas/blockStatusTypeType'
      type: object
    blockStatusTypeType:
      description: Simple type for specifying the block status type.
      enum:
      - Inquiry
      - Actual
      - Waitlist
      - Cancel
      - Referral
      type: string
    reservationTypeInfoType:
      properties:
        reservationType:
          maxLength: 20
          minLength: 0
          type: string
        chainCode:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    marketCodeInfoType:
      properties:
        marketCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        marketGroup:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    blockSourceOfSaleType:
      description: Point of Sale of Block. Identifies the entity/channel who made
        the block reservation.
      properties:
        sourceCode:
          $ref: '#/components/schemas/sourceCodeInfoType'
      type: object
    sourceCodeInfoType:
      properties:
        sourceCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        sourceGroup:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    blockRateProtectionType:
      description: Block Rate Protection code information.
      properties:
        criteria:
          $ref: '#/components/schemas/rateProtectionType'
        protectedDates:
          description: Specifies a single date.
          items:
            format: date
            type: string
          maxItems: 4000
          type: array
      type: object
    rateProtectionType:
      description: Simple type for specifying the block protection type.
      enum:
      - All
      - Selected
      - None
      type: string
    datesType:
      description: Specifies a single date.
      items:
        format: date
        type: string
      maxItems: 4000
      type: array
    blockNonCompeteType:
      description: Block Non Compete code information.
      properties:
        industry:
          description: Specifies the Non-Compete Industry.>
          maxLength: 20
          minLength: 0
          type: string
        industryDescription:
          description: Specifies the Non-Compete Industry description.>
          maxLength: 2000
          minLength: 0
          type: string
        criteria:
          $ref: '#/components/schemas/rateProtectionType'
        protectedDates:
          description: Specifies a single date.
          items:
            format: date
            type: string
          maxItems: 4000
          type: array
      type: object
    blockClassificationType:
      description: "Simple type for block instructions to be used in requests for\
        \ fetching blocks. Valid status values are MASTER_BLOCK, MASTER_TOUR, FIT_MASTER,\
        \ MASTER_ALLOCATION, MASTER_ITINERARY, LEAD_MASTER, REGULAR_BOOKING, SUB_BLOCK,\
        \ SUB_TOUR, FIT_CONTRACT, SUB_ALLOCATION, SUB_ITINERARY, LEAD."
      enum:
      - MasterBlock
      - MasterTour
      - MasterAllocation
      - MasterItinerary
      - LeadMaster
      - RegularBooking
      - SubBlock
      - SubTour
      - FitContract
      - SubAllocation
      - SubItinerary
      - Lead
      - FitMaster
      type: string
    blockOwnerType:
      description: Generic type for information about an owner.
      properties:
        hotel:
          $ref: '#/components/schemas/codeDescriptionType'
        userId:
          $ref: '#/components/schemas/uniqueID_Type'
        userName:
          description: Unique application user name of the owner.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        name:
          $ref: '#/components/schemas/personNameType'
        department:
          $ref: '#/components/schemas/codeDescriptionType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        phone:
          $ref: '#/components/schemas/telephoneInfoType'
        relationship:
          $ref: '#/components/schemas/codeDescriptionType'
        primary:
          description: "When true, this is a primary owner."
          type: boolean
        ownership:
          $ref: '#/components/schemas/blockOwnershipType'
      type: object
    profileId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    personNameType:
      description: This provides name information for a person.
      properties:
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name. May also be used for full name if\
            \ the sending system does not have the ability to separate a full name\
            \ into its parts, e.g. the surname elementSpace may be used to pass the\
            \ full name."
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameTitleSuffix:
          description: Title Suffix. Must be populated if ADVANCED_TITLE is on.
          type: integer
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
      type: object
    personNameTypeType:
      description: Person's name in an external system.
      enum:
      - Primary
      - Alternate
      - Incognito
      - External
      - Phonetic
      type: string
    emailInfoType:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    emailType:
      description: Information on an email for the customer.
      properties:
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        type:
          description: "Defines the purpose of the e-mail address (e.g. personal,\
            \ business, listserve)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
        emailFormat:
          description: Supported Email format.
          enum:
          - Html
          - Text
          type: string
      type: object
    telephoneInfoType:
      description: Information on a telephone number for the customer.
      properties:
        telephone:
          $ref: '#/components/schemas/telephoneType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    telephoneType:
      description: Information on a telephone number for the customer.
      properties:
        phoneTechType:
          description: "Indicates type of technology associated with this telephone\
            \ number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseType:
          description: "Describes the type of telephone number, in the context of\
            \ its general use (e.g. Home, Business, Emergency Contact, Travel Arranger,\
            \ Day, Evening)."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseTypeDescription:
          description: Description of the PhoneUseType code
          maxLength: 2000
          minLength: 0
          type: string
        phoneNumber:
          description: Telephone number assigned to a single location.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    blockOwnershipType:
      description: Specifies the type of the owner associated with the business block(Block/Rooms/Catering).
      enum:
      - Block
      - Rooms
      - Catering
      type: string
    blockProfilesType:
      description: A collection of Profile objects or Unique IDs of Profiles.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profile:
          $ref: '#/components/schemas/profileType'
        primary:
          description: Is this profile attached to block is primary?
          type: boolean
        blockProfileType:
          $ref: '#/components/schemas/blockProfileTypeType'
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    profileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        customer:
          $ref: '#/components/schemas/customerType'
        company:
          $ref: '#/components/schemas/companyType'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        addresses:
          $ref: '#/components/schemas/profileType_addresses'
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        telephones:
          $ref: '#/components/schemas/profileType_telephones'
        emails:
          $ref: '#/components/schemas/profileType_emails'
        uRLs:
          $ref: '#/components/schemas/profileType_uRLs'
        comments:
          $ref: '#/components/schemas/profileType_comments'
        relationships:
          $ref: '#/components/schemas/profileType_relationships'
        relationshipsSummary:
          $ref: '#/components/schemas/profileType_relationshipsSummary'
        stayReservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    customerType:
      description: "Contains basic data on the customer's identity, location, relationships,\
        \ finances, memberships, etc."
      properties:
        personName:
          description: Detailed name information for the customer.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 5
          type: array
        vipStatus:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    companyType:
      properties:
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the company.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    imageSetType:
      description: Represents on image set record.
      properties:
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        imageSet:
          description: The image set name.
          maxLength: 800
          minLength: 0
          type: string
        sequenceId:
          description: The image set sequence ID.
          type: integer
        imageStyle:
          $ref: '#/components/schemas/imageStyleType'
        imageType:
          description: The image set type.
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: The image set hotel code.
          maxLength: 20
          minLength: 0
          type: string
        chainCode:
          description: The image set chain code.
          maxLength: 20
          minLength: 0
          type: string
        imageURL:
          description: The image set URL.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: The image set description.
          maxLength: 2000
          minLength: 0
          type: string
        imageOrder:
          description: The image set order.
          type: integer
        website:
          description: The image set website.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    imageStyleType:
      description: An enumeration of image styles.
      enum:
      - Full
      - Thumbnail
      - Icon
      - Square
      - Banner
      - Button
      - Lowres
      - Highres
      type: string
    addressInfoType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    addressType:
      description: Provides address information.
      properties:
        isValidated:
          description: Indicator to define if the Address is validated by the Address
            Validation System.
          type: boolean
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        cityExtension:
          description: Post Office City Extension Code number. City Extension mainly
            used for UK addresses.
          maxLength: 20
          minLength: 0
          type: string
        county:
          description: "County or District Name (e.g., Fairfax). This is read only."
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        type:
          description: "Defines the type of address (e.g. home, business, other)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the type code
          type: string
      type: object
    countryNameType:
      description: Code for a country or a nationality.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        code:
          description: Code for a country or a nationality.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    uRLInfoType:
      description: Web site address.
      properties:
        url:
          $ref: '#/components/schemas/uRLType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    uRLType:
      description: "Web site address, in IETF(The Internet Engineering Task Force)\
        \ specified format."
      properties:
        value:
          description: Property Value
          type: string
        type:
          description: "Defines the purpose of the URL address, such as personal,\
            \ business, public, etc."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    commentInfoType:
      description: Comment related to the profile/reservation.
      properties:
        comment:
          $ref: '#/components/schemas/commentType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    commentType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        image:
          description: An image for this paragraph.
          type: string
        url:
          description: A URL for this paragraph.
          type: string
        commentTitle:
          description: Specifies Comment's Title.
          maxLength: 4000
          minLength: 0
          type: string
        notificationLocation:
          description: Notification Location associated with the Note.
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: Specifies type of the comment.
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Comment type Description.
          maxLength: 200
          minLength: 0
          type: string
        internal:
          description: "When true, the comment may not be shown to the consumer. When\
            \ false, the comment may be shown to the consumer."
          type: boolean
        confidential:
          description: "When true, the comment may be confidential."
          type: boolean
        overrideInternal:
          description: "When true, the comment internal could be modified."
          type: boolean
        protectDescription:
          description: "When true, the comment title will be populated from the comment\
            \ type description and couldn't be modified."
          type: boolean
        hotelId:
          description: "If specified comment belongs to the Hotel, otherwise it is\
            \ a global comment."
          maxLength: 20
          minLength: 0
          type: string
        actionType:
          description: Specifies type of action described in the comments.
          maxLength: 20
          minLength: 0
          type: string
        actionDate:
          description: Indicates at which date an action described in the comment
            must be taken.
          format: date
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    formattedTextTextType:
      description: Provides text and indicates whether it is formatted or not.
      properties:
        value:
          description: Property Value
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    relationshipInfoType:
      description: "Relationship Type contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        changeRelationship:
          $ref: '#/components/schemas/changeRelationsType'
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileType'
        masterAccountInfo:
          $ref: '#/components/schemas/masterAccountInfoType'
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        relation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        relationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    changeRelationsType:
      description: Detailed information regarding the changes made to relationships
        for the profile.
      properties:
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        relation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        relationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipProfileType:
      properties:
        customer:
          $ref: '#/components/schemas/customerType'
        company:
          $ref: '#/components/schemas/companyType'
        telephone:
          $ref: '#/components/schemas/telephoneInfoType'
        address:
          $ref: '#/components/schemas/addressInfoType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        uRLs:
          $ref: '#/components/schemas/uRLInfoType'
        primaryOwner:
          $ref: '#/components/schemas/ownerType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        changeProfileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        primary:
          description: Indicates if this relationship is the primary relationship.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    ownerType:
      description: Generic type for information about an owner.
      properties:
        hotel:
          $ref: '#/components/schemas/codeDescriptionType'
        userId:
          $ref: '#/components/schemas/uniqueID_Type'
        userName:
          description: Unique application user name of the owner.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        name:
          $ref: '#/components/schemas/personNameType'
        department:
          $ref: '#/components/schemas/codeDescriptionType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        phone:
          $ref: '#/components/schemas/telephoneInfoType'
        relationship:
          $ref: '#/components/schemas/codeDescriptionType'
        primary:
          description: "When true, this is a primary owner."
          type: boolean
      type: object
    profileStatusType:
      enum:
      - Active
      - Inactive
      type: string
    profileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Guest
      - Agent
      - Company
      - Group
      - Source
      - Employee
      - Hotel
      - Vendor
      - Contact
      - Purge
      - BusinessHeader
      - BillingAccount
      - Activity
      - Potential
      - Account
      type: string
    masterAccountInfoType:
      properties:
        masterAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        masterAccountName:
          description: Name of the Master account.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    relationshipInfoSummaryType:
      description: "RelationshipInfoSummaryType contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileSummaryType'
        masterAccountDetails:
          $ref: '#/components/schemas/masterAccountInfoType'
        relationshipID:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        sourceRelation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipProfileSummaryType:
      properties:
        customerName:
          description: Name of the customer
          maxLength: 40
          minLength: 0
          type: string
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        telephoneNumber:
          description: Telephone number assigned to a single location
          maxLength: 40
          minLength: 0
          type: string
        address:
          $ref: '#/components/schemas/relationshipAddressType'
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        profileStatus:
          $ref: '#/components/schemas/profileStatusType'
        primaryOwnerCode:
          description: "When true, this is a primary owner."
          type: boolean
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    relationshipAddressType:
      description: Provides address information for a Relationship.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        city:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          description: "Country name (e.g., Ireland)."
          maxLength: 200
          minLength: 0
          type: string
      type: object
    reservationStayHistoryFutureInfoType:
      description: Information of History and Future Reservation details attached
        to Profiles.
      properties:
        historyList:
          $ref: '#/components/schemas/stayHistoryListType'
        futureList:
          $ref: '#/components/schemas/stayFutureListType'
      type: object
    stayHistoryListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    stayReservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
      type: object
    reservationIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    stayInfoType:
      description: "Details on the Room Stay including Guest Counts, Time Span of\
        \ this Room Stay, pointers to Res Guests, guest Memberships, Comments and\
        \ Special Requests pertaining to this particular Room Stay and finally financial\
        \ information related to the Room Stay, including Guarantee, Deposit and Payment\
        \ and Cancellation Penalties."
      properties:
        arrivalDate:
          format: date
          type: string
        departureDate:
          format: date
          type: string
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        adultCount:
          description: A collection of Guest Counts associated with Room Stay.
          type: integer
        childCount:
          description: A collection of Child Counts associated with Room Stay.
          type: integer
        roomClass:
          description: Room class code
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room type code
          maxLength: 20
          minLength: 0
          type: string
        componentRoomType:
          description: True indicates functionSpaceDetails type is a component type.
          type: boolean
        numberOfRooms:
          description: Room Id
          type: integer
        roomId:
          description: Room Id
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate plan code
          maxLength: 20
          minLength: 0
          type: string
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        points:
          $ref: '#/components/schemas/pointsType'
        rateSuppressed:
          description: Whether this rate should be suppressed from view
          type: boolean
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        bookingChannelCode:
          description: Booking channel code
          maxLength: 20
          minLength: 0
          type: string
        linkCode:
          description: Party code
          maxLength: 2000
          type: string
        fixedRate:
          description: "True if the rate is a fixed rate, otherwise false"
          type: boolean
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        promotion:
          $ref: '#/components/schemas/promotionType'
        marketCode:
          description: Market code
          maxLength: 20
          minLength: 0
          type: string
        marketDescription:
          description: Description of Market code
          maxLength: 4000
          minLength: 0
          type: string
        sourceCode:
          description: Source of business
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        roomTypeCharged:
          description: Room type code that was charged
          maxLength: 20
          minLength: 0
          type: string
        depositPayments:
          $ref: '#/components/schemas/currencyAmountType'
        guestServiceStatus:
          $ref: '#/components/schemas/guestHousekeepingServiceRequestType'
        scheduledCheckoutTime:
          description: Indicates that this reservation is scheduled for automated
            check out.
          format: date
          type: string
        roomNumberLocked:
          description: "When true, indicates a functionSpaceDetails number cannot\
            \ be changed. When false, indicates a functionSpaceDetails number may\
            \ be changed."
          type: boolean
        pseudoRoom:
          description: True indicates as pseudo functionSpaceDetails type. This is
            usually used for a posting master reservation.
          type: boolean
        assignedByAI:
          description: Represents the functionSpaceDetails was assigned by AI Room
            Assignment.
          type: boolean
        upgradedByAI:
          description: Represents the functionSpaceDetails was assigned by AI Room
            Assignment.
          type: boolean
      type: object
    resExpectedTimesType:
      description: Holds the Arrival and Departure Time Information
      properties:
        reservationExpectedArrivalTime:
          description: Arrival Time
          format: date-time
          type: string
        reservationExpectedDepartureTime:
          description: Departure Time
          format: date-time
          type: string
      type: object
    pointsType:
      description: The Redeem Points contains the number of points required to book
        a functionSpaceDetails type.
      properties:
        awardsType:
          description: Awards type for the award type rate code.
          type: string
        points:
          description: No of points required to book this Room Stay.
          type: integer
      type: object
    reservationBlockType:
      description: Key information about the block for a reservation.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        blockName:
          description: The Name of the block that is attached to the reservation.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: This is the HotelCode of the Block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resGuaranteeType:
      description: Validations type record returned after Validations are done.
      properties:
        guaranteeCode:
          description: Guarantee Code.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Guarantee Code.
          maxLength: 80
          minLength: 0
          type: string
        onHold:
          description: Guarantee Code.
          type: boolean
      type: object
    promotionType:
      description: Type to specify a rate promotion. Usually attached to a reservation
        to indicate a specific promotion is applied to the reservation.
      properties:
        promotionCode:
          description: Promotion code associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        promotionName:
          description: Promotion code Name associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        couponCode:
          description: Promotion Coupon Code when promotion is setupCode to have a
            valid coupon code.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    guestHousekeepingServiceRequestType:
      description: Possible values for the Guest Service Status.
      enum:
      - DoNotDisturb
      - MakeUpRoom
      - NoStatusSelected
      type: string
    resAttachedProfileListType:
      items:
        $ref: '#/components/schemas/resAttachedProfileType'
      maxItems: 4000
      type: array
    resAttachedProfileType:
      properties:
        name:
          description: Attached profile name
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    profileIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    resProfileTypeType:
      enum:
      - Guest
      - Company
      - Group
      - TravelAgent
      - Source
      - ReservationContact
      - BillingContact
      - Addressee
      type: string
    pMS_ResStatusType:
      description: This reservation is in checked in status and the business date
        is past departure date. This could occur when ORS and PMS are in same environment.
      enum:
      - Reserved
      - Requested
      - NoShow
      - Cancelled
      - InHouse
      - CheckedOut
      - Waitlisted
      - DueIn
      - DueOut
      - Walkin
      - PendingCheckout
      type: string
    stayFutureListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : Future reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    blockProfileTypeType:
      description: Simple type for block profile types.
      enum:
      - Company
      - Group
      - Agent
      - Source
      - CompanyContact
      - AgentContact
      - SourceContact
      type: string
    blockOwnersType:
      description: Contains a list of block owners.
      properties:
        owner:
          items:
            $ref: '#/components/schemas/blockOwnerType'
          maxItems: 4000
          type: array
        lockBlockOwners:
          description: "When this flag is true, the logged in user cannot modify the\
            \ existing block owners for the current block."
          type: boolean
        lockRoomsOwners:
          description: "When this flag is true, the logged in user cannot modify the\
            \ existing functionSpaceDetails owners for the current block."
          type: boolean
        lockCateringOwners:
          description: "When this flag is true, the logged in user cannot modify the\
            \ existing catering owners for the current block."
          type: boolean
      type: object
    cateringType:
      description: Contains catering related information for the block.
      properties:
        cateringStatus:
          $ref: '#/components/schemas/bookingStatusDetailType'
        cateringInternalStatus:
          description: Internal status for the catering.
          maxLength: 20
          minLength: 0
          type: string
        cateringNextStatusList:
          description: Next catering status of the business block.
          items:
            $ref: '#/components/schemas/bookingStatusDetailType'
          maxItems: 4000
          type: array
        cateringStatusChangeHistory:
          description: Collection of catering status history.
          items:
            $ref: '#/components/schemas/bookingStatusHistoryType'
          maxItems: 4000
          type: array
        cateringOwner:
          description: Catering Owner of the block.
          maxLength: 20
          minLength: 0
          type: string
        eventAttendees:
          $ref: '#/components/schemas/eventAttendeesType'
        boardInfo:
          description: The name by which the group wishes to be identified in the
            hotel.
          maxLength: 80
          minLength: 0
          type: string
        onSiteName:
          description: The name of the customer's in-house representative or contact
            on the day of the catering event.
          maxLength: 40
          minLength: 0
          type: string
        contractNumber:
          description: Catering contract number for the block.
          maxLength: 20
          minLength: 0
          type: string
        functionInfo:
          description: "This provides more detail the type of function for which the\
            \ event is held. For example, Trade Show, Meeting, or Annual Convention."
          maxLength: 60
          minLength: 0
          type: string
        trackChanges:
          description: Indicates whether the catering change logging for the booking
            is active or not. Any change made to catering events and resources will
            be logged when this is true.
          type: boolean
        eventOrder:
          $ref: '#/components/schemas/eventOrderType'
        cateringRevenue:
          $ref: '#/components/schemas/cateringRevenueType'
        followUpDate:
          description: Date used by catering manager or coordinator to follow up on
            the event.
          format: date
          type: string
        decisionDate:
          description: Date by which event group must make a decision on the booking.
          format: date
          type: string
        pkgsTmplt:
          description: Indicates whether event packages or templates can be applied
            to the block.
          type: boolean
        cancellationDetails:
          $ref: '#/components/schemas/cancellationDetailsType'
        resourceDiscountPercentage:
          description: Indicates the resource discount percentage to be applied to
            resource items associated with the catering event.
          maximum: 100
          minimum: 0
          type: number
        hasPackageEvents:
          description: Indicates if the block has any package events.
          type: boolean
        applyBoardInfoToAllEvents:
          description: Indicates whether BoardInfo changes can be applied to all events
            of the block.
          type: boolean
        overrideEventsProcessingWarnings:
          description: Indicates whether to ignore any warning during applying the
            changes to the events associated with the current block.
          type: boolean
        applyEventsGuaranteeToAllEvents:
          description: Indicates whether Guarantee changes can be applied to all events
            of the block.
          type: boolean
        applyEventAttendeesChangesToEvents:
          $ref: '#/components/schemas/applyEventAttendeesChangesToEventsType'
        resourceDiscountType:
          $ref: '#/components/schemas/resourceDiscountTypeType'
      type: object
    cateringNextStatusListType:
      description: Next catering status of the business block.
      items:
        $ref: '#/components/schemas/bookingStatusDetailType'
      maxItems: 4000
      type: array
    cateringStatusChangeHistoryType:
      description: Collection of catering status history.
      items:
        $ref: '#/components/schemas/bookingStatusHistoryType'
      maxItems: 4000
      type: array
    bookingStatusHistoryType:
      properties:
        sequence:
          description: Number indicating the sequence of status change.
          type: integer
        bookingStatus:
          $ref: '#/components/schemas/codeDescriptionType'
        modifyDateTime:
          description: Date and time of the status change.
          format: date
          type: string
        modifierId:
          description: User who modified the status.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    eventAttendeesType:
      description: Event attendees information.
      properties:
        noOfAttendees:
          description: The maximum number of attendees for Catering events associated
            with the block.
          type: integer
        attendeesGuaranteed:
          description: This denotes that the number of Attendees are the minimum guaranteed
            by the customer.
          type: boolean
      type: object
    eventOrderType:
      description: Event order distribution information.
      properties:
        distributed:
          description: Indicates if the Banquet Event Orders have been distributed.
          type: boolean
        distributedDate:
          description: "This indicates which exchange rate date will be used for blocks\
            \ when printing Banquet Event Orders. When the Distributed attribute is\
            \ true this contains the date stamp of when the Distributed attribute\
            \ was updated. When Distributed attribute is false, this is left blank.\
            \ This date can also be taken into consideration as the 'Exchange Rate\
            \ Date' when, for instance, converting catering revenue to base currency."
          format: date
          type: string
        distributedDateTime:
          description: "This indicates which exchange rate date will be used for blocks\
            \ when printing Banquet Event Orders. When the Distributed attribute is\
            \ true this contains the date/time stamp of when the Distributed attribute\
            \ was updated. When Distributed attribute is false, this is left blank.\
            \ This date can also be taken into consideration as the 'Exchange Rate\
            \ Date' when, for instance, converting catering revenue to base currency."
          format: date-time
          type: string
      type: object
    cateringRevenueType:
      description: Information about Catering Revenue.
      properties:
        serviceCharge:
          $ref: '#/components/schemas/currencyAmountType'
        taxAmount:
          $ref: '#/components/schemas/currencyAmountType'
        itemDiscount:
          description: Item discount for the block.
          type: number
        itemDiscountPercentage:
          description: The discount percentage to be applied to resource items associated
            with catering events.
          maximum: 100
          minimum: 0
          type: number
      type: object
    cancellationDetailsType:
      description: This type holds information regarding booking status change to
        Cancel/ Lost.
      properties:
        cancellationNumber:
          $ref: '#/components/schemas/uniqueID_Type'
        cancellationCode:
          $ref: '#/components/schemas/codeDescriptionType'
        cancellationDate:
          description: Date on which block was canceled.
          format: date
          type: string
        cancellationInfo:
          description: Cancellation information provided by the customer.
          maxLength: 2000
          minLength: 0
          type: string
        destination:
          description: Alternate destination where the business is being taken.
          maxLength: 20
          minLength: 0
          type: string
        lostToProperty:
          description: Holds the name of the property or competitor brand business
            was lost to.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    applyEventAttendeesChangesToEventsType:
      description: Non-Pkg Events on the same date.
      enum:
      - All
      - None
      - Same
      - NonPackage
      - MatchingNonPackage
      - Package
      - Date
      type: string
    resourceDiscountTypeType:
      description: Indicates the option to select resources that will be discounted
        with the Resource Discount Percentage.
      enum:
      - AllDiscountableResources
      - ResourcesWithSameDiscountPercentage
      - AllDiscountableItems
      - ItemsWithSameDiscountPercentage
      - AllDiscountableMenusAndMenuItems
      - MenusAndMenuItemsWithSameDiscountPercentage
      - AllDiscountableSpaces
      - SpacesWithSameDiscountPercentage
      - None
      type: string
    blockInventoryItemsType:
      description: Inventory item attached to a block.
      items:
        $ref: '#/components/schemas/blockInventoryItemType'
      maxItems: 4000
      type: array
    blockInventoryItemType:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        item:
          $ref: '#/components/schemas/itemInfoType'
        quantity:
          description: Number of items booked.
          type: integer
        blockDates:
          $ref: '#/components/schemas/dateRangeType'
        source:
          $ref: '#/components/schemas/blockInventoryItemSourceType'
      type: object
    itemInfoType:
      description: Basic information regarding an Item.
      properties:
        description:
          description: Detail description of an item.
          maxLength: 2000
          minLength: 0
          type: string
        availabilityPeriod:
          $ref: '#/components/schemas/timeWindowType'
        blockDates:
          $ref: '#/components/schemas/timeSpanType'
        quantity:
          description: Quantity of hold Item
          type: integer
        itemHoldId:
          description: ID reference for the hold Item
          type: number
        code:
          description: Item Code.
          maxLength: 20
          minLength: 0
          type: string
        name:
          description: Name of an item.
          maxLength: 200
          minLength: 0
          type: string
        itemPool:
          description: Indicates if it is an item pool. Not applicable for Item within
            the Item Pool.
          type: boolean
        sellSeparate:
          description: If true indicates that item is allowed to sell separately.
          type: boolean
        sellInReservation:
          description: If true indicates that item can be sold in reservation.
          type: boolean
        sellInEvent:
          description: If true indicates that item can be sold in event.
          type: boolean
        requiredForBooking:
          description: If true indicates that item is required for the reservation.
          type: boolean
        fixedCharge:
          description: If true indicates that item has fixed charge when it is attached
            to a reservation.
          type: boolean
        outsideStay:
          description: If true indicates that item could be held outside of the reservation
            stay days.
          type: boolean
        defaultDuration:
          description: Define the default duration in days when booking the item.
          type: integer
      type: object
    timeWindowType:
      description: Defines a Time period with eventStartDate time and an eventEndDate
        time.
      properties:
        startTime:
          description: Start Time of the Time window.
          type: string
        endTime:
          description: End Time of the Time window.
          type: string
      type: object
    dateRangeType:
      description: Date Range with Start and End dates.
      properties:
        eventStartDate:
          description: The starting value of the date range.
          format: date
          type: string
        eventEndDate:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    blockInventoryItemSourceType:
      description: "Defines whether the item is setupCode due to a Rate Plan, Package\
        \ or a Block."
      properties:
        ratePlanCode:
          description: "Rate Plan Code, If populated specifies that the item is setupCode\
            \ due to a Rate Plan."
          maxLength: 20
          minLength: 0
          type: string
        packageCode:
          description: "Package Code, If populated specifies that the item is setupCode\
            \ due to a Package."
          maxLength: 20
          minLength: 0
          type: string
        blockId:
          $ref: '#/components/schemas/blockId'
      type: object
    blockId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    blockStatisticsType:
      properties:
        allocatedRoomStatistics:
          $ref: '#/components/schemas/roomStatisticsType'
        actualRoomStatistics:
          $ref: '#/components/schemas/roomStatisticsType'
        cateringRevenueOnBooks:
          description: Indicates the catering revenue on the books.
          type: number
        actualCateringRevenue:
          description: Indicates actualized catering revenue.
          type: number
      type: object
    roomStatisticsType:
      properties:
        roomCount:
          description: The total number of rooms.
          type: number
        roomRevenue:
          description: The total revenue for the rooms.
          type: number
        averageRate:
          description: The average rate per functionSpaceDetails.
          type: number
      type: object
    blockTracesType:
      description: List of Block traces.
      items:
        $ref: '#/components/schemas/blockTraceType'
      maxItems: 4000
      type: array
    blockTraceType:
      description: Extended Trace object to hold information for a block.
      properties:
        timeInfo:
          $ref: '#/components/schemas/traceTimeInfoType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        departmentId:
          description: Indicates the Department code.
          maxLength: 20
          minLength: 0
          type: string
        traceText:
          description: The information this trace contains.
          type: string
        resolveInfo:
          $ref: '#/components/schemas/traceResolveType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    traceTimeInfoType:
      properties:
        dateTimeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        traceOn:
          description: Date of the trace.
          format: date-time
          type: string
        traceTime:
          description: Time of the trace
          maxLength: 20
          minLength: 0
          type: string
        enteredBy:
          description: User that entered this trace.
          type: string
      type: object
    reservationId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    traceResolveType:
      properties:
        resolvedOn:
          description: Date the trace was resolved
          format: date
          type: string
        resolvedBy:
          description: User that resolved the trace
          type: string
      type: object
    blockStatisticsSummaryType:
      description: "Type to store summary detail like rooms sold, average functionSpaceDetails\
        \ rate and revenue for a statistic type."
      properties:
        roomsSold:
          description: Total Number of Rooms Picked Up.
          type: integer
        revenueSummary:
          $ref: '#/components/schemas/revenueSummaryType'
        avgRoomRate:
          type: number
        statisticType:
          $ref: '#/components/schemas/statisticsSummaryType'
      type: object
    revenueSummaryType:
      description: "Summary information pertaining to revenue like Room, Food and\
        \ Beverage, Catering, Other, Catering Other and Total Revenue."
      properties:
        roomRevenue:
          type: number
        foodAndBeverageRevenue:
          type: number
        otherRevenue:
          type: number
        cateringRevenue:
          type: number
        cateringOtherRevenue:
          type: number
        totalRevenue:
          type: number
        nonRevenue:
          type: number
      type: object
    statisticsSummaryType:
      description: Type of statistic for which summary information is populated.
      enum:
      - Potential
      - Actual
      - Variance
      type: string
    sellMessageConfigsType:
      description: "The SellMessageConfigsType is the list of sell messages, each\
        \ comprising of all the sell message attributes and other details."
      properties:
        sellMessageConfig:
          items:
            $ref: '#/components/schemas/sellMessageConfigType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    sellMessageConfigType:
      description: "Only one of the following can hold a value: HotelCode, CROCode\
        \ or ChainCode"
      properties:
        message:
          description: Sell message text.
          maxLength: 2000
          minLength: 0
          type: string
        blockId:
          $ref: '#/components/schemas/blockId'
        blockCode:
          description: Block Code to which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        timespan:
          $ref: '#/components/schemas/timeSpanType'
        hotelId:
          description: Hotel Code for which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        croCode:
          description: CRO Code for which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        chainCode:
          description: Chain Code for which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room type for which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate Plan Code for which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        languageCode:
          description: Language in which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        stickyFlag:
          description: Sticky flag is used to define if the sell message should display
            on the block screen by default.
          type: boolean
        sellSequence:
          description: This number indicates the display order of the sell message.
          type: number
        usedInModule:
          description: This represents the moduleType where we want to display this
            SellMessage.
          items:
            $ref: '#/components/schemas/usedInModuleType'
          maxItems: 10
          type: array
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    usedInModuleType:
      description: "Simple type for indicating the module for which user wants to\
        \ create the SellMessage. Valid module types are Look To Book Sales,Reservations,Blocks,Function\
        \ Diary and Group Rooms Control."
      enum:
      - Blocks
      - Reservations
      - FunctionDiary
      - LookToBookSales
      - GroupRoomsControl
      type: string
    attachmentsType:
      description: Attachment List.
      items:
        $ref: '#/components/schemas/attachmentType'
      maxItems: 4000
      type: array
    attachmentType:
      description: Attached files.
      properties:
        fileName:
          description: Name of the file.
          maxLength: 2000
          minLength: 0
          type: string
        fileSize:
          description: Size of the file.
          type: integer
        description:
          description: Description for the file.
          maxLength: 4000
          minLength: 0
          type: string
        global:
          description: Flag to say if attachment is available across properties.
          type: boolean
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        history:
          $ref: '#/components/schemas/dateTimeStampGroupType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID elementSpace.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    dateTimeStampGroupType:
      properties:
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    blockWashSchedulesType:
      description: "Wash Schedule attached to the block, which allows to release inventory\
        \ based on selected wash schedule type."
      items:
        $ref: '#/components/schemas/blockWashScheduleType'
      maxItems: 4000
      type: array
    blockWashScheduleType:
      description: "Allows to select type of wash schedule: by number of rooms or\
        \ by percentage."
      properties:
        washDate:
          description: Date on which the block wash operation will be performed.
          format: date
          type: string
        roomTypes:
          description: A single functionSpaceDetails type on which wash operation
            should be performed.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        washByRooms:
          $ref: '#/components/schemas/blockGridInvType'
        washByPercent:
          description: "When using the Wash by % option, indicate a wash percentage\
            \ that will be applied it to the whole block."
          maximum: 100
          minimum: 0
          type: number
      type: object
    blockGridInvType:
      description: Indicates the inventory values ( occupancy or availability ) per
        person occupancy.
      properties:
        onePerson:
          description: Indicates the one person inventory value ( occupancy or availability
            ).
          type: integer
        twoPerson:
          description: Indicates the two person inventory value ( occupancy or availability
            ).
          type: integer
        threePerson:
          description: Indicates the three person inventory value ( occupancy or availability
            ).
          type: integer
        fourPerson:
          description: Indicates the four person inventory value ( occupancy or availability
            ).
          type: integer
        sellLimit:
          description: Indicates the sell limit
          type: integer
        cutoffDate:
          description: Indicates the cutoff date.Date when inventory left in the block
            will be cut-off.
          format: date
          type: string
      type: object
    blockRestrictionsType:
      description: List of restrictions belonging to a block.
      properties:
        blockId:
          $ref: '#/components/schemas/blockId'
        blockRestriction:
          description: Block restriction details.
          items:
            $ref: '#/components/schemas/blockRestrictionType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel to which the block belongs to.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    blockRestrictionType:
      description: Restriction details for a block.
      properties:
        restrictionDate:
          $ref: '#/components/schemas/timeSpanDaysOfWeekType'
        roomType:
          description: Room Type selected for the block restriction.
          maxLength: 20
          minLength: 0
          type: string
        blockRestrictionStatus:
          $ref: '#/components/schemas/restrictionStatusType'
        actualTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
      type: object
    timeSpanDaysOfWeekType:
      description: Container for Time span with days of week.
      properties:
        blockDates:
          $ref: '#/components/schemas/timeSpanType'
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
      type: object
    restrictionStatusType:
      description: The RestrictionStatusType is used to indicate the type of restriction
        applied. An enumerated restriction type is defined in the attribute group.
      properties:
        code:
          $ref: '#/components/schemas/restrictionStatusesType'
        unit:
          description: "Defines restriction in conjunction with Restriction Code.\
            \ Value must be specified for Restriction Codes MinimumStayThrough, MaximumStayThrough,\
            \ MinimumLengthOfStay, MaximumLengthOfStay, MinimumAdvanceBooking, MaximumAdvanceBooking."
          type: integer
        lOS1:
          description: Indicates Length of Stay 1 is not available. Defines restriction
            in conjunction with Restriction Code LOSNotAvailable.
          type: boolean
        lOS2:
          description: Indicates Length of Stay 2 is not available. Defines restriction
            in conjunction with Restriction Code LOSNotAvailable.
          type: boolean
        lOS3:
          description: Indicates Length of Stay 3 is not available. Defines restriction
            in conjunction with Restriction Code LOSNotAvailable.
          type: boolean
        lOS4:
          description: Indicates Length of Stay 4 is not available. Defines restriction
            in conjunction with Restriction Code LOSNotAvailable.
          type: boolean
        lOS5:
          description: Indicates Length of Stay 5 is not available. Defines restriction
            in conjunction with Restriction Code LOSNotAvailable.
          type: boolean
        lOS6:
          description: Indicates Length of Stay 6 is not available. Defines restriction
            in conjunction with Restriction Code LOSNotAvailable.
          type: boolean
        lOS7:
          description: Indicates Length of Stay 7 or more is not available. Defines
            restriction in conjunction with Restriction Code LOSNotAvailable.
          type: boolean
      type: object
    restrictionStatusesType:
      enum:
      - Closed
      - ClosedForArrival
      - ClosedForDeparture
      - MinimumStayThrough
      - MaximumStayThrough
      - MinimumLengthOfStay
      - MaximumLengthOfStay
      - LOSNotAvailable
      - MinimumAdvanceBooking
      - MaximumAdvanceBooking
      - Open
      - OpenForArrival
      - OpenForDeparture
      type: string
    eventFunctionSpaceType:
      description: Pertain Information about the Function Space for events.
      properties:
        functionSpaceCode:
          description: Function Space (event functionSpaceDetails) code.
          maxLength: 20
          minLength: 0
          type: string
        functionSpaceDescription:
          description: Function Space description.
          maxLength: 200
          minLength: 0
          type: string
        setupCode:
          description: Setup style code.
          maxLength: 20
          minLength: 0
          type: string
        setupDescription:
          description: Setup Style description.
          maxLength: 200
          minLength: 0
          type: string
        setupTime:
          description: Setup time in minutes.
          type: integer
        setdownTime:
          description: Setdown time in minutes.
          type: integer
        rentalCode:
          description: Rate Code for function space.
          maxLength: 20
          minLength: 0
          type: string
        rateDesc:
          description: Function Space Rate description.
          maxLength: 200
          minLength: 0
          type: string
        rentalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        discountPercentage:
          description: Discount Percentage applied to Rent Amount.
          maximum: 100
          minimum: 0
          type: number
        minimumOccupancy:
          description: Minimum Occupancy for the SetupCode of Catring Event.
          type: integer
        maximumOccupancy:
          description: Maximum Occupancy for the SetupCode of Catring Event.
          type: integer
        shareable:
          description: Flag to indicate if the event functionSpaceDetails is shareable.
          type: boolean
        comboSpace:
          description: Flag to indicate if the function space is a combination functionSpaceDetails.
          type: boolean
        elementSpace:
          description: Flag to indicate if the function space is an elementSpace of
            a comboSpace function space.
          type: boolean
      type: object
    eventNotesType:
      description: Pertain event information.
      items:
        $ref: '#/components/schemas/eventNoteType'
      maxItems: 4000
      type: array
    eventNoteType:
      description: Pertain event's comment information.
      properties:
        noteId:
          $ref: '#/components/schemas/uniqueID_Type'
        noteCode:
          description: Note code.
          maxLength: 20
          minLength: 0
          type: string
        internal:
          description: Indicates if comment are internal use only.
          type: boolean
        noteTitle:
          description: Pertain comment tile.
          maxLength: 100
          minLength: 0
          type: string
        comment:
          description: Pertain comment text.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Pertain display sequence.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    lightEventsDetailType:
      description: Pertain event few information about events.
      items:
        $ref: '#/components/schemas/lightEventDetailType'
      maxItems: 4000
      type: array
    lightEventDetailType:
      description: Light Event Details.
      properties:
        eventPrimaryInfo:
          $ref: '#/components/schemas/eventPrimaryInfoType'
        eventDetail:
          $ref: '#/components/schemas/eventDetailType'
        functionSpaceInformation:
          $ref: '#/components/schemas/eventFunctionSpaceType'
      type: object
    eventRevenuesInformationType:
      description: Collection of revenue information about a catering event.
      properties:
        eventRevenueInformation:
          description: Revenue information about a catering event.
          items:
            $ref: '#/components/schemas/eventRevenueInformationType'
          maxItems: 4000
          type: array
        currencyCode:
          description: Currency code when base currency of the property is different
            than the catering currency.
          maxLength: 3
          minLength: 3
          type: string
        excludeFromForecast:
          description: Flag to indicate if the event revenue should be excluded from
            the forecast.
          type: boolean
        useForecastRevenue:
          description: "Flag to indicate whether to only use the forecasted values\
            \ when reporting, regardless of whether resources are booked on an event."
          type: boolean
        eventLevelRevenueActualization:
          description: Flag that indicates if actual revenue can be manually edited.
          type: boolean
      type: object
    eventRevenueInformationType:
      description: Pertain event's revenue information.
      properties:
        revenueType:
          $ref: '#/components/schemas/revenueTypeType'
        forecastRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        expectedRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        guaranteedRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        onTheBooksRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        billedRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        actualRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        totalCost:
          $ref: '#/components/schemas/currencyAmountType'
        flatForecastRevenue:
          description: "Flag to indicate forecast revenue is a flat amount, therefore\
            \ NOT per person."
          type: boolean
        custom:
          description: Flag indicating revenues are from a custom revenue type.
          type: boolean
        ignoreForecast:
          description: Flag indicating to ignore forecast figures.
          type: boolean
        packaged:
          description: Flag indicating if the revenues are generated by a catering
            package.
          type: boolean
        orderBy:
          description: Sort order for revenues.
          type: integer
      type: object
    revenueTypeType:
      description: Base type provides information about Catering Revenue Types Configuration.
      properties:
        code:
          description: Code is used to identify a Catering Revenue Type/Code.
          maxLength: 20
          minLength: 0
          type: string
        translatableDescription:
          $ref: '#/components/schemas/translationTextType200'
        displaySequence:
          description: Revenue Types display sequence Number
          type: number
        revenueGroup:
          description: Revenue Group
          maxLength: 20
          minLength: 0
          type: string
        foodAndBeverage:
          description: Flag for Food and Beverages.
          type: boolean
        inactive:
          description: Indicates if the Revenue type Code is inactive.
          type: boolean
        revenueDetails:
          description: List of Revenue details assoicated to a Revenue Type (Additional
            Details)
          items:
            $ref: '#/components/schemas/revenueTypeDetailType'
          maxItems: 4000
          type: array
      type: object
    translationTextType200:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 200.
          maxLength: 200
          minLength: 0
          type: string
        translations:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    revenueTypeDetailsType:
      description: List of Revenue details assoicated to a Revenue Type (Additional
        Details)
      items:
        $ref: '#/components/schemas/revenueTypeDetailType'
      maxItems: 4000
      type: array
    revenueTypeDetailType:
      description: Details type provides information about Catering Revenue Type Details.
      properties:
        hotelId:
          description: Hotel Code is used to set associated revenue type details.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    addtionalCodeInfoType_inner:
      properties:
        name:
          $ref: '#/components/schemas/masterInfoCodeDetailType'
        value:
          description: Holds value of additional code information
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    translationsTextType_inner:
      description: Language code for the translation.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    blockType_blockProfiles:
      description: "A collection of all the profiles associated to this block. Please\
        \ comment that during a change operation this performs a full overlay if the\
        \ attribute FullOverlay is set to true. In a full overlay, all the profiles\
        \ that should be associated to the block should be provided during a change\
        \ operation. Any profiles not provided will be detached from this block. By\
        \ default the full overlay is considered false if this tag is left blank.\
        \ If values are provided for profiles, only the full overlay functionality\
        \ is provided at this time."
      properties:
        blockProfile:
          description: The list of profiles associated with the block.
          items:
            $ref: '#/components/schemas/blockProfilesType'
          maxItems: 4000
          type: array
        fullOverlay:
          description: Indicates whether to perform a full overlay for the profiles.
            Currently only the Fulloverlay functionality is provided.
          type: boolean
      type: object
    blockType_comments:
      description: List of notes for the Block.
      properties:
        commentInfo:
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    blockType_blockSecurity:
      description: Block security information used for an external system. Only available
        if configured in OPERA Cloud.
      properties:
        securedFromDIdisplayYn:
          description: Secured from DI Display.
          type: boolean
        allDescriptionDDSecuredYn:
          description: All Description DD Secured.
          type: boolean
        ratesSecuredfromGNRYn:
          description: Rates Secured from GNR.
          type: boolean
        ratesSecuredfromAllDisplaysYn:
          description: Rates Secured from All Displays.
          type: boolean
        housingInformationSecuredYn:
          description: Housing Information Secured.
          type: boolean
      type: object
    blockDetailsType_primaryOwners:
      description: Primary owners for the block.
      properties:
        blockOwner:
          $ref: '#/components/schemas/blockOwnerType'
        roomsOwner:
          $ref: '#/components/schemas/blockOwnerType'
        cateringOwner:
          $ref: '#/components/schemas/blockOwnerType'
        blockOwnerCount:
          description: Total number of Block Owners.
          type: number
        roomsOwnerCount:
          description: Total number of Rooms Owners.
          type: number
        cateringOwnerCount:
          description: Total number of Catering Owners.
          type: number
      type: object
    blockDetailsType_primaryProfiles:
      description: Primary account and contact for the block.
      properties:
        account:
          $ref: '#/components/schemas/blockProfilesType'
        contact:
          $ref: '#/components/schemas/blockProfilesType'
        image:
          $ref: '#/components/schemas/imageSetType'
      type: object
    profileType_addresses:
      description: List of customer addresses.
      properties:
        addressInfo:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_telephones:
      description: List of Telephone Number Information
      properties:
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_emails:
      description: List of email address for the customer.
      properties:
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_uRLs:
      description: List of Information on a URL for the customer.
      properties:
        uRLInfo:
          description: Collection of Detailed information on web url/address for the
            customer.
          items:
            $ref: '#/components/schemas/uRLInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_comments:
      description: List of Notes for the customer.
      properties:
        commentInfo:
          description: Collection of Detailed information on comments for the customer.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_relationships:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        relationship:
          description: A collection of the profiles that have a relationship with
            this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_relationshipsSummary:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        relationship:
          description: A collection of the profiles summary that have a relationship
            with this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoSummaryType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
x-original-swagger-version: "2.0"
