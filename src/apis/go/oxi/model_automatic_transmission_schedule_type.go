/*
OPERA Cloud Xchange Interface OXI API

APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>

API version: 23.0.0.0
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the AutomaticTransmissionScheduleType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutomaticTransmissionScheduleType{}

// AutomaticTransmissionScheduleType Details which uniquely identifies transmission schedule
type AutomaticTransmissionScheduleType struct {
	// Unique alpha numeric value which determines exact transmission schedule. Pass null when creating new transmission schedule
	MessageId *string `json:"messageId,omitempty"`
	// Hotel code for which the automatic transmission schedule is set.
	HotelId *string `json:"hotelId,omitempty"`
	// Interface configured for the property for which the automatic transmission schedule is set.
	Interface *string `json:"interface,omitempty"`
	Module *AutomaticTransmissionScheduleModuleTypeType `json:"module,omitempty"`
	Frequency *AutomaticTransmissionScheduleFrequencyType `json:"frequency,omitempty"`
	// Date from which transmission schedule has to run
	StartDate *string `json:"startDate,omitempty"`
	// End date of transmission schedule
	EndDate *string `json:"endDate,omitempty"`
	// Indicates whether automatic transmission is active or not
	Inactive *bool `json:"inactive,omitempty"`
	// True to modify how the header and grid information sent in the RTAV message.
	Delta *bool `json:"delta,omitempty"`
	// Date when last automatic transmission occurred.
	LastSend *time.Time `json:"lastSend,omitempty"`
}

// NewAutomaticTransmissionScheduleType instantiates a new AutomaticTransmissionScheduleType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutomaticTransmissionScheduleType() *AutomaticTransmissionScheduleType {
	this := AutomaticTransmissionScheduleType{}
	return &this
}

// NewAutomaticTransmissionScheduleTypeWithDefaults instantiates a new AutomaticTransmissionScheduleType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutomaticTransmissionScheduleTypeWithDefaults() *AutomaticTransmissionScheduleType {
	this := AutomaticTransmissionScheduleType{}
	return &this
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleType) GetMessageId() string {
	if o == nil || IsNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleType) GetMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleType) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *AutomaticTransmissionScheduleType) SetMessageId(v string) {
	o.MessageId = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *AutomaticTransmissionScheduleType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleType) GetInterface() string {
	if o == nil || IsNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleType) GetInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleType) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *AutomaticTransmissionScheduleType) SetInterface(v string) {
	o.Interface = &v
}

// GetModule returns the Module field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleType) GetModule() AutomaticTransmissionScheduleModuleTypeType {
	if o == nil || IsNil(o.Module) {
		var ret AutomaticTransmissionScheduleModuleTypeType
		return ret
	}
	return *o.Module
}

// GetModuleOk returns a tuple with the Module field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleType) GetModuleOk() (*AutomaticTransmissionScheduleModuleTypeType, bool) {
	if o == nil || IsNil(o.Module) {
		return nil, false
	}
	return o.Module, true
}

// HasModule returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleType) HasModule() bool {
	if o != nil && !IsNil(o.Module) {
		return true
	}

	return false
}

// SetModule gets a reference to the given AutomaticTransmissionScheduleModuleTypeType and assigns it to the Module field.
func (o *AutomaticTransmissionScheduleType) SetModule(v AutomaticTransmissionScheduleModuleTypeType) {
	o.Module = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleType) GetFrequency() AutomaticTransmissionScheduleFrequencyType {
	if o == nil || IsNil(o.Frequency) {
		var ret AutomaticTransmissionScheduleFrequencyType
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleType) GetFrequencyOk() (*AutomaticTransmissionScheduleFrequencyType, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleType) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given AutomaticTransmissionScheduleFrequencyType and assigns it to the Frequency field.
func (o *AutomaticTransmissionScheduleType) SetFrequency(v AutomaticTransmissionScheduleFrequencyType) {
	o.Frequency = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleType) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleType) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleType) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *AutomaticTransmissionScheduleType) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleType) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleType) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleType) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *AutomaticTransmissionScheduleType) SetEndDate(v string) {
	o.EndDate = &v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *AutomaticTransmissionScheduleType) SetInactive(v bool) {
	o.Inactive = &v
}

// GetDelta returns the Delta field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleType) GetDelta() bool {
	if o == nil || IsNil(o.Delta) {
		var ret bool
		return ret
	}
	return *o.Delta
}

// GetDeltaOk returns a tuple with the Delta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleType) GetDeltaOk() (*bool, bool) {
	if o == nil || IsNil(o.Delta) {
		return nil, false
	}
	return o.Delta, true
}

// HasDelta returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleType) HasDelta() bool {
	if o != nil && !IsNil(o.Delta) {
		return true
	}

	return false
}

// SetDelta gets a reference to the given bool and assigns it to the Delta field.
func (o *AutomaticTransmissionScheduleType) SetDelta(v bool) {
	o.Delta = &v
}

// GetLastSend returns the LastSend field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleType) GetLastSend() time.Time {
	if o == nil || IsNil(o.LastSend) {
		var ret time.Time
		return ret
	}
	return *o.LastSend
}

// GetLastSendOk returns a tuple with the LastSend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleType) GetLastSendOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSend) {
		return nil, false
	}
	return o.LastSend, true
}

// HasLastSend returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleType) HasLastSend() bool {
	if o != nil && !IsNil(o.LastSend) {
		return true
	}

	return false
}

// SetLastSend gets a reference to the given time.Time and assigns it to the LastSend field.
func (o *AutomaticTransmissionScheduleType) SetLastSend(v time.Time) {
	o.LastSend = &v
}

func (o AutomaticTransmissionScheduleType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutomaticTransmissionScheduleType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageId) {
		toSerialize["messageId"] = o.MessageId
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !IsNil(o.Module) {
		toSerialize["module"] = o.Module
	}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	if !IsNil(o.Delta) {
		toSerialize["delta"] = o.Delta
	}
	if !IsNil(o.LastSend) {
		toSerialize["lastSend"] = o.LastSend
	}
	return toSerialize, nil
}

type NullableAutomaticTransmissionScheduleType struct {
	value *AutomaticTransmissionScheduleType
	isSet bool
}

func (v NullableAutomaticTransmissionScheduleType) Get() *AutomaticTransmissionScheduleType {
	return v.value
}

func (v *NullableAutomaticTransmissionScheduleType) Set(val *AutomaticTransmissionScheduleType) {
	v.value = val
	v.isSet = true
}

func (v NullableAutomaticTransmissionScheduleType) IsSet() bool {
	return v.isSet
}

func (v *NullableAutomaticTransmissionScheduleType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutomaticTransmissionScheduleType(val *AutomaticTransmissionScheduleType) *NullableAutomaticTransmissionScheduleType {
	return &NullableAutomaticTransmissionScheduleType{value: val, isSet: true}
}

func (v NullableAutomaticTransmissionScheduleType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutomaticTransmissionScheduleType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


