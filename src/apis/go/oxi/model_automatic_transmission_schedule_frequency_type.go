/*
OPERA Cloud Xchange Interface OXI API

APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>

API version: 23.0.0.0
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oxi

import (
	"encoding/json"
)

// checks if the AutomaticTransmissionScheduleFrequencyType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutomaticTransmissionScheduleFrequencyType{}

// AutomaticTransmissionScheduleFrequencyType Automatic transmission schedule frequency details
type AutomaticTransmissionScheduleFrequencyType struct {
	Frequency *AutomaticTransmissionScheduleFrequencyTypeType `json:"frequency,omitempty"`
	// Hour of day that the transmission schedule has to run.
	HourToRun *int32 `json:"hourToRun,omitempty"`
	WeekDayToRun *DaysOfWeekType `json:"weekDayToRun,omitempty"`
	// Day of the month the transmission schedule is to run. Value should be between 1 and 31.
	DayToRun *int32 `json:"dayToRun,omitempty"`
	// Number representing the month of year that the transmission schedule is to run. For example, 1 = January, 2 = February, 12 = December, etc.
	MonthToRun *int32 `json:"monthToRun,omitempty"`
	// If frequency type is set to intervals then this value will be used to determine the frequency. For example if value is 18 then transmission will be sent every 18 minutes
	Interval *int32 `json:"interval,omitempty"`
}

// NewAutomaticTransmissionScheduleFrequencyType instantiates a new AutomaticTransmissionScheduleFrequencyType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutomaticTransmissionScheduleFrequencyType() *AutomaticTransmissionScheduleFrequencyType {
	this := AutomaticTransmissionScheduleFrequencyType{}
	return &this
}

// NewAutomaticTransmissionScheduleFrequencyTypeWithDefaults instantiates a new AutomaticTransmissionScheduleFrequencyType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutomaticTransmissionScheduleFrequencyTypeWithDefaults() *AutomaticTransmissionScheduleFrequencyType {
	this := AutomaticTransmissionScheduleFrequencyType{}
	return &this
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleFrequencyType) GetFrequency() AutomaticTransmissionScheduleFrequencyTypeType {
	if o == nil || IsNil(o.Frequency) {
		var ret AutomaticTransmissionScheduleFrequencyTypeType
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleFrequencyType) GetFrequencyOk() (*AutomaticTransmissionScheduleFrequencyTypeType, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleFrequencyType) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given AutomaticTransmissionScheduleFrequencyTypeType and assigns it to the Frequency field.
func (o *AutomaticTransmissionScheduleFrequencyType) SetFrequency(v AutomaticTransmissionScheduleFrequencyTypeType) {
	o.Frequency = &v
}

// GetHourToRun returns the HourToRun field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleFrequencyType) GetHourToRun() int32 {
	if o == nil || IsNil(o.HourToRun) {
		var ret int32
		return ret
	}
	return *o.HourToRun
}

// GetHourToRunOk returns a tuple with the HourToRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleFrequencyType) GetHourToRunOk() (*int32, bool) {
	if o == nil || IsNil(o.HourToRun) {
		return nil, false
	}
	return o.HourToRun, true
}

// HasHourToRun returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleFrequencyType) HasHourToRun() bool {
	if o != nil && !IsNil(o.HourToRun) {
		return true
	}

	return false
}

// SetHourToRun gets a reference to the given int32 and assigns it to the HourToRun field.
func (o *AutomaticTransmissionScheduleFrequencyType) SetHourToRun(v int32) {
	o.HourToRun = &v
}

// GetWeekDayToRun returns the WeekDayToRun field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleFrequencyType) GetWeekDayToRun() DaysOfWeekType {
	if o == nil || IsNil(o.WeekDayToRun) {
		var ret DaysOfWeekType
		return ret
	}
	return *o.WeekDayToRun
}

// GetWeekDayToRunOk returns a tuple with the WeekDayToRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleFrequencyType) GetWeekDayToRunOk() (*DaysOfWeekType, bool) {
	if o == nil || IsNil(o.WeekDayToRun) {
		return nil, false
	}
	return o.WeekDayToRun, true
}

// HasWeekDayToRun returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleFrequencyType) HasWeekDayToRun() bool {
	if o != nil && !IsNil(o.WeekDayToRun) {
		return true
	}

	return false
}

// SetWeekDayToRun gets a reference to the given DaysOfWeekType and assigns it to the WeekDayToRun field.
func (o *AutomaticTransmissionScheduleFrequencyType) SetWeekDayToRun(v DaysOfWeekType) {
	o.WeekDayToRun = &v
}

// GetDayToRun returns the DayToRun field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleFrequencyType) GetDayToRun() int32 {
	if o == nil || IsNil(o.DayToRun) {
		var ret int32
		return ret
	}
	return *o.DayToRun
}

// GetDayToRunOk returns a tuple with the DayToRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleFrequencyType) GetDayToRunOk() (*int32, bool) {
	if o == nil || IsNil(o.DayToRun) {
		return nil, false
	}
	return o.DayToRun, true
}

// HasDayToRun returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleFrequencyType) HasDayToRun() bool {
	if o != nil && !IsNil(o.DayToRun) {
		return true
	}

	return false
}

// SetDayToRun gets a reference to the given int32 and assigns it to the DayToRun field.
func (o *AutomaticTransmissionScheduleFrequencyType) SetDayToRun(v int32) {
	o.DayToRun = &v
}

// GetMonthToRun returns the MonthToRun field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleFrequencyType) GetMonthToRun() int32 {
	if o == nil || IsNil(o.MonthToRun) {
		var ret int32
		return ret
	}
	return *o.MonthToRun
}

// GetMonthToRunOk returns a tuple with the MonthToRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleFrequencyType) GetMonthToRunOk() (*int32, bool) {
	if o == nil || IsNil(o.MonthToRun) {
		return nil, false
	}
	return o.MonthToRun, true
}

// HasMonthToRun returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleFrequencyType) HasMonthToRun() bool {
	if o != nil && !IsNil(o.MonthToRun) {
		return true
	}

	return false
}

// SetMonthToRun gets a reference to the given int32 and assigns it to the MonthToRun field.
func (o *AutomaticTransmissionScheduleFrequencyType) SetMonthToRun(v int32) {
	o.MonthToRun = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *AutomaticTransmissionScheduleFrequencyType) GetInterval() int32 {
	if o == nil || IsNil(o.Interval) {
		var ret int32
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomaticTransmissionScheduleFrequencyType) GetIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *AutomaticTransmissionScheduleFrequencyType) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int32 and assigns it to the Interval field.
func (o *AutomaticTransmissionScheduleFrequencyType) SetInterval(v int32) {
	o.Interval = &v
}

func (o AutomaticTransmissionScheduleFrequencyType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutomaticTransmissionScheduleFrequencyType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	if !IsNil(o.HourToRun) {
		toSerialize["hourToRun"] = o.HourToRun
	}
	if !IsNil(o.WeekDayToRun) {
		toSerialize["weekDayToRun"] = o.WeekDayToRun
	}
	if !IsNil(o.DayToRun) {
		toSerialize["dayToRun"] = o.DayToRun
	}
	if !IsNil(o.MonthToRun) {
		toSerialize["monthToRun"] = o.MonthToRun
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	return toSerialize, nil
}

type NullableAutomaticTransmissionScheduleFrequencyType struct {
	value *AutomaticTransmissionScheduleFrequencyType
	isSet bool
}

func (v NullableAutomaticTransmissionScheduleFrequencyType) Get() *AutomaticTransmissionScheduleFrequencyType {
	return v.value
}

func (v *NullableAutomaticTransmissionScheduleFrequencyType) Set(val *AutomaticTransmissionScheduleFrequencyType) {
	v.value = val
	v.isSet = true
}

func (v NullableAutomaticTransmissionScheduleFrequencyType) IsSet() bool {
	return v.isSet
}

func (v *NullableAutomaticTransmissionScheduleFrequencyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutomaticTransmissionScheduleFrequencyType(val *AutomaticTransmissionScheduleFrequencyType) *NullableAutomaticTransmissionScheduleFrequencyType {
	return &NullableAutomaticTransmissionScheduleFrequencyType{value: val, isSet: true}
}

func (v NullableAutomaticTransmissionScheduleFrequencyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutomaticTransmissionScheduleFrequencyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


