openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to create and manage OPERA Xchange Interface (OXI) configurations\
    \ for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA\
    \ Cloud release 23.0.0.0.<br /><br /><p> This document and all content within\
    \ is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl).\
    \ Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Xchange Interface OXI API
  version: 23.0.0.0
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /oxi/v1
tags:
- description: The OPERA Exchange Content Service offers capability to manage big
    content using MTOM.
  name: OperaExchangeContent
- description: "The Opera Exchange Interface Configuration module offers capability\
    \ of managing, and retrieving interface information."
  name: OperaExchangeInterfaceConfig
- description: Opera Exchange Interface Stats provides statistical data of Uploaded
    and Downloaded messages for OperaExchangeInterface.
  name: OperaExchangeInterfaceStats
paths:
  /automaticTransmissionSchedules:
    post:
      description: API to Create Automatic Transmission Schedules. <p><strong>OperationId:</strong>postAutomaticTransmissionSchedules</p>
      operationId: postAutomaticTransmissionSchedules
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postAutomaticTransmissionSchedules_request'
        description: Request object to create automatic transmission schedules
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Automatic Transmission Schedules
      tags:
      - OperaExchangeInterfaceConfig
      x-codegen-request-body-name: automaticTransmissionSchedulesToBeCreated
  /communicationMethods:
    put:
      description: API to Modify Communication Methods. <p><strong>OperationId:</strong>putCommunicationMethods</p>
      operationId: putCommunicationMethods
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putCommunicationMethods_request'
        description: Request object for modifying Communication Methods.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedCommunicationMethods'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Modify Communication Methods '
      tags:
      - OperaExchangeInterfaceConfig
      x-codegen-request-body-name: communicationMethodsToBeChanged
  /conversionCodeMappingID/{id}/conversionCodeMapping:
    delete:
      description: API to Delete  Interface Mapping Conversion Codes by Conversion
        Code Mapping Id. <p><strong>OperationId:</strong>deleteConversionCodeMappings</p>
      operationId: deleteConversionCodeMappings
      parameters:
      - description: Unique OPERA internal ID used to identify a Conversion Code Mapping
          in OPERA.
        in: path
        name: id
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove Conversion Codes Mappings
      tags:
      - OperaExchangeInterfaceConfig
  /conversionCodesStatus:
    put:
      description: API to Modify Interface Mapping UDF Conversion Codes. <p><strong>OperationId:</strong>putConversionCodesStatus</p>
      operationId: putConversionCodesStatus
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putConversionCodesStatus_request'
        description: Request to change the status of given Conversion Codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedConversionCodesStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Conversion codes Status
      tags:
      - OperaExchangeInterfaceConfig
      x-codegen-request-body-name: conversionCodesStatusToBeChanged
  /externalInterfaceSetups:
    post:
      description: API to Create Interface Setup configuration. <p><strong>OperationId:</strong>postExternalInterfaceSetups</p>
      operationId: postExternalInterfaceSetups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postExternalInterfaceSetups_request'
        description: Request to create External Interface Setups
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Interface Setup details
      tags:
      - OperaExchangeInterfaceConfig
      x-codegen-request-body-name: externalInterfaceSetupsToBeCreated
  /hotels/{externalHotelCode}/interfaces/{interfaceId}/integrationSystems/{integrationSystem}/integrationInboundMessages:
    get:
      description: "API to Fetch Inbound Messages From External System by Hotel Id,\
        \ Interface Id. <p><strong>OperationId:</strong>getIntegrationInboundMessages</p>"
      operationId: getIntegrationInboundMessages
      parameters:
      - description: Unique OPERA IntegrationSystem used to identify a IntegrationSystem
          in OPERA.
        in: path
        name: integrationSystem
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify an Interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique External hotel ID used to identify a external Hotel in
          OPERA.
        in: path
        name: externalHotelCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique External hotel IDs used to identify external Hotel in
          OPERA
        explode: true
        in: query
        name: externalHotelCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Sepcify Message type to restrict results
        explode: true
        in: query
        name: messageTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The ending value of the date range.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: "If true, messages that are marked as reviewed will also be fetched"
        in: query
        name: includeReviewed
        schema:
          type: boolean
      - description: The starting value of the range
        in: query
        name: fromMessageID
        schema:
          type: string
      - description: The ending value of the range
        in: query
        name: toMessageID
        schema:
          type: string
      - description: Specify Integration message reference value to restrict results
        explode: true
        in: query
        name: messageStatus
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specify Integration message reference value to restrict results
        in: query
        name: messageReference
        schema:
          type: string
      - description: Specify partial or complete error message to restrict results
        in: query
        name: errorMessageWildCard
        schema:
          type: string
      - description: This value is only applicable for outbound messages
        in: query
        name: errorMessageType
        schema:
          enum:
          - Error
          - ResultException
          - OptionalWarning
          - Warning
          type: string
      - description: String to search inside a message. User can specify multiple
          strings separated by comma
        in: query
        name: msgContains
        schema:
          type: string
      - description: If true then results with message that has at least one of the
          string specified for message contains will be returned.
        in: query
        name: anyOneOfTheMsg
        schema:
          default: false
          type: boolean
      - description: If true then passed string will be matched against the node values
          of the XML message
        in: query
        name: valuesOnly
        schema:
          default: false
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: If true then errors and warnings will be fetched for action id
          and other criteria mentioned
        in: query
        name: includeErrors
        schema:
          default: false
          type: boolean
      - description: Action ID for which errors and warnings should be fetched
        in: query
        name: actionId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchIntegrationInboundMessages'
          description: Response object for fetch integration outbound messages
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: IntegrationInboundMessages not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Fetch integration inbound messages '
      tags:
      - OperaExchangeInterfaceConfig
  /hotels/{hotelId}/automaticTransmissionSchedules:
    get:
      description: API to Fetch Automatic Transmission Schedules by Hotel Id. <p><strong>OperationId:</strong>getAutomaticTransmissionSchedules</p>
      operationId: getAutomaticTransmissionSchedules
      parameters:
      - description: Unique OPERA internal ID used to identify a hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Interfaces configured for automatic transmission schedules
        explode: true
        in: query
        name: interfaceList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "If true, this flag will set the criteria to return Inactive\
          \ records along with active records."
        in: query
        name: includeInactive
        schema:
          default: false
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchAutomaticTransmissionSchedules'
          description: Response object for fetch automatic transmission schedules
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AutomaticTransmissionSchedules not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Automatic Transmission Schedules
      tags:
      - OperaExchangeInterfaceConfig
    put:
      description: API to Modify  Automatic Transmission Schedules by Hotel Id. <p><strong>OperationId:</strong>putAutomaticTransmissionSchedules</p>
      operationId: putAutomaticTransmissionSchedules
      parameters:
      - description: Unique OPERA internal ID used to identify a hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putAutomaticTransmissionSchedules_request'
        description: Request object to change automatic transmission schedules
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedAutomaticTransmissionSchedules'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Automatic Transmission Schedules
      tags:
      - OperaExchangeInterfaceConfig
      x-codegen-request-body-name: automaticTransmissionSchedulesToBeChanged
  /hotels/{hotelId}/intefaces/{interfaceId}/conversionCodes:
    get:
      description: API to Fetch Interface Mappings UDF Conversion Codes by Hotel Id
        and Interface Id. <p><strong>OperationId:</strong>getConversionCodes</p>
      operationId: getConversionCodes
      parameters:
      - description: Unique OPERA internal ID used to find interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify a Hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Represents both OXI and OXI HUB are installed.
        example: "Central, Property, Both"
        in: query
        name: integrationSystem
        schema:
          enum:
          - Central
          - Property
          - Both
          type: string
      - description: Type of Conversion Code or user-defined function (UDF) module
          name configured in the system.
        in: query
        name: conversionCode
        schema:
          type: string
      - description: A flag that is true if the conversion code is an user-defined
          function (UDF) module code.
        in: query
        name: udfCode
        schema:
          type: boolean
      - description: A flag to indicate whether to include inactive Conversion Codes.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: XML Type by which the Conversion Codes should be filtered.
        in: query
        name: group
        schema:
          type: string
      - description: A flag to indicate whether user-defined function (UDF) module
          names should be included in the results or not.
        in: query
        name: includeUDFCodes
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchConversionCodes'
          description: Response to fetch Conversion Codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ConversionCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Conversion Codes
      tags:
      - OperaExchangeInterfaceConfig
  /hotels/{hotelId}/interfaces/{interfaceId}/accumulatedBusinessEvents:
    get:
      description: "API to Fetch  Accumulated Business Event Messages for External\
        \ Systems by Hotel Id, Interface Id. <p><strong>OperationId:</strong>getAccumulatedBusinessEvents</p>"
      operationId: getAccumulatedBusinessEvents
      parameters:
      - description: Unique OPERA internal ID used to identify an Interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify a Hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Accumulated Business Event Module
        explode: true
        in: query
        name: modules
        schema:
          items:
            enum:
            - Availability
            - Block
            - BlockDetail
            - BlockHeader
            - Rate
            - Reservation
            - Restriction
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: The ending value of the date range.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: Specify primary key identifier to search for
        in: query
        name: primaryKey
        schema:
          type: string
      - description: State of Accumulated Business Event
        in: query
        name: status
        schema:
          enum:
          - New
          - Ready
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Represents both OXI and OXI HUB are installed.
        in: query
        name: integrationSystem
        schema:
          enum:
          - Central
          - Property
          - Both
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchAccumulatedBusinessEvents'
          description: Response object for fetch accumulated business events
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AccumulatedBusinessEvents not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch accumulated business events
      tags:
      - OperaExchangeInterfaceConfig
  ? /hotels/{hotelId}/interfaces/{interfaceId}/conversionCode/{conversionCode}/ID/{id}/operaValue/{operaValue}/externalValue/{externalValue}/conversionCodeMapping
  : put:
      description: "API to Modify  Interface Mapping  Conversion Codes by Hotel Id,\
        \ Interface Id and Conversion Code Id with OPERA value and External value.\
        \ <p><strong>OperationId:</strong>putConversionCodeMappings</p>"
      operationId: putConversionCodeMappings
      parameters:
      - description: EXTERNAL Conversion Code value.
        in: path
        name: externalValue
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: PMS Conversion Code value.
        in: path
        name: operaValue
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify a Conversion Code Mapping
          in OPERA.
        in: path
        name: id
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Conversion Code in OPERA.
        in: path
        name: conversionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify an Interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify a Hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putConversionCodeMappings_request'
        description: Request to update existing Conversion Code Mappings.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedConversionCodeMappings'
          description: Response for updating Conversion Code Mappings.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Conversion Codes Mappings
      tags:
      - OperaExchangeInterfaceConfig
      x-codegen-request-body-name: conversionCodeMappingsToBeChanged
  ? /hotels/{hotelId}/interfaces/{interfaceId}/conversionCode/{conversionCode}/operaValue/{operaValue}/externalValue/{externalValue}/conversionCodeMapping
  : post:
      description: "API to Create  Interface Mapping Conversion Codes by Hotel Id,\
        \ Interface Id and Conversion Code with OPERA value and External value. <p><strong>OperationId:</strong>postConversionCodeMappings</p>"
      operationId: postConversionCodeMappings
      parameters:
      - description: EXTERNAL Conversion Code value.
        in: path
        name: externalValue
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: PMS Conversion Code value.
        in: path
        name: operaValue
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Conversion Code in OPERA.
        in: path
        name: conversionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify an Interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify a Hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postConversionCodeMappings_request'
        description: Request to create Conversion Code Mappings.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/createdConversionCodeMappings'
          description: Response for creating Conversion Code Mappings.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Conversion Codes Mappings
      tags:
      - OperaExchangeInterfaceConfig
      x-codegen-request-body-name: conversionCodeMappingsToBeCreated
  /hotels/{hotelId}/interfaces/{interfaceId}/conversionCode/{conversionCode}/operaValue/{operaValue}/udfMapping:
    delete:
      description: "API to Delete Interface Mapping UDF Conversion Codes by Hotel\
        \ Id, Interface Id and Conversion Code. <p><strong>OperationId:</strong>deleteUDFMappings</p>"
      operationId: deleteUDFMappings
      parameters:
      - description: PMS Conversion Code value.
        in: path
        name: operaValue
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Conversion Code in OPERA.
        in: path
        name: conversionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify an Interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify a Hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Profile type of the user-defined function (UDF) definition.
        in: query
        name: profileType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove UDF Mappings
      tags:
      - OperaExchangeInterfaceConfig
  /hotels/{hotelId}/interfaces/{interfaceId}/conversions/{conversionCode}/conversionCodeMapping:
    get:
      description: "API to Fetch Interface Mapping  Conversion Codes by Hotel Id,\
        \ Interface Id and Conversion Code. <p><strong>OperationId:</strong>getConversionCodeMappings</p>"
      operationId: getConversionCodeMappings
      parameters:
      - description: Conversion Code in OPERA.
        in: path
        name: conversionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify an Interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify a Hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Represents both OXI and OXI HUB are installed.
        example: "Central, Property, Both"
        in: query
        name: integrationSystem
        schema:
          enum:
          - Central
          - Property
          - Both
          type: string
      - description: A flag that is true if the conversion code is an user-defined
          function (UDF) module code.
        example: "true, false"
        in: query
        name: udfCode
        schema:
          default: false
          type: boolean
      - description: This value is used for wild card search on OPERA Code/External
          code.
        in: query
        name: mappingValue
        schema:
          type: string
      - description: Search for both OPERA and External mapping value.
        example: "OperaValue, ExternalValue, Both"
        in: query
        name: searchBy
        schema:
          enum:
          - OperaValue
          - ExternalValue
          - Both
          type: string
      - description: A flag to indicate whether to include Global Mappings or not.
        example: "true, false"
        in: query
        name: includeGlobal
        schema:
          default: true
          type: boolean
      - description: Profile type by which the user-defined function (UDF) mappings
          should be filtered.
        in: query
        name: profileType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchConversionCodeMappings'
          description: Response to fetch Conversion Code Mappings.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ConversionCodeMappings not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Conversion Code Mappings
      tags:
      - OperaExchangeInterfaceConfig
  /hotels/{hotelId}/interfaces/{interfaceId}/externalInterfaceSetups:
    delete:
      description: API to Delete Interface Setup configuration by Hotel Id and Interface
        Id. <p><strong>OperationId:</strong>deleteExternalInterfaceSetups</p>
      operationId: deleteExternalInterfaceSetups
      parameters:
      - description: Unique OPERA internal ID used to find interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to find hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete external Interface Setup details
      tags:
      - OperaExchangeInterfaceConfig
  /hotels/{hotelId}/interfaces/{interfaceId}/integrationSystems/{integrationSystem}/integrationOutboundMessages:
    get:
      description: "API to Fetch Outbound Messages To External System by Hotel Id,\
        \ Interface Id. <p><strong>OperationId:</strong>getIntegrationOutboundMessages</p>"
      operationId: getIntegrationOutboundMessages
      parameters:
      - description: Unique OPERA IntegrationSystem used to identify a IntegrationSystem
          in OPERA.
        in: path
        name: integrationSystem
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify an Interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify a Hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specify action(that has triggered the creation of message) to
          restrict results
        in: query
        name: actionType
        schema:
          type: string
      - description: Specify partial or complete error message to restrict results
        in: query
        name: errorMessageWildCard
        schema:
          type: string
      - description: This value is only applicable for outbound messages
        in: query
        name: errorMessageType
        schema:
          enum:
          - Error
          - ResultException
          - OptionalWarning
          - Warning
          type: string
      - description: The ending value of the date range.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: "If true, messages that are marked as reviewed will also be fetched"
        in: query
        name: includeReviewed
        schema:
          default: false
          type: boolean
      - description: The starting value of the range
        in: query
        name: fromMessageID
        schema:
          type: string
      - description: The ending value of the range
        in: query
        name: toMessageID
        schema:
          type: string
      - description: Specify Integration message reference value to restrict results
        explode: true
        in: query
        name: messageStatus
        schema:
          items:
            type: string
          type: array
        style: form
      - description: String to search inside a message. User can specify multiple
          strings separated by comma
        in: query
        name: msgContains
        schema:
          type: string
      - description: If true then results with message that has at least one of the
          string specified for message contains will be returned.
        in: query
        name: anyOneOfTheMsg
        schema:
          default: false
          type: boolean
      - description: If true then passed string will be matched against the node values
          of the XML message
        in: query
        name: valuesOnly
        schema:
          default: false
          type: boolean
      - description: Specify Integration message reference value to restrict results
        in: query
        name: messageReference
        schema:
          type: string
      - description: Sepcify Message type to restrict results
        explode: true
        in: query
        name: messageTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: If true then errors and warnings will be fetched for action id
          and other criteria mentioned
        in: query
        name: includeErrors
        schema:
          default: false
          type: boolean
      - description: Action ID for which errors and warnings should be fetched
        in: query
        name: actionId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchIntegrationOutboundMessages'
          description: Response object for fetch integration outbound messages
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: IntegrationOutboundMessages not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: fetch integration outbound messages
      tags:
      - OperaExchangeInterfaceConfig
  /hotels/{hotelId}/interfaces/{interfaceId}/interfaceControls:
    get:
      description: API to Fetch  Interface Controls  by Hotel Id and Interface Id
        <p><strong>OperationId:</strong>getInterfaceControls</p>
      operationId: getInterfaceControls
      parameters:
      - description: Unique OPERA internal ID used to identify an Interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify a Hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Represents both OXI and OXI HUB are installed.
        example: "Central, Property, Both"
        in: query
        name: integrationSystem
        schema:
          enum:
          - Central
          - Property
          - Both
          type: string
      - in: query
        name: croCode
        schema:
          type: string
      - example: HANDLE_PSEUDO_ROOMTYPES
        in: query
        name: parameterNameWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchInterfaceControls'
          description: Response Object for fetching OXI Parameters/Settings.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InterfaceControls not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Retrieve OXI Parameters and Defaults
      tags:
      - OperaExchangeInterfaceConfig
  /hotels/{hotelId}/interfaces/{interfaceId}/profiles/{profileType}/profileMatchRules:
    delete:
      description: "API to Delete  Profile Match Rules by Hotel Id, Interface Id and\
        \ Profile Type. <p><strong>OperationId:</strong>deleteProfileMatchRules</p>"
      operationId: deleteProfileMatchRules
      parameters:
      - description: Unique OPERA internal ID used to identify an Profile in OPERA.
        in: path
        name: profileType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify an Interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify an hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete profile match rules
      tags:
      - OperaExchangeInterfaceConfig
  /hotels/{hotelId}/messageStatistics:
    get:
      description: "API to Fetch OXI Dashboard Tile Statistics (Upload and Download\
        \ message counts by Success, Fail and Warning Status codes) by Hotel Id and\
        \ Interface Id. <p><strong>OperationId:</strong>getMessageStatistics</p>"
      operationId: getMessageStatistics
      parameters:
      - description: Unique OPERA internal ID used to find hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Supported Exchange Interface report codes.
        explode: true
        in: query
        name: code
        schema:
          items:
            enum:
            - UploadedMessages
            - DownloadedMessages
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: End date of the report.
        explode: true
        in: query
        name: endDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Start date of the report.
        explode: true
        in: query
        name: startDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Supported Exchange Interface statistical codes.
        explode: true
        in: query
        name: statCode
        schema:
          items:
            enum:
            - Success
            - Failed
            - Warning
            - Total
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: ID of the Interface Setup
        in: query
        name: interfaceId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/messageStatistics'
          description: Response element for Downloaded Messages statistics.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MessageStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Retrieves the statistics of Messages for Opera Exchange Interface.
      tags:
      - OperaExchangeInterfaceStats
  /hotels/{hotelId}/queues/{queueName}/messageStatistics:
    get:
      description: "API to retrieve message statistics for inbound , outbound and\
        \ business event queues. <p><strong>OperationId:</strong>getOXIMessageStatistics</p>"
      operationId: getOXIMessageStatistics
      parameters:
      - description: Queue name from which Message statistics has to be fetched.
        in: path
        name: queueName
        required: true
        schema:
          enum:
          - Inbound
          - Outbound
          - Be
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to find hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Supported Message Status.
        in: query
        name: messageStatus
        required: true
        schema:
          default: Ready
          enum:
          - Processed
          - Failed
          - Ready
          - Expired
          type: string
      - description: InterfaceID for which Message statistics has to be fetched.
        in: query
        name: InterfaceId
        schema:
          type: string
      - description: The ending value of the time span.
        in: query
        name: enqueueEndDate
        schema:
          format: date-time
          type: string
      - description: The starting value of the time span.
        in: query
        name: enqueueStartDate
        schema:
          format: date-time
          type: string
      - description: Attribute that decides whether the results must be grouped additionally
          by Module and Action type of the messages.
        in: query
        name: groupByModuleAndActionType
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/OXIMessageStatistics'
          description: Response elements for Messages statistics.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: OXIMessageStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "Retrieves the statistics of Messages in inbound,outbound and BE queues."
      tags:
      - OperaExchangeInterfaceStats
  /intefaces/{interfaceId}/communicationMethods:
    get:
      description: API to Fetch Communication Methods. <p><strong>OperationId:</strong>getCommunicationMethods</p>
      operationId: getCommunicationMethods
      parameters:
      - description: Unique OPERA internal ID used to find interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: SID Resort
        in: query
        name: isGlobal
        required: true
        schema:
          type: boolean
      - explode: false
        in: query
        name: hotelId
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: InterfaceID
        explode: true
        in: query
        name: interfaceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchCommunicationMethods'
          description: Response to fetch Communication Methods
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CommunicationMethods not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Communication Methods
      tags:
      - OperaExchangeInterfaceConfig
  /interfaceSetups:
    get:
      description: API to Fetch Interface Setup configurations by Interface Ids and
        Hotel Ids. <p><strong>OperationId:</strong>getExternalInterfaceSetups</p>
      operationId: getExternalInterfaceSetups
      parameters:
      - description: InterfaceID
        explode: true
        in: query
        name: interfaceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute that decides whether the search results include the
          XML Schema version details
        in: query
        name: includeXmlVersion
        schema:
          default: false
          type: boolean
      - description: Represents both OXI and OXI HUB are installed.
        in: query
        name: systemType
        schema:
          enum:
          - Central
          - Property
          - Both
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchExternalInterfaceSetups'
          description: Response to fetch External Interface Setups
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExternalInterfaceSetups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: fetch external Interface Setup details
      tags:
      - OperaExchangeInterfaceConfig
    put:
      description: API to Modify  Interface Setup configuration. <p><strong>OperationId:</strong>putExternalInterfaceSetups</p>
      operationId: putExternalInterfaceSetups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putExternalInterfaceSetups_request'
        description: Request to change External Interface Setups
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedExternalInterfaceSetups'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Modify external Interface Setup details
      tags:
      - OperaExchangeInterfaceConfig
      x-codegen-request-body-name: externalInterfaceSetupsToBeChanged
  /interfaces/{interfaceId}/hotels/{hotelId}/queues/{queueName}/dequeueOXIMessages:
    delete:
      description: API to purge messages from inbound and outbound queues. <p><strong>OperationId:</strong>dequeueOXIMessages</p>
      operationId: dequeueOXIMessages
      parameters:
      - description: Queue name from which messages has to be Dequeued.
        in: path
        name: queueName
        required: true
        schema:
          enum:
          - Inbound
          - Outbound
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to find hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal ID used to identify an Interface in OPERA..
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Supported Message Status.
        example: Ready
        in: query
        name: messageStatus
        required: true
        schema:
          enum:
          - Processed
          - Failed
          - Ready
          - Expired
          type: string
      - description: The ending value of the time span.
        in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - description: The starting value of the time span.
        in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - description: Module of the messages.
        in: query
        name: module
        schema:
          type: string
      - description: Action Type of the messages.
        in: query
        name: actionType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Purge the messages from OXI inbound and outbound queues.
      tags:
      - OperaExchangeInterfaceStats
  /interfaces/{interfaceId}/interfaceControls:
    put:
      description: API to Modify Interface Controls by Interface Id. <p><strong>OperationId:</strong>putInterfaceControls</p>
      operationId: putInterfaceControls
      parameters:
      - description: Unique OPERA internal ID used to identify an Interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putInterfaceControls_request'
        description: Request object for changing one or more OXI Parameters/Settings.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedInterfaceControls'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change OXI Parameters and Defaults
      tags:
      - OperaExchangeInterfaceConfig
      x-codegen-request-body-name: interfaceControlsToBeChanged
  /interfaces/{interfaceId}/legacyInterfaceStatus:
    get:
      description: API to Fetch legacy OXI Interface Processor Status by Interface
        Id. <p><strong>OperationId:</strong>getLegacyInterfaceStatus</p>
      operationId: getLegacyInterfaceStatus
      parameters:
      - description: Unique OPERA internal ID used to find interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/legacyInterfaceStatusDetails'
          description: Response object for fetch legacy interface status.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: LegacyInterfaceStatus not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch legacy interface status
      tags:
      - OperaExchangeInterfaceConfig
  /interfaces/{interfaceId}/profileMatchRules:
    get:
      description: API to Fetch Profile Match Rules by Interface Id and Hotel Id.
        <p><strong>OperationId:</strong>getProfileMatchRules</p>
      operationId: getProfileMatchRules
      parameters:
      - description: Unique OPERA internal ID used to identify an Interface in OPERA.
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: false
        in: query
        name: hotelId
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Attribute that decides whether the search results include the
          XML Schema version details
        in: query
        name: includeXmlVersions
        schema:
          default: false
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchProfileMatchRules'
          description: Response object which contains profile match rules
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileMatchRules not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch profile match rules
      tags:
      - OperaExchangeInterfaceConfig
  /lovCode/{lovCode}/listOfValuesOXI:
    get:
      description: API to Fetch list of values for all OXI interface type External
        Systems. <p><strong>OperationId:</strong>getOXIListOfValues</p>
      operationId: getOXIListOfValues
      parameters:
      - description: OXI LOVName in OPERA.
        in: path
        name: lovCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Represents both OXI and OXI HUB are installed.
        example: "Central, Property, Both"
        in: query
        name: integrationSystem
        schema:
          enum:
          - Central
          - Property
          - Both
          type: string
      - description: "Only useful for LOVs that support toggle of inactive records\
          \ inclusion. When set to true, inactive records will be included."
        example: "true ,false"
        in: query
        name: includeInActive
        schema:
          default: false
          enum:
          - true
          - false
          type: boolean
      - description: Name of the parameter.
        explode: true
        in: query
        name: parameterNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of the parameter.
        explode: true
        in: query
        name: parameterValues
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchOXIListOfValues'
          description: Response to fetch External Interface Setups
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: OXIListOfValues not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch list of values details for OXI
      tags:
      - OperaExchangeInterfaceConfig
  /messages/{messageId}/automaticTransmissionSchedules:
    delete:
      description: API to Delete  Automatic Transmission Schedules by Scheduled Message
        Id. <p><strong>OperationId:</strong>deleteAutomaticTransmissionSchedules</p>
      operationId: deleteAutomaticTransmissionSchedules
      parameters:
      - description: Unique OPERA internal ID used to identify a hotel in OPERA.
        in: path
        name: messageId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove Automatic Transmission Schedules
      tags:
      - OperaExchangeInterfaceConfig
  /messages/{messageId}/integrationMessageAttachments:
    get:
      description: API to Fetch OXI Inbound/Outbound XML Message Content by Message
        Id. <p><strong>OperationId:</strong>getIntegrationMessageAttachments</p>
      operationId: getIntegrationMessageAttachments
      parameters:
      - description: Unique OPERA internal ID used to find inbound/outbound Message
          in OPERA.
        example: "23681"
        in: path
        name: messageId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Determines whether message is an inbound message or a outbound
          message
        example: "Inbound, Outbound"
        in: query
        name: integrationMessageType
        schema:
          enum:
          - Inbound
          - Outbound
          type: string
      - description: Represents both OXI and OXI HUB are installed.
        example: "Central, Property, Both"
        in: query
        name: integrationSystem
        schema:
          enum:
          - Central
          - Property
          - Both
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchIntegrationMessageAttachments'
          description: Response object for fetch integration message details with
            xMLMsg string is returned in Base64 Encode.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: IntegrationMessageAttachments not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch integration message attachments
      tags:
      - OperaExchangeContent
  /profileMatchRules:
    post:
      description: API to Create Profile Match Rules. <p><strong>OperationId:</strong>postProfileMatchRules</p>
      operationId: postProfileMatchRules
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postProfileMatchRules_request'
        description: Request object for creating Profile Match Rules Configuration..
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create profile match rules
      tags:
      - OperaExchangeInterfaceConfig
      x-codegen-request-body-name: profileMatchRulesToBeCreated
    put:
      description: API to Modify Profile Match Rules. <p><strong>OperationId:</strong>putProfileMatchRules</p>
      operationId: putProfileMatchRules
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putProfileMatchRules_request'
        description: Request object for changing Profile Match Rules Configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedProfileMatchRules'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Change profile match rules '
      tags:
      - OperaExchangeInterfaceConfig
      x-codegen-request-body-name: profileMatchRulesToBeChanged
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner’s Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    automaticTransmissionSchedulesToBeCreated:
      properties:
        automaticTransmissionSchedules:
          description: List of automatic transmission schedules
          items:
            $ref: '#/components/schemas/automaticTransmissionScheduleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    automaticTransmissionSchedulesType:
      description: List of automatic transmission schedules
      items:
        $ref: '#/components/schemas/automaticTransmissionScheduleType'
      maxItems: 4000
      type: array
    automaticTransmissionScheduleType:
      description: Details which uniquely identifies transmission schedule
      properties:
        messageId:
          description: Unique alpha numeric value which determines exact transmission
            schedule. Pass null when creating new transmission schedule
          maxLength: 30
          minLength: 0
          type: string
        hotelId:
          description: Hotel code for which the automatic transmission schedule is
            set.
          maxLength: 20
          minLength: 0
          type: string
        interface:
          description: Interface configured for the property for which the automatic
            transmission schedule is set.
          maxLength: 80
          minLength: 0
          type: string
        module:
          $ref: '#/components/schemas/automaticTransmissionScheduleModuleTypeType'
        frequency:
          $ref: '#/components/schemas/automaticTransmissionScheduleFrequencyType'
        startDate:
          description: Date from which transmission schedule has to run
          format: date
          type: string
        endDate:
          description: End date of transmission schedule
          format: date
          type: string
        inactive:
          description: Indicates whether automatic transmission is active or not
          type: boolean
        delta:
          description: True to modify how the header and grid information sent in
            the RTAV message.
          type: boolean
        lastSend:
          description: Date when last automatic transmission occurred.
          format: date-time
          type: string
      type: object
    automaticTransmissionScheduleModuleTypeType:
      description: Data modules that are currently supported
      enum:
      - ARExport
      - Block
      - Inventory
      - ProfileRequest
      - ProfileDailyStats
      type: string
    automaticTransmissionScheduleFrequencyType:
      description: Automatic transmission schedule frequency details
      properties:
        frequency:
          $ref: '#/components/schemas/automaticTransmissionScheduleFrequencyTypeType'
        hourToRun:
          description: Hour of day that the transmission schedule has to run.
          type: integer
        weekDayToRun:
          $ref: '#/components/schemas/daysOfWeekType'
        dayToRun:
          description: Day of the month the transmission schedule is to run. Value
            should be between 1 and 31.
          type: integer
        monthToRun:
          description: "Number representing the month of year that the transmission\
            \ schedule is to run. For example, 1 = January, 2 = February, 12 = December,\
            \ etc."
          type: integer
        interval:
          description: If frequency type is set to intervals then this value will
            be used to determine the frequency. For example if value is 18 then transmission
            will be sent every 18 minutes
          type: integer
      type: object
    automaticTransmissionScheduleFrequencyTypeType:
      description: "Frequency for transmission such as Daily, Weekly, Monthly, Yearly\
        \ and Interval settings"
      enum:
      - Daily
      - Weekly
      - Monthly
      - Yearly
      - Interval
      type: string
    daysOfWeekType:
      description: Allowed values for the days of week type.
      enum:
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Sunday
      type: string
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    communicationMethodsToBeChanged:
      properties:
        communicationMethods:
          description: Contains new values along with associated old values to edit.
          items:
            $ref: '#/components/schemas/communicationMethodEditType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    communicationMethodsEditType:
      description: Contains new values along with associated old values to edit.
      items:
        $ref: '#/components/schemas/communicationMethodEditType'
      maxItems: 4000
      type: array
    communicationMethodEditType:
      description: Type represents the Communication Mehtod Base Type.
      properties:
        interfaceId:
          description: OXI Interface ID
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: SID-RESORT for Global Level and HotelId associated with the
            interface for the Property Level configuration.
          maxLength: 20
          minLength: 0
          type: string
        communicationType:
          $ref: '#/components/schemas/communicationType'
        communicationFlow:
          description: "Attribute represents the communication flow like UPLOAD,DOWNLOAD."
          maxLength: 128
          minLength: 0
          type: string
        newMethod:
          $ref: '#/components/schemas/communicationMethodType'
      type: object
    communicationType:
      description: "Define values for Communication Types. e.g. NO_COMMUNICATION for\
        \ None, HTTP for HTTP/S."
      enum:
      - None
      - Http
      type: string
    communicationMethodType:
      description: Type represents the Communication Method Base Type.
      properties:
        interfaceId:
          description: OXI Interface ID
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: SID-RESORT for Global Level and HotelId associated with the
            interface for the Property Level configuration.
          maxLength: 20
          minLength: 0
          type: string
        communicationType:
          $ref: '#/components/schemas/communicationType'
        communicationFlow:
          description: "Attribute represents the communication flow like UPLOAD,DOWNLOAD."
          maxLength: 128
          minLength: 0
          type: string
        noCommunication:
          $ref: '#/components/schemas/communicationMethodNoneType'
        hTTPS:
          $ref: '#/components/schemas/communicationMethodHTTPSType'
        allowedComTypes:
          description: Attribute that indicates whether the communication type allowed
            or not.
          maxLength: 2000
          minLength: 0
          type: string
        displayText:
          description: Attribute represents Description of Communication Flow
          maxLength: 100
          minLength: 0
          type: string
        retryCount:
          description: Attribute represents Retry Count
          type: integer
        retryInterval:
          description: Attribute represents Interval in seconds between retries
          type: integer
        startTime:
          description: Attribute represents Upload start time in HH:MI 24 hrs format
          maxLength: 5
          minLength: 0
          type: string
        noOfDaysToKeep:
          description: Attribute represents Number of days files to be kept in the
            backup folder
          type: integer
        versionNumber:
          description: Attribute represents Version Number of the PM System.
          maxLength: 80
          minLength: 0
          type: string
        systemType:
          description: Attribute represents System Type(Production/Test)
          maxLength: 80
          minLength: 0
          type: string
        chainCode:
          description: Chain code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    communicationMethodNoneType:
      description: Type represents details of NONE Communication Type
      properties:
        sleepTime:
          description: Attribute represents the Idle Time(in Minutes)
          type: number
      type: object
    communicationMethodHTTPSType:
      description: Type represents the Communication Type Base Details.
      properties:
        userName:
          description: Attribute represents Username for Types HTTP
          maxLength: 128
          minLength: 0
          type: string
        password:
          description: Attribute represents Password for Types HTTP
          maxLength: 128
          minLength: 0
          type: string
        sleepTime:
          description: "Attribute represents Idle Time(in Minutes) of HTTP,None"
          type: number
        timeOut:
          description: "Attribute is used to indentify the TimeOut(in Seconds) of\
            \ HTTP,None"
          type: number
        address:
          description: Attribute represents Address
          maxLength: 1028
          minLength: 0
          type: string
        proxyAddress:
          description: Attribute that represents Proxy URL
          maxLength: 1028
          minLength: 0
          type: string
        compressData:
          description: Attribute that indicates whether data to compressed or not
          type: boolean
        useClientCertificate:
          description: Attribute that indicates whether to use client certificate
            or not
          type: boolean
        system:
          $ref: '#/components/schemas/systemType'
        locale:
          description: "Locale(Holidex specific) Values like US,EU"
          maxLength: 20
          minLength: 0
          type: string
        useVaultProxy:
          description: Attribute that indicates whether to use Proxy URL or User configured
            URL.
          type: boolean
        allowCompressData:
          description: Attribute that indicates whether to allow compress data or
            not.
          type: boolean
      type: object
    systemType:
      description: Defines values for System Type
      enum:
      - Dev
      - Uat
      - Stage
      - Prod
      type: string
    changedCommunicationMethods:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    conversionCodesStatusToBeChanged:
      properties:
        integrationSystem:
          $ref: '#/components/schemas/integrationSystemType'
        conversionCodesStatus:
          description: Conversion Code and status information.
          items:
            $ref: '#/components/schemas/conversionCodeStatusType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    integrationSystemType:
      description: Represents both OXI and OXI HUB are installed.
      enum:
      - Central
      - Property
      - Both
      type: string
    conversionCodesStatusType:
      description: Conversion Code and status information.
      items:
        $ref: '#/components/schemas/conversionCodeStatusType'
      maxItems: 4000
      type: array
    conversionCodeStatusType:
      description: A common type contains basic information about Conversion Code.
      properties:
        hotelId:
          description: Hotel Code of the Property.
          maxLength: 20
          minLength: 0
          type: string
        interfaceId:
          description: Identifier of the Interface.
          maxLength: 80
          minLength: 0
          type: string
        conversionCode:
          description: Type of Conversion Code or user-defined function (UDF) module
            name configured in the system.
          maxLength: 80
          minLength: 0
          type: string
        uDFCode:
          description: A flag that is true if the conversion code is an user-defined
            function (UDF) module code.
          type: boolean
        activate:
          description: A flag that indicates whether the Conversion Code should be
            activated or inactivated.
          type: boolean
      type: object
    changedConversionCodesStatus:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    externalInterfaceSetupsToBeCreated:
      properties:
        externalInterfaceSetups:
          description: List of Interface Setups.
          items:
            $ref: '#/components/schemas/interfaceSetupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    interfaceSetupsType:
      description: List of Interface Setups.
      items:
        $ref: '#/components/schemas/interfaceSetupType'
      maxItems: 4000
      type: array
    interfaceSetupType:
      description: Type represents ID one Interface Setup
      properties:
        interfaceId:
          description: ID of the Interface Setup
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: Property for which the Interface Setup is defined.
          maxLength: 20
          minLength: 0
          type: string
        externalHotelCode:
          description: Corresponding property in the external system
          maxLength: 20
          minLength: 0
          type: string
        machine:
          description: Logical Name of the machine that runs the OXIHUB
          type: integer
        description:
          description: Detailed information about the interface.
          maxLength: 2000
          minLength: 0
          type: string
        messageFormat:
          description: "Type of the message. (XML, TPI, AMF, etc.)."
          maxLength: 80
          minLength: 0
          type: string
        xMLVersions:
          description: Collection of XMLTypes
          items:
            $ref: '#/components/schemas/interfaceSetupXMLVersionType'
          maxItems: 4000
          type: array
        databaseId:
          description: Database ID
          maxLength: 20
          minLength: 0
          type: string
        interfaceType:
          description: "Type of the interface (UPLOAD, DOWNLOAD, EXPORT, FTCRS, HOLIDEX,\
            \ etc.,)."
          maxLength: 40
          minLength: 0
          type: string
        externalSystemActivated:
          description: Indicates if external system is active
          type: boolean
        systemType:
          $ref: '#/components/schemas/interfaceSystemType'
        batchProcessBE:
          description: Select for all interfaces that send data from Opera to an external
            system.
          type: boolean
        zipData:
          description: Compress all accumulated Business Events if true.
          type: boolean
        deltaMode:
          description: Indicates external system does not send the full message for
            changes.
          type: boolean
        deletionIndicator:
          $ref: '#/components/schemas/interfaceSetupMessageIndicatorType'
        keepingIndicator:
          $ref: '#/components/schemas/interfaceSetupMessageIndicatorType'
        orsDestination:
          description: Indicates if interface is ORS destination.
          type: boolean
        xmlSchemaVersionsNegotiable:
          description: Indicates if XML Versions Negotiable.
          type: boolean
        negotiateXmlSchemaVersion:
          description: Indicates to set all XML Versions to Max version.
          type: boolean
        setAllToVersion:
          description: XML Version to be used by all XLM schemas.
          maxLength: 4
          minLength: 0
          type: string
      type: object
    interfaceSetupXMLVersionsType:
      description: Collection of XMLTypes
      items:
        $ref: '#/components/schemas/interfaceSetupXMLVersionType'
      maxItems: 4000
      type: array
    interfaceSetupXMLVersionType:
      description: Type representing one XML Type Version for one Interface Setup
      properties:
        xMLType:
          description: XML Type for the current record
          maxLength: 20
          minLength: 0
          type: string
        maximumVersion:
          description: Maximum Version
          maxLength: 80
          minLength: 0
          type: string
        version:
          description: Version of the current XML Type
          maxLength: 4
          minLength: 0
          type: string
      type: object
    interfaceSystemType:
      description: Defines values for System Type of the interface
      enum:
      - Oxi
      - OxiHub
      - OgSpa
      - OgGaming
      - Bexml
      - Import
      - WebServices
      type: string
    interfaceSetupMessageIndicatorType:
      description: Type represents indicators for deleting/keeping data in the OPERA
        system from an incoming message.
      properties:
        characterIndicator:
          description: Character Indicator
          maxLength: 20
          minLength: 0
          type: string
        numericIndicator:
          description: Numeric Indicator
          type: number
        dateIndicator:
          description: Date Indicator.
          format: date
          type: string
      type: object
    fetchIntegrationInboundMessages:
      properties:
        messages:
          description: List of integration inbound messages
          items:
            $ref: '#/components/schemas/integrationInboundMessageType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    integrationInboundMessagesType:
      description: List of integration inbound messages
      items:
        $ref: '#/components/schemas/integrationInboundMessageType'
      maxItems: 4000
      type: array
    integrationInboundMessageType:
      description: Elements that uniquely identifies inbound message
      properties:
        messageId:
          $ref: '#/components/schemas/uniqueID_Type'
        enqueueTime:
          description: TimeStamp of enqueue of message in OXI Monitoring tables (Inbound/Outbound).
          format: date-time
          type: string
        dequeueTime:
          description: TimeStamp of dequeue of message from OXI Monitoring tables
            (Inbound/Outbound).
          format: date-time
          type: string
        interface:
          description: The interface this message was created for
          maxLength: 80
          minLength: 0
          type: string
        messageType:
          description: "This identifies the kind of message sent (e.g., reservation,\
            \ profile, rate, block, rate restriction, inventory, and result)"
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: Property this message was sent from.
          maxLength: 20
          minLength: 0
          type: string
        messageStatus:
          description: Status of the transmitted message.
          maxLength: 80
          minLength: 0
          type: string
        reviewed:
          description: Flag that tells whether the message is marked as reviewed or
            not
          type: boolean
        messageReference:
          description: Integration message reference
          maxLength: 100
          minLength: 0
          type: string
        messagePrimayInfo:
          description: Information that was obtained in a message such as guest last/first
            name from a reservation message or block code from a block message.
          maxLength: 200
          minLength: 0
          type: string
        notices:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        attachmentExists:
          description: Flag that tells whether the message has attachments or not
          type: boolean
        processStatus:
          description: Status of the transmitted message.
          maxLength: 80
          minLength: 0
          type: string
        retryCount:
          description: Shows whether the processing of this message was retried and
            how many times.
          type: integer
        externalMessageKey:
          description: Populated if external message key is available
          maxLength: 200
          minLength: 0
          type: string
        externalHotelCode:
          description: External system hotel code
          maxLength: 20
          minLength: 0
          type: string
      type: object
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    fetchAutomaticTransmissionSchedules:
      properties:
        automaticTransmissonSchedules:
          description: List of automatic transmission schedules
          items:
            $ref: '#/components/schemas/automaticTransmissionScheduleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    automaticTransmissionSchedulesToBeChanged:
      properties:
        automaticTransmissionSchedules:
          description: List of automatic transmission schedules
          items:
            $ref: '#/components/schemas/automaticTransmissionScheduleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedAutomaticTransmissionSchedules:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchConversionCodes:
      properties:
        conversionCodes:
          description: List of Conversion Codes.
          items:
            $ref: '#/components/schemas/conversionCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    conversionCodesType:
      description: List of Conversion Codes.
      items:
        $ref: '#/components/schemas/conversionCodeType'
      maxItems: 4000
      type: array
    conversionCodeType:
      description: A common type contains basic information about Conversion Code.
      properties:
        hotelId:
          description: Hotel Code of the Property.
          maxLength: 20
          minLength: 0
          type: string
        interfaceId:
          description: Identifier of the Interface.
          maxLength: 80
          minLength: 0
          type: string
        conversionCode:
          description: Type of Conversion Code or user-defined function (UDF) module
            name configured in the system.
          maxLength: 80
          minLength: 0
          type: string
        uDFCode:
          description: A flag that is true if the conversion code is an user-defined
            function (UDF) module code.
          type: boolean
        label:
          description: Label of the Conversion Code that is displayed in UI.
          maxLength: 200
          minLength: 0
          type: string
        description:
          description: Description of the Conversion Code.
          maxLength: 2000
          minLength: 0
          type: string
        active:
          description: A field that distinguishes active and inactive Conversion Codes.
          type: boolean
        group:
          description: XML Types for the Conversion Code.
          maxLength: 2000
          minLength: 0
          type: string
        master:
          $ref: '#/components/schemas/conversionCodeMasterType'
      type: object
    conversionCodeMasterType:
      description: "A type that holds details of master code, that the conversion\
        \ code depends on."
      properties:
        code:
          description: Value of the master code that the conversion code depends on.
          maxLength: 80
          minLength: 0
          type: string
        label:
          description: Label of the master code.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    fetchAccumulatedBusinessEvents:
      properties:
        businessEvents:
          description: List of accumulated business event messages
          items:
            $ref: '#/components/schemas/accumulatedBusinessEventType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    accumulatedBusinessEventsType:
      description: List of accumulated business event messages
      items:
        $ref: '#/components/schemas/accumulatedBusinessEventType'
      maxItems: 4000
      type: array
    accumulatedBusinessEventType:
      description: Business Event message details
      properties:
        primaryKey:
          description: Primary Key identifier assigned to the business event.
          maxLength: 40
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/accumulatedBusinessEventStatusType'
        createDate:
          description: Data when the message was created by external systems
          format: date-time
          type: string
        interface:
          description: The interface this message was created for
          maxLength: 20
          minLength: 0
          type: string
        module:
          description: "Data module of outgoing message. This identifies the kind\
            \ of message sent (e.g., reservation, profile, rate, block, rate restriction,\
            \ inventory, and result)"
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Property this message was sent from.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    accumulatedBusinessEventStatusType:
      description: State of Accumulated Business Event
      enum:
      - New
      - Ready
      type: string
    conversionCodeMappingsToBeChanged:
      properties:
        integrationSystem:
          $ref: '#/components/schemas/integrationSystemType'
        conversionCodeMappings:
          description: List of Conversion Code Mappings.
          items:
            $ref: '#/components/schemas/conversionCodeMappingType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    conversionCodeMappingsType:
      description: List of Conversion Code Mappings.
      items:
        $ref: '#/components/schemas/conversionCodeMappingType'
      maxItems: 4000
      type: array
    conversionCodeMappingType:
      description: A common type contains basic information about Conversion Code.
      properties:
        hotelId:
          description: Hotel Code of the Property.
          maxLength: 20
          minLength: 0
          type: string
        interfaceId:
          description: Identifier of the Interface.
          maxLength: 80
          minLength: 0
          type: string
        conversionCode:
          description: Type of Conversion Code or user-defined function (UDF) module
            name configured in the system.
          maxLength: 80
          minLength: 0
          type: string
        uDFCode:
          description: A flag that is true if the conversion code is an user-defined
            function (UDF) module code.
          type: boolean
        id:
          description: "Conversion Code Detail Sequence Number, that uniquely identifies\
            \ a mapping."
          type: number
        operaValue:
          description: OPERA Code value or user-defined function (UDF) field name
            of the mapping.
          maxLength: 40
          minLength: 0
          type: string
        externalValue:
          description: A value in the External System that should be mapped to the
            corresponding OPERA Value or user-defined function (UDF) field.
          maxLength: 100
          minLength: 0
          type: string
        operaColumn:
          description: Name of the OPERA column that is used in the user-defined function
            (UDF) mapping.
          maxLength: 40
          minLength: 0
          type: string
        externalFieldName:
          description: Field name in the external system that is used in the user-defined
            function (UDF) mapping.
          maxLength: 100
          minLength: 0
          type: string
        profileType:
          description: Profile type of the user-defined function (UDF) definition.
          maxLength: 20
          minLength: 0
          type: string
        operaToExternalDefault:
          description: "When this is true, the External Value of current record is\
            \ considered to be the default mapping value, where there are more than\
            \ one mapping for OPERA Value."
          type: boolean
        externalToOperaDefault:
          description: "When this is true, the OPERA Value of current record is considered\
            \ to be the default mapping value, where there are more than one mapping\
            \ for the External System Value."
          type: boolean
        overrideExternalDefault:
          description: "A flag to indicate whether the current External Value should\
            \ be considered as default, when there is already a default External Value\
            \ mapped for the same OPERA Value."
          type: boolean
        overrideOperaDefault:
          description: "A flag to indicate whether the current OPERA Value should\
            \ be considered as default, when there is already a default OPERA Value\
            \ mapped for the same External Value."
          type: boolean
        active:
          description: A flag to indicate whether the conversion code mapping is active
            in the system or not.
          type: boolean
        iFCCreated:
          description: A flag to indicate whether this conversion was manually entered
            or IFC created.
          type: boolean
        masterValue:
          description: "Master Value for the Conversion Code Mapping (if any), to\
            \ which the OPERA mapping value corresponds to. For user-defined function\
            \ (UDF) mapping, this field represents the profile type of a profile UDF\
            \ definition."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    changedConversionCodeMappings:
      properties:
        conversionCodeMappingStatus:
          $ref: '#/components/schemas/conversionCodeMappingStatusType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    conversionCodeMappingStatusType:
      description: A type that holds status after creating/changing a conversion code
        mapping.
      properties:
        operaDefaultExists:
          description: A flag that indicates if another Opera Value is marked as External->OPERA
            default for the same External Value mapping.
          type: boolean
        externalDefaultExists:
          description: A flag that indicates if another External Value is marked as
            OPERA->External default for the same Opera Value mapping.
          type: boolean
      type: object
    conversionCodeMappingsToBeCreated:
      properties:
        integrationSystem:
          $ref: '#/components/schemas/integrationSystemType'
        conversionCodeMappings:
          description: List of Conversion Code Mappings.
          items:
            $ref: '#/components/schemas/conversionCodeMappingType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    createdConversionCodeMappings:
      properties:
        conversionCodeMappingStatus:
          $ref: '#/components/schemas/conversionCodeMappingStatusType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchConversionCodeMappings:
      properties:
        conversionCodeMappings:
          description: List of Conversion Code Mappings.
          items:
            $ref: '#/components/schemas/conversionCodeMappingType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchIntegrationOutboundMessages:
      properties:
        messages:
          description: List of integration outbound messages
          items:
            $ref: '#/components/schemas/integrationOutboundMessageType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    integrationOutboundMessagesType:
      description: List of integration outbound messages
      items:
        $ref: '#/components/schemas/integrationOutboundMessageType'
      maxItems: 4000
      type: array
    integrationOutboundMessageType:
      description: Elements that uniquely identifies inbound message
      properties:
        messageId:
          $ref: '#/components/schemas/uniqueID_Type'
        enqueueTime:
          description: TimeStamp of enqueue of message in OXI Monitoring tables (Inbound/Outbound).
          format: date-time
          type: string
        dequeueTime:
          description: TimeStamp of dequeue of message from OXI Monitoring tables
            (Inbound/Outbound).
          format: date-time
          type: string
        interface:
          description: The interface this message was created for
          maxLength: 80
          minLength: 0
          type: string
        messageType:
          description: "This identifies the kind of message sent (e.g., reservation,\
            \ profile, rate, block, rate restriction, inventory, and result)"
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: Property this message was sent from.
          maxLength: 20
          minLength: 0
          type: string
        messageStatus:
          description: Status of the transmitted message.
          maxLength: 80
          minLength: 0
          type: string
        reviewed:
          description: Flag that tells whether the message is marked as reviewed or
            not
          type: boolean
        messageReference:
          description: Integration message reference
          maxLength: 100
          minLength: 0
          type: string
        messagePrimayInfo:
          description: Information that was obtained in a message such as guest last/first
            name from a reservation message or block code from a block message.
          maxLength: 200
          minLength: 0
          type: string
        notices:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        attachmentExists:
          description: Flag that tells whether the message has attachments or not
          type: boolean
        businessEventQueue:
          $ref: '#/components/schemas/pendingBusinessEventType'
        updateTime:
          description: TimeStamp of change in message processing status (PROCESSED/FAILED/RESEND_SUCCESS/REJECT).
          format: date-time
          type: string
        resultTime:
          description: TimeStamp of receival of acknowledgement from external system
            (RESULT_SUCCESS/RESULT_FAILED).
          format: date-time
          type: string
        deliveryTime:
          description: TimeStamp of receival of http call status intiated by the OXI
            processor to deliver message to the external system.
          format: date-time
          type: string
      type: object
    pendingBusinessEventType:
      description: Business event queue status common details
      properties:
        module:
          description: Module name where the change occurred
          maxLength: 40
          minLength: 0
          type: string
        externalSystem:
          description: Name of the external system that the message was created for
          maxLength: 4000
          minLength: 0
          type: string
        actionType:
          description: Type of action that the outbound message is pertaining to
          maxLength: 40
          minLength: 0
          type: string
        actionId:
          description: Action Id number that is automatically assigned to the action
            when it happened
          maxLength: 40
          minLength: 0
          type: string
        enquiryDate:
          description: Date when the business event change occurred
          format: date-time
          type: string
        hotelId:
          description: Hotel Code associated with business event
          maxLength: 20
          minLength: 0
          type: string
        createdDate:
          description: Date and time that the change happened
          format: date-time
          type: string
        primaryKey:
          description: Alpha-numeric key to uniquely identify the data applicable
            to that particular action
          maxLength: 2000
          minLength: 0
          type: string
        consumer:
          description: Name of the external system that the message was created for
            and needs to picked up by.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    fetchInterfaceControls:
      properties:
        interfaceControlGroups:
          description: OXI Parameters/Settings group.
          items:
            $ref: '#/components/schemas/interfaceControlGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    interfaceControlGroupsType:
      description: OXI Parameters/Settings group.
      items:
        $ref: '#/components/schemas/interfaceControlGroupType'
      maxItems: 4000
      type: array
    interfaceControlGroupType:
      description: Type to group the different OXI Parameters/Settings.
      properties:
        groupName:
          description: Group Name.
          maxLength: 80
          minLength: 0
          type: string
        displayName:
          description: Group Display Name.
          maxLength: 80
          minLength: 0
          type: string
        interfaceControls:
          description: OXI Parameters/Settings.
          items:
            $ref: '#/components/schemas/interfaceControlType'
          maxItems: 4000
          type: array
      type: object
    interfaceControlsType:
      description: OXI Parameters/Settings.
      items:
        $ref: '#/components/schemas/interfaceControlType'
      maxItems: 4000
      type: array
    interfaceControlType:
      description: Internal settings that can be of a certain valueType.
      properties:
        shortDescription:
          maxLength: 2000
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        wildCardMatch:
          description: A flag which indicate whether a wild card search should be
            made.
          type: boolean
        name:
          maxLength: 80
          minLength: 0
          type: string
        displayName:
          maxLength: 80
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/applicationSettingTypeType'
        hotelId:
          description: "Each configuration item will come with a HotelCode which will\
            \ help the configuration to specify what context the update has to be.\
            \ Eg. _Global,ORS,'CRO', etc."
          maxLength: 20
          minLength: 0
          type: string
        sequence:
          type: number
        editAllowed:
          type: boolean
        value:
          maxLength: 2000
          minLength: 0
          type: string
        scope:
          enum:
          - P
          - G
          - Ch
          - C
          type: string
        valueType:
          enum:
          - Yn
          - Integer
          - String
          - SingleSelectLov
          - MultiSelectLov
          - ShuttleLov
          - Custom
          - Double
          - Secure
          type: string
        conversionType:
          $ref: '#/components/schemas/applicationSettingConversionType'
        subscriptionCountEligible:
          description: Indicator if the function does not count against the OPERA
            Control function count limit or not
          type: boolean
        settings:
          items:
            $ref: '#/components/schemas/baseApplicationSettingType'
          maxItems: 4000
          type: array
        levelType:
          $ref: '#/components/schemas/applicationSettingLevelType'
        levelCode:
          maxLength: 20
          minLength: 0
          type: string
        interfaceId:
          description: Identifier of the Interface.
          maxLength: 80
          minLength: 0
          type: string
        useGlobal:
          description: Flag indicating to use global inbound/outbound value for conversion
            code.
          type: boolean
        oxiParameterGroup:
          description: V5 parameter group.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    applicationSettingTypeType:
      enum:
      - Function
      - Parameter
      - Setting
      type: string
    applicationSettingConversionType:
      enum:
      - Default
      - Parameter
      type: string
    baseApplicationSettingType:
      description: Internal settings that can be of a certain valueType.
      properties:
        shortDescription:
          maxLength: 2000
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        wildCardMatch:
          description: A flag which indicate whether a wild card search should be
            made.
          type: boolean
        name:
          maxLength: 80
          minLength: 0
          type: string
        displayName:
          maxLength: 80
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/applicationSettingTypeType'
        hotelId:
          description: "Each configuration item will come with a HotelCode which will\
            \ help the configuration to specify what context the update has to be.\
            \ Eg. _Global,ORS,'CRO', etc."
          maxLength: 20
          minLength: 0
          type: string
        sequence:
          type: number
        editAllowed:
          type: boolean
        value:
          maxLength: 2000
          minLength: 0
          type: string
        scope:
          enum:
          - P
          - G
          - Ch
          - C
          type: string
        valueType:
          enum:
          - Yn
          - Integer
          - String
          - SingleSelectLov
          - MultiSelectLov
          - ShuttleLov
          - Custom
          - Double
          - Secure
          type: string
        conversionType:
          $ref: '#/components/schemas/applicationSettingConversionType'
        subscriptionCountEligible:
          description: Indicator if the function does not count against the OPERA
            Control function count limit or not
          type: boolean
      type: object
    applicationSettingLevelType:
      enum:
      - Global
      - Hotel
      - Cro
      type: string
    messageStatistics:
      description: Response element for Downloaded Messages statistics.
      properties:
        reports:
          $ref: '#/components/schemas/messageStatistics_reports'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    interfaceSetupIDType:
      description: Type represents ID one Interface Setup
      properties:
        interfaceId:
          description: ID of the Interface Setup
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: Property for which the Interface Setup is defined.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    exchangeStatReportDetailsType:
      description: Exchange Interface Report Type.
      items:
        $ref: '#/components/schemas/exchangeStatReportType'
      maxItems: 4000
      type: array
    exchangeStatReportType:
      description: Concrete exchange interface report type.
      properties:
        stat:
          items:
            $ref: '#/components/schemas/exchangeStatType'
          maxItems: 4000
          type: array
        reportCode:
          $ref: '#/components/schemas/exchangeStatReportCodeType'
        start:
          format: date
          type: string
        end:
          format: date
          type: string
      type: object
    exchangeStatType:
      description: "Since the statistical value can be represented in different measure\
        \ of units, this element will provide a flexible definition for the supported\
        \ Opera9 statistical units."
      properties:
        unitType:
          description: Unit of measurement or the actual code that defines the value.
            Eg. CurrencyCode for the Amount Category.
          maxLength: 3
          minLength: 3
          type: string
        unitValue:
          description: Statistical value.
          type: number
        unitCategory:
          $ref: '#/components/schemas/statUnitCategoryType'
        code:
          $ref: '#/components/schemas/exchangeStatCodeType'
      type: object
    statUnitCategoryType:
      description: Supported statistical units.
      enum:
      - Numeric
      - Amount
      type: string
    exchangeStatCodeType:
      description: Supported Exchange Interface statistical codes.
      enum:
      - Success
      - Failed
      - Warning
      - Total
      type: string
    exchangeStatReportCodeType:
      description: Supported Exchange Interface report codes.
      enum:
      - UploadedMessages
      - DownloadedMessages
      type: string
    OXIMessageStatistics:
      properties:
        messageStatisticsReport:
          description: Exchange interface message statistics report type.
          items:
            $ref: '#/components/schemas/messageStatisticsType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    messageStatisticsReportType:
      description: Exchange interface message statistics report type.
      items:
        $ref: '#/components/schemas/messageStatisticsType'
      maxItems: 4000
      type: array
    messageStatisticsType:
      description: Type for Message statistics Details.
      properties:
        interfaceId:
          description: InterfaceId of the Messages.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: Property of the Messages.
          maxLength: 20
          minLength: 0
          type: string
        module:
          description: Module name of messages.
          maxLength: 40
          minLength: 0
          type: string
        actionType:
          description: Action Type of the messages.
          maxLength: 40
          minLength: 0
          type: string
        messageStatus:
          $ref: '#/components/schemas/oXIMessageStatusType'
        messageCount:
          description: Number of the messages
          type: integer
        lastProcessedDate:
          description: Last date on which messages are processed for given criteria.
          format: date-time
          type: string
      type: object
    oXIMessageStatusType:
      description: Supported Message Status.
      enum:
      - Processed
      - Failed
      - Ready
      - Expired
      type: string
    fetchCommunicationMethods:
      properties:
        communicationMethods:
          description: ""
          items:
            $ref: '#/components/schemas/communicationMethodType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    communicationMethodsType:
      description: ""
      items:
        $ref: '#/components/schemas/communicationMethodType'
      maxItems: 4000
      type: array
    fetchExternalInterfaceSetups:
      properties:
        externalInterfaceSetups:
          description: List of Interface Setups.
          items:
            $ref: '#/components/schemas/interfaceSetupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    externalInterfaceSetupsToBeChanged:
      properties:
        externalInterfaceSetups:
          description: List of Interface Setups.
          items:
            $ref: '#/components/schemas/interfaceSetupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedExternalInterfaceSetups:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    interfaceControlsToBeChanged:
      properties:
        integrationSystem:
          $ref: '#/components/schemas/integrationSystemType'
        interfaceControls:
          description: OXI Parameters/Settings.
          items:
            $ref: '#/components/schemas/interfaceControlType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedInterfaceControls:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    legacyInterfaceStatusDetails:
      description: Response object for fetch legacy interface status.
      properties:
        interfacesStatus:
          description: Collection which contains Interface ID and its details.
          items:
            $ref: '#/components/schemas/interfaceStatusType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    interfacesStatusType:
      description: Collection which contains Interface ID and its details.
      items:
        $ref: '#/components/schemas/interfaceStatusType'
      maxItems: 4000
      type: array
    interfaceStatusType:
      description: Type which holds the details of Interface.
      properties:
        interfaceId:
          description: Interface ID for which processor will be started.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code which is associated with Interface ID will be processed.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of Interface ID.
          maxLength: 40
          minLength: 0
          type: string
        processType:
          $ref: '#/components/schemas/interfaceStatusProcessTypeType'
        processRole:
          $ref: '#/components/schemas/interfaceStatusProcessRoleType'
        status:
          $ref: '#/components/schemas/exchangeInterfaceStatusType'
        command:
          $ref: '#/components/schemas/exchangeInterfaceStatusCommandType'
        updatedTime:
          description: Indicates time at which process started.
          format: date
          type: string
        user:
          description: User who started the processor.
          maxLength: 40
          minLength: 0
          type: string
        systemType:
          description: "The System type for which Interface Setups have to be listed\
            \ like OXI, OXIHub."
          maxLength: 80
          minLength: 0
          type: string
      type: object
    interfaceStatusProcessTypeType:
      description: Processor use Database Job.
      enum:
      - NtService
      - DbmsJob
      type: string
    interfaceStatusProcessRoleType:
      description: FileExport process.
      enum:
      - Upload
      - Download
      - Lookup
      - Communication
      - Resync
      - FileExport
      type: string
    exchangeInterfaceStatusType:
      description: Indicates that Interface process is disconnected.
      enum:
      - Running
      - Stopped
      - Exited
      - Disconnected
      type: string
    exchangeInterfaceStatusCommandType:
      description: Command to restart Interface process.
      enum:
      - Start
      - Stop
      - Exit
      - Diagnostic
      - Restart
      type: string
    fetchProfileMatchRules:
      properties:
        exchangeProfileMatchRules:
          description: Type that holds collection of exchange profile match rules.
          items:
            $ref: '#/components/schemas/exchangeProfileMatchRuleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exchangeProfileMatchRulesType:
      description: Type that holds collection of exchange profile match rules.
      items:
        $ref: '#/components/schemas/exchangeProfileMatchRuleType'
      maxItems: 4000
      type: array
    exchangeProfileMatchRuleType:
      description: Type that represents a rule to define point criteria and threshold.
      properties:
        threshold:
          description: Threshold level of Match Point Criteria.
          type: number
        pointCriteria:
          description: "Type that represents Criteria such as match attributes, points\
            \ and Active Flag to match profiles."
          items:
            $ref: '#/components/schemas/criterionType'
          maxItems: 4000
          type: array
        interfaceId:
          description: Interface for which the rules are configured.
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: Hotel for which the rules are configured.
          maxLength: 20
          minLength: 0
          type: string
        profileType:
          $ref: '#/components/schemas/exchangeProfileTypeType'
        active:
          description: The activation flag for the rule by itself.
          type: boolean
      type: object
    pointCriteriaType:
      description: "Type that represents Criteria such as match attributes, points\
        \ and Active Flag to match profiles."
      items:
        $ref: '#/components/schemas/criterionType'
      maxItems: 4000
      type: array
    criterionType:
      description: "Type that represents Criteria such as match attributes, points\
        \ and Active Flag for Profile Match Rule."
      properties:
        points:
          description: Weighing points for the given match rule.
          type: number
        active:
          description: The activation flag for the match rule criteria.
          type: boolean
        matchAttributes:
          description: Rules defining the match Attribute.
          items:
            $ref: '#/components/schemas/matchAttributeTypeType'
          maxItems: 4000
          type: array
      type: object
    matchAttributesType:
      description: Rules defining the match Attribute.
      items:
        $ref: '#/components/schemas/matchAttributeTypeType'
      maxItems: 4000
      type: array
    matchAttributeTypeType:
      description: Profiles to match with Alternate Last Name. Alternate Last Name
        is not for OXI.
      enum:
      - AddressLine1
      - ARNumber
      - Birthday
      - City
      - ClientID
      - CorpNumber
      - Country
      - CreditCard
      - Email
      - Fax
      - FirstName
      - IATANumber
      - MembershipNumber
      - LastName
      - PassportNumber
      - PhoneNumber
      - PostalCode
      - State
      - SubscriptionID
      - AlternateFirstName
      - AlternateLastName
      type: string
    exchangeProfileTypeType:
      description: Represents Group profile type.
      enum:
      - Guest
      - Company
      - TravelAgent
      - Source
      - Group
      type: string
    fetchOXIListOfValues:
      properties:
        listOfValues:
          $ref: '#/components/schemas/listOfValuesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    listOfValuesType:
      properties:
        items:
          items:
            $ref: '#/components/schemas/itemType'
          maxItems: 4000
          type: array
        lOVName:
          description: List of Values name.
          maxLength: 100
          minLength: 0
          type: string
        itemCount:
          type: integer
        description:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    itemType:
      properties:
        iDs:
          items:
            $ref: '#/components/schemas/idType'
          maxItems: 4000
          type: array
        flexfields:
          description: Collection of generic Name-Value-Pair parameters.
          items:
            $ref: '#/components/schemas/parameterType'
          maxItems: 4000
          type: array
        code:
          maxLength: 2000
          minLength: 0
          type: string
        name:
          maxLength: 2000
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          maxLength: 20
          minLength: 0
          type: string
        parentCode:
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        color:
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          maxLength: 2000
          minLength: 0
          type: string
        imageURL:
          maxLength: 2000
          minLength: 0
          type: string
        active:
          type: boolean
      type: object
    iDTypes:
      items:
        $ref: '#/components/schemas/idType'
      maxItems: 4000
      type: array
    idType:
      properties:
        value:
          description: "Used for Character Strings, length 0 to 20."
          maxLength: 20
          minLength: 0
          type: string
        source:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    parametersType:
      description: Collection of generic Name-Value-Pair parameters.
      items:
        $ref: '#/components/schemas/parameterType'
      maxItems: 4000
      type: array
    parameterType:
      description: Name value pair type that will hold generic parameter information.
        Only use this type when the parameters being passed are too dynamic to be
        defined.
      properties:
        parameterName:
          description: Name of the parameter.
          type: string
        parameterValue:
          description: Value of the parameter.
          type: string
      type: object
    fetchIntegrationMessageAttachments:
      properties:
        message:
          $ref: '#/components/schemas/integrationMessageAttachmentsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    integrationMessageAttachmentsType:
      description: This type holds additional details related to inbound messages
        like XML and External message
      properties:
        xMLMsg:
          description: XML message details
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        extMsg:
          description: Orignal message from external systems(From the one's that don't
            create XML)
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    profileMatchRulesToBeCreated:
      properties:
        exchangeProfileMatchRules:
          description: Type that holds collection of exchange profile match rules.
          items:
            $ref: '#/components/schemas/exchangeProfileMatchRuleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileMatchRulesToBeChanged:
      properties:
        exchangeProfileMatchRules:
          description: Type that holds collection of exchange profile match rules.
          items:
            $ref: '#/components/schemas/exchangeProfileMatchRuleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedProfileMatchRules:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    communicationMethods:
      properties:
        communicationDetails:
          description: ""
          items:
            $ref: '#/components/schemas/communicationMethodType'
          maxItems: 4000
          type: array
        offset:
          description: Indicates the index of the next applicable set(page).
          type: integer
        limit:
          description: Indicates number of records the API can return as per the API
            request limit sent. A maximum of 200 records can be only returned at a
            time.
          type: integer
        count:
          description: Indicates number of records the API has returned actually as
            per the API request criteria.
          type: integer
        hasMore:
          description: Indicates whether there are more records available to be returned
            as per the API request criteria or not.
          type: boolean
        totalResults:
          description: Indicates total number of records available that can be returned
            as per the API request criteria.
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postAutomaticTransmissionSchedules_request:
      allOf:
      - $ref: '#/components/schemas/automaticTransmissionSchedulesToBeCreated'
    putCommunicationMethods_request:
      allOf:
      - $ref: '#/components/schemas/communicationMethodsToBeChanged'
    putConversionCodesStatus_request:
      allOf:
      - $ref: '#/components/schemas/conversionCodesStatusToBeChanged'
    postExternalInterfaceSetups_request:
      allOf:
      - $ref: '#/components/schemas/externalInterfaceSetupsToBeCreated'
    putAutomaticTransmissionSchedules_request:
      allOf:
      - $ref: '#/components/schemas/automaticTransmissionSchedulesToBeChanged'
    putConversionCodeMappings_request:
      allOf:
      - $ref: '#/components/schemas/conversionCodeMappingsToBeChanged'
    postConversionCodeMappings_request:
      allOf:
      - $ref: '#/components/schemas/conversionCodeMappingsToBeCreated'
    putExternalInterfaceSetups_request:
      allOf:
      - $ref: '#/components/schemas/externalInterfaceSetupsToBeChanged'
    putInterfaceControls_request:
      allOf:
      - $ref: '#/components/schemas/interfaceControlsToBeChanged'
    putProfileMatchRules_request:
      allOf:
      - $ref: '#/components/schemas/profileMatchRulesToBeChanged'
    postProfileMatchRules_request:
      allOf:
      - $ref: '#/components/schemas/profileMatchRulesToBeCreated'
    messageStatistics_reports:
      description: Interface Setup Details.
      properties:
        interfaceDetails:
          $ref: '#/components/schemas/interfaceSetupIDType'
        statReports:
          description: Exchange Interface Report Type.
          items:
            $ref: '#/components/schemas/exchangeStatReportType'
          maxItems: 4000
          type: array
      type: object
x-original-swagger-version: "2.0"
