/*
OPERA Cloud Xchange Interface OXI API

APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>

API version: 23.0.0.0
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExchangeProfileMatchRuleType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExchangeProfileMatchRuleType{}

// ExchangeProfileMatchRuleType Type that represents a rule to define point criteria and threshold.
type ExchangeProfileMatchRuleType struct {
	// Threshold level of Match Point Criteria.
	Threshold *float32 `json:"threshold,omitempty"`
	// Type that represents Criteria such as match attributes, points and Active Flag to match profiles.
	PointCriteria []CriterionType `json:"pointCriteria,omitempty"`
	// Interface for which the rules are configured.
	InterfaceId *string `json:"interfaceId,omitempty"`
	// Hotel for which the rules are configured.
	HotelId *string `json:"hotelId,omitempty"`
	ProfileType *ExchangeProfileTypeType `json:"profileType,omitempty"`
	// The activation flag for the rule by itself.
	Active *bool `json:"active,omitempty"`
}

// NewExchangeProfileMatchRuleType instantiates a new ExchangeProfileMatchRuleType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangeProfileMatchRuleType() *ExchangeProfileMatchRuleType {
	this := ExchangeProfileMatchRuleType{}
	return &this
}

// NewExchangeProfileMatchRuleTypeWithDefaults instantiates a new ExchangeProfileMatchRuleType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangeProfileMatchRuleTypeWithDefaults() *ExchangeProfileMatchRuleType {
	this := ExchangeProfileMatchRuleType{}
	return &this
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *ExchangeProfileMatchRuleType) GetThreshold() float32 {
	if o == nil || IsNil(o.Threshold) {
		var ret float32
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeProfileMatchRuleType) GetThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *ExchangeProfileMatchRuleType) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given float32 and assigns it to the Threshold field.
func (o *ExchangeProfileMatchRuleType) SetThreshold(v float32) {
	o.Threshold = &v
}

// GetPointCriteria returns the PointCriteria field value if set, zero value otherwise.
func (o *ExchangeProfileMatchRuleType) GetPointCriteria() []CriterionType {
	if o == nil || IsNil(o.PointCriteria) {
		var ret []CriterionType
		return ret
	}
	return o.PointCriteria
}

// GetPointCriteriaOk returns a tuple with the PointCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeProfileMatchRuleType) GetPointCriteriaOk() ([]CriterionType, bool) {
	if o == nil || IsNil(o.PointCriteria) {
		return nil, false
	}
	return o.PointCriteria, true
}

// HasPointCriteria returns a boolean if a field has been set.
func (o *ExchangeProfileMatchRuleType) HasPointCriteria() bool {
	if o != nil && !IsNil(o.PointCriteria) {
		return true
	}

	return false
}

// SetPointCriteria gets a reference to the given []CriterionType and assigns it to the PointCriteria field.
func (o *ExchangeProfileMatchRuleType) SetPointCriteria(v []CriterionType) {
	o.PointCriteria = v
}

// GetInterfaceId returns the InterfaceId field value if set, zero value otherwise.
func (o *ExchangeProfileMatchRuleType) GetInterfaceId() string {
	if o == nil || IsNil(o.InterfaceId) {
		var ret string
		return ret
	}
	return *o.InterfaceId
}

// GetInterfaceIdOk returns a tuple with the InterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeProfileMatchRuleType) GetInterfaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceId) {
		return nil, false
	}
	return o.InterfaceId, true
}

// HasInterfaceId returns a boolean if a field has been set.
func (o *ExchangeProfileMatchRuleType) HasInterfaceId() bool {
	if o != nil && !IsNil(o.InterfaceId) {
		return true
	}

	return false
}

// SetInterfaceId gets a reference to the given string and assigns it to the InterfaceId field.
func (o *ExchangeProfileMatchRuleType) SetInterfaceId(v string) {
	o.InterfaceId = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ExchangeProfileMatchRuleType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeProfileMatchRuleType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ExchangeProfileMatchRuleType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ExchangeProfileMatchRuleType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetProfileType returns the ProfileType field value if set, zero value otherwise.
func (o *ExchangeProfileMatchRuleType) GetProfileType() ExchangeProfileTypeType {
	if o == nil || IsNil(o.ProfileType) {
		var ret ExchangeProfileTypeType
		return ret
	}
	return *o.ProfileType
}

// GetProfileTypeOk returns a tuple with the ProfileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeProfileMatchRuleType) GetProfileTypeOk() (*ExchangeProfileTypeType, bool) {
	if o == nil || IsNil(o.ProfileType) {
		return nil, false
	}
	return o.ProfileType, true
}

// HasProfileType returns a boolean if a field has been set.
func (o *ExchangeProfileMatchRuleType) HasProfileType() bool {
	if o != nil && !IsNil(o.ProfileType) {
		return true
	}

	return false
}

// SetProfileType gets a reference to the given ExchangeProfileTypeType and assigns it to the ProfileType field.
func (o *ExchangeProfileMatchRuleType) SetProfileType(v ExchangeProfileTypeType) {
	o.ProfileType = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ExchangeProfileMatchRuleType) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeProfileMatchRuleType) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ExchangeProfileMatchRuleType) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ExchangeProfileMatchRuleType) SetActive(v bool) {
	o.Active = &v
}

func (o ExchangeProfileMatchRuleType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExchangeProfileMatchRuleType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	if !IsNil(o.PointCriteria) {
		toSerialize["pointCriteria"] = o.PointCriteria
	}
	if !IsNil(o.InterfaceId) {
		toSerialize["interfaceId"] = o.InterfaceId
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ProfileType) {
		toSerialize["profileType"] = o.ProfileType
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	return toSerialize, nil
}

type NullableExchangeProfileMatchRuleType struct {
	value *ExchangeProfileMatchRuleType
	isSet bool
}

func (v NullableExchangeProfileMatchRuleType) Get() *ExchangeProfileMatchRuleType {
	return v.value
}

func (v *NullableExchangeProfileMatchRuleType) Set(val *ExchangeProfileMatchRuleType) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangeProfileMatchRuleType) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangeProfileMatchRuleType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangeProfileMatchRuleType(val *ExchangeProfileMatchRuleType) *NullableExchangeProfileMatchRuleType {
	return &NullableExchangeProfileMatchRuleType{value: val, isSet: true}
}

func (v NullableExchangeProfileMatchRuleType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangeProfileMatchRuleType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


