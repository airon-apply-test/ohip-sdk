/*
OPERA Cloud Xchange Interface OXI API

APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>

API version: 23.0.0.0
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MessageStatisticsReports type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageStatisticsReports{}

// MessageStatisticsReports Interface Setup Details.
type MessageStatisticsReports struct {
	InterfaceDetails *InterfaceSetupIDType `json:"interfaceDetails,omitempty"`
	// Exchange Interface Report Type.
	StatReports []ExchangeStatReportType `json:"statReports,omitempty"`
}

// NewMessageStatisticsReports instantiates a new MessageStatisticsReports object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageStatisticsReports() *MessageStatisticsReports {
	this := MessageStatisticsReports{}
	return &this
}

// NewMessageStatisticsReportsWithDefaults instantiates a new MessageStatisticsReports object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageStatisticsReportsWithDefaults() *MessageStatisticsReports {
	this := MessageStatisticsReports{}
	return &this
}

// GetInterfaceDetails returns the InterfaceDetails field value if set, zero value otherwise.
func (o *MessageStatisticsReports) GetInterfaceDetails() InterfaceSetupIDType {
	if o == nil || IsNil(o.InterfaceDetails) {
		var ret InterfaceSetupIDType
		return ret
	}
	return *o.InterfaceDetails
}

// GetInterfaceDetailsOk returns a tuple with the InterfaceDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageStatisticsReports) GetInterfaceDetailsOk() (*InterfaceSetupIDType, bool) {
	if o == nil || IsNil(o.InterfaceDetails) {
		return nil, false
	}
	return o.InterfaceDetails, true
}

// HasInterfaceDetails returns a boolean if a field has been set.
func (o *MessageStatisticsReports) HasInterfaceDetails() bool {
	if o != nil && !IsNil(o.InterfaceDetails) {
		return true
	}

	return false
}

// SetInterfaceDetails gets a reference to the given InterfaceSetupIDType and assigns it to the InterfaceDetails field.
func (o *MessageStatisticsReports) SetInterfaceDetails(v InterfaceSetupIDType) {
	o.InterfaceDetails = &v
}

// GetStatReports returns the StatReports field value if set, zero value otherwise.
func (o *MessageStatisticsReports) GetStatReports() []ExchangeStatReportType {
	if o == nil || IsNil(o.StatReports) {
		var ret []ExchangeStatReportType
		return ret
	}
	return o.StatReports
}

// GetStatReportsOk returns a tuple with the StatReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageStatisticsReports) GetStatReportsOk() ([]ExchangeStatReportType, bool) {
	if o == nil || IsNil(o.StatReports) {
		return nil, false
	}
	return o.StatReports, true
}

// HasStatReports returns a boolean if a field has been set.
func (o *MessageStatisticsReports) HasStatReports() bool {
	if o != nil && !IsNil(o.StatReports) {
		return true
	}

	return false
}

// SetStatReports gets a reference to the given []ExchangeStatReportType and assigns it to the StatReports field.
func (o *MessageStatisticsReports) SetStatReports(v []ExchangeStatReportType) {
	o.StatReports = v
}

func (o MessageStatisticsReports) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageStatisticsReports) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InterfaceDetails) {
		toSerialize["interfaceDetails"] = o.InterfaceDetails
	}
	if !IsNil(o.StatReports) {
		toSerialize["statReports"] = o.StatReports
	}
	return toSerialize, nil
}

type NullableMessageStatisticsReports struct {
	value *MessageStatisticsReports
	isSet bool
}

func (v NullableMessageStatisticsReports) Get() *MessageStatisticsReports {
	return v.value
}

func (v *NullableMessageStatisticsReports) Set(val *MessageStatisticsReports) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageStatisticsReports) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageStatisticsReports) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageStatisticsReports(val *MessageStatisticsReports) *NullableMessageStatisticsReports {
	return &NullableMessageStatisticsReports{value: val, isSet: true}
}

func (v NullableMessageStatisticsReports) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageStatisticsReports) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


