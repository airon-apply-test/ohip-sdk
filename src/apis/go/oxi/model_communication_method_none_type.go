/*
OPERA Cloud Xchange Interface OXI API

APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>

API version: 23.0.0.0
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CommunicationMethodNoneType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommunicationMethodNoneType{}

// CommunicationMethodNoneType Type represents details of NONE Communication Type
type CommunicationMethodNoneType struct {
	// Attribute represents the Idle Time(in Minutes)
	SleepTime *float32 `json:"sleepTime,omitempty"`
}

// NewCommunicationMethodNoneType instantiates a new CommunicationMethodNoneType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommunicationMethodNoneType() *CommunicationMethodNoneType {
	this := CommunicationMethodNoneType{}
	return &this
}

// NewCommunicationMethodNoneTypeWithDefaults instantiates a new CommunicationMethodNoneType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommunicationMethodNoneTypeWithDefaults() *CommunicationMethodNoneType {
	this := CommunicationMethodNoneType{}
	return &this
}

// GetSleepTime returns the SleepTime field value if set, zero value otherwise.
func (o *CommunicationMethodNoneType) GetSleepTime() float32 {
	if o == nil || IsNil(o.SleepTime) {
		var ret float32
		return ret
	}
	return *o.SleepTime
}

// GetSleepTimeOk returns a tuple with the SleepTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationMethodNoneType) GetSleepTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.SleepTime) {
		return nil, false
	}
	return o.SleepTime, true
}

// HasSleepTime returns a boolean if a field has been set.
func (o *CommunicationMethodNoneType) HasSleepTime() bool {
	if o != nil && !IsNil(o.SleepTime) {
		return true
	}

	return false
}

// SetSleepTime gets a reference to the given float32 and assigns it to the SleepTime field.
func (o *CommunicationMethodNoneType) SetSleepTime(v float32) {
	o.SleepTime = &v
}

func (o CommunicationMethodNoneType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommunicationMethodNoneType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SleepTime) {
		toSerialize["sleepTime"] = o.SleepTime
	}
	return toSerialize, nil
}

type NullableCommunicationMethodNoneType struct {
	value *CommunicationMethodNoneType
	isSet bool
}

func (v NullableCommunicationMethodNoneType) Get() *CommunicationMethodNoneType {
	return v.value
}

func (v *NullableCommunicationMethodNoneType) Set(val *CommunicationMethodNoneType) {
	v.value = val
	v.isSet = true
}

func (v NullableCommunicationMethodNoneType) IsSet() bool {
	return v.isSet
}

func (v *NullableCommunicationMethodNoneType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommunicationMethodNoneType(val *CommunicationMethodNoneType) *NullableCommunicationMethodNoneType {
	return &NullableCommunicationMethodNoneType{value: val, isSet: true}
}

func (v NullableCommunicationMethodNoneType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommunicationMethodNoneType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


