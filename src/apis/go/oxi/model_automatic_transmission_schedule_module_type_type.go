/*
OPERA Cloud Xchange Interface OXI API

APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>

API version: 23.0.0.0
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oxi

import (
	"encoding/json"
	"fmt"
)

// AutomaticTransmissionScheduleModuleTypeType Data modules that are currently supported
type AutomaticTransmissionScheduleModuleTypeType string

// List of automaticTransmissionScheduleModuleTypeType
const (
	AUTOMATICTRANSMISSIONSCHEDULEMODULETYPETYPE_AR_EXPORT AutomaticTransmissionScheduleModuleTypeType = "ARExport"
	AUTOMATICTRANSMISSIONSCHEDULEMODULETYPETYPE_BLOCK AutomaticTransmissionScheduleModuleTypeType = "Block"
	AUTOMATICTRANSMISSIONSCHEDULEMODULETYPETYPE_INVENTORY AutomaticTransmissionScheduleModuleTypeType = "Inventory"
	AUTOMATICTRANSMISSIONSCHEDULEMODULETYPETYPE_PROFILE_REQUEST AutomaticTransmissionScheduleModuleTypeType = "ProfileRequest"
	AUTOMATICTRANSMISSIONSCHEDULEMODULETYPETYPE_PROFILE_DAILY_STATS AutomaticTransmissionScheduleModuleTypeType = "ProfileDailyStats"
)

// All allowed values of AutomaticTransmissionScheduleModuleTypeType enum
var AllowedAutomaticTransmissionScheduleModuleTypeTypeEnumValues = []AutomaticTransmissionScheduleModuleTypeType{
	"ARExport",
	"Block",
	"Inventory",
	"ProfileRequest",
	"ProfileDailyStats",
}

func (v *AutomaticTransmissionScheduleModuleTypeType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AutomaticTransmissionScheduleModuleTypeType(value)
	for _, existing := range AllowedAutomaticTransmissionScheduleModuleTypeTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AutomaticTransmissionScheduleModuleTypeType", value)
}

// NewAutomaticTransmissionScheduleModuleTypeTypeFromValue returns a pointer to a valid AutomaticTransmissionScheduleModuleTypeType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAutomaticTransmissionScheduleModuleTypeTypeFromValue(v string) (*AutomaticTransmissionScheduleModuleTypeType, error) {
	ev := AutomaticTransmissionScheduleModuleTypeType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AutomaticTransmissionScheduleModuleTypeType: valid values are %v", v, AllowedAutomaticTransmissionScheduleModuleTypeTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AutomaticTransmissionScheduleModuleTypeType) IsValid() bool {
	for _, existing := range AllowedAutomaticTransmissionScheduleModuleTypeTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to automaticTransmissionScheduleModuleTypeType value
func (v AutomaticTransmissionScheduleModuleTypeType) Ptr() *AutomaticTransmissionScheduleModuleTypeType {
	return &v
}

type NullableAutomaticTransmissionScheduleModuleTypeType struct {
	value *AutomaticTransmissionScheduleModuleTypeType
	isSet bool
}

func (v NullableAutomaticTransmissionScheduleModuleTypeType) Get() *AutomaticTransmissionScheduleModuleTypeType {
	return v.value
}

func (v *NullableAutomaticTransmissionScheduleModuleTypeType) Set(val *AutomaticTransmissionScheduleModuleTypeType) {
	v.value = val
	v.isSet = true
}

func (v NullableAutomaticTransmissionScheduleModuleTypeType) IsSet() bool {
	return v.isSet
}

func (v *NullableAutomaticTransmissionScheduleModuleTypeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutomaticTransmissionScheduleModuleTypeType(val *AutomaticTransmissionScheduleModuleTypeType) *NullableAutomaticTransmissionScheduleModuleTypeType {
	return &NullableAutomaticTransmissionScheduleModuleTypeType{value: val, isSet: true}
}

func (v NullableAutomaticTransmissionScheduleModuleTypeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutomaticTransmissionScheduleModuleTypeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

