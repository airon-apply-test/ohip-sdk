"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 22.3.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthorizationHistoryTypeToJSON = exports.AuthorizationHistoryTypeFromJSONTyped = exports.AuthorizationHistoryTypeFromJSON = exports.instanceOfAuthorizationHistoryType = exports.AuthorizationHistoryTypeTypeEnum = void 0;
const runtime_1 = require("../runtime");
const AuthorizationHistoryTypeCardPaymentInformation_1 = require("./AuthorizationHistoryTypeCardPaymentInformation");
const AuthorizationHistoryTypeStatus_1 = require("./AuthorizationHistoryTypeStatus");
const CardAuthorizationTransactionType_1 = require("./CardAuthorizationTransactionType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
/**
 * @export
 */
exports.AuthorizationHistoryTypeTypeEnum = {
    Settlement: 'Settlement',
    Authorization: 'Authorization',
    Payment: 'Payment'
};
/**
 * Check if a given object implements the AuthorizationHistoryType interface.
 */
function instanceOfAuthorizationHistoryType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAuthorizationHistoryType = instanceOfAuthorizationHistoryType;
function AuthorizationHistoryTypeFromJSON(json) {
    return AuthorizationHistoryTypeFromJSONTyped(json, false);
}
exports.AuthorizationHistoryTypeFromJSON = AuthorizationHistoryTypeFromJSON;
function AuthorizationHistoryTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'businessDate': !(0, runtime_1.exists)(json, 'businessDate') ? undefined : (new Date(json['businessDate'])),
        'transactionType': !(0, runtime_1.exists)(json, 'transactionType') ? undefined : (0, CardAuthorizationTransactionType_1.CardAuthorizationTransactionTypeFromJSON)(json['transactionType']),
        'approvalAmount': !(0, runtime_1.exists)(json, 'approvalAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['approvalAmount']),
        'cardPaymentInformation': !(0, runtime_1.exists)(json, 'cardPaymentInformation') ? undefined : (0, AuthorizationHistoryTypeCardPaymentInformation_1.AuthorizationHistoryTypeCardPaymentInformationFromJSON)(json['cardPaymentInformation']),
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : (0, AuthorizationHistoryTypeStatus_1.AuthorizationHistoryTypeStatusFromJSON)(json['status']),
        'createDateTime': !(0, runtime_1.exists)(json, 'createDateTime') ? undefined : (new Date(json['createDateTime'])),
        'creatorId': !(0, runtime_1.exists)(json, 'creatorId') ? undefined : json['creatorId'],
        'lastModifyDateTime': !(0, runtime_1.exists)(json, 'lastModifyDateTime') ? undefined : (new Date(json['lastModifyDateTime'])),
        'lastModifierId': !(0, runtime_1.exists)(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'purgeDate': !(0, runtime_1.exists)(json, 'purgeDate') ? undefined : (new Date(json['purgeDate'])),
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
    };
}
exports.AuthorizationHistoryTypeFromJSONTyped = AuthorizationHistoryTypeFromJSONTyped;
function AuthorizationHistoryTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'businessDate': value.businessDate === undefined ? undefined : (value.businessDate.toISOString().substr(0, 10)),
        'transactionType': (0, CardAuthorizationTransactionType_1.CardAuthorizationTransactionTypeToJSON)(value.transactionType),
        'approvalAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.approvalAmount),
        'cardPaymentInformation': (0, AuthorizationHistoryTypeCardPaymentInformation_1.AuthorizationHistoryTypeCardPaymentInformationToJSON)(value.cardPaymentInformation),
        'status': (0, AuthorizationHistoryTypeStatus_1.AuthorizationHistoryTypeStatusToJSON)(value.status),
        'createDateTime': value.createDateTime === undefined ? undefined : (value.createDateTime.toISOString()),
        'creatorId': value.creatorId,
        'lastModifyDateTime': value.lastModifyDateTime === undefined ? undefined : (value.lastModifyDateTime.toISOString()),
        'lastModifierId': value.lastModifierId,
        'purgeDate': value.purgeDate === undefined ? undefined : (value.purgeDate.toISOString().substr(0, 10)),
        'type': value.type,
    };
}
exports.AuthorizationHistoryTypeToJSON = AuthorizationHistoryTypeToJSON;
