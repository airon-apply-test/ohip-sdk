/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 21.5.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 21.5.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CateringMenuItemsInfo, CateringMenusInfo } from '../models';
export interface GetCateringMenuItemsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    name?: string;
    codes?: Array<string>;
    quickInsertCode?: string;
    listTypeCodes?: Array<string>;
    inactive?: boolean;
    eventTypesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCateringMenusRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    menuId?: string;
    iDExtension?: number;
    idContext?: string;
    menuIDType?: string;
    name?: string;
    classNameListCodes?: Array<string>;
    eventTypesCodes?: Array<string>;
    menuTypes?: Set<GetCateringMenusMenuTypesEnum>;
    dietaryListCodes?: Array<string>;
    inactive?: boolean;
    multiChoice?: boolean;
    webBookable?: boolean;
    end?: Date;
    start?: Date;
    fetchInstructions?: Set<GetCateringMenusFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class ResourceConfigApi extends runtime.BaseAPI {
    /**
     * Get Menu items for a property. <p><strong>OperationId:</strong>getCateringMenuItems</p>
     * Get Menu items
     */
    getCateringMenuItemsRaw(requestParameters: GetCateringMenuItemsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CateringMenuItemsInfo>>;
    /**
     * Get Menu items for a property. <p><strong>OperationId:</strong>getCateringMenuItems</p>
     * Get Menu items
     */
    getCateringMenuItems(requestParameters: GetCateringMenuItemsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CateringMenuItemsInfo>;
    /**
     * Retrieve a list of menus for a property. <p><strong>OperationId:</strong>getCateringMenus</p>
     * Get menus
     */
    getCateringMenusRaw(requestParameters: GetCateringMenusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CateringMenusInfo>>;
    /**
     * Retrieve a list of menus for a property. <p><strong>OperationId:</strong>getCateringMenus</p>
     * Get menus
     */
    getCateringMenus(requestParameters: GetCateringMenusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CateringMenusInfo>;
}
/**
 * @export
 */
export declare const GetCateringMenusMenuTypesEnum: {
    readonly Food: "Food";
    readonly Beverage: "Beverage";
};
export type GetCateringMenusMenuTypesEnum = typeof GetCateringMenusMenuTypesEnum[keyof typeof GetCateringMenusMenuTypesEnum];
/**
 * @export
 */
export declare const GetCateringMenusFetchInstructionsEnum: {
    readonly Revenue: "Revenue";
    readonly MenuDetails: "MenuDetails";
    readonly MenuNotes: "MenuNotes";
};
export type GetCateringMenusFetchInstructionsEnum = typeof GetCateringMenusFetchInstructionsEnum[keyof typeof GetCateringMenusFetchInstructionsEnum];
