/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 21.5.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 21.5.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { HotelAvailability, ReservationGuaranteesPolicies, RestrictionsByDateRange } from '../models';
export interface GetHotelAvailabilityRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cro?: Array<string>;
    includeClosedRates?: Array<boolean>;
    includeDefaultRatePlanSet?: Array<boolean>;
    initialRatePlanSet?: Array<boolean>;
    limit?: Array<number>;
    pagePointerKey?: Array<string>;
    ratePlanSet?: Array<string>;
    redeemAwards?: Array<boolean>;
    roomStayStartDate?: Date;
    roomStayEndDate?: Date;
    roomStayQuantity?: number;
    adults?: number;
    children?: number;
    childAge?: Array<number>;
    bucket1Count?: number;
    bucket2Count?: number;
    bucket3Count?: number;
    bucket4Count?: number;
    bucket5Count?: number;
    fullStayTimeSpanStartDate?: Date;
    fullStayTimeSpanEndDate?: Date;
    prevailingRate?: boolean;
    rateCategory?: string;
    rateClass?: string;
    rateGroup?: string;
    ratePlanCode?: Array<string>;
    promotionCode?: Array<string>;
    roomType?: Array<string>;
    feature?: Array<string>;
    reservationGuestId?: string;
    reservationGuestIdType?: string;
    reservationProfileType?: Set<GetHotelAvailabilityReservationProfileTypeEnum>;
    attachedProfileId?: Array<string>;
    hotelReservationId?: string;
    hotelReservationIdType?: string;
    ratePlanInfo?: boolean;
    returnOnlyAvailableRateCodes?: boolean;
    resGuaranteeInfo?: boolean;
    roomTypeInfo?: boolean;
    membershipIdNumber?: Array<number>;
    membershipLevel?: Array<string>;
    membershipType?: Array<string>;
    pointsAvailable?: Array<number>;
    smokingPreference?: Array<string>;
    hotelPackage?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetReservationGuaranteesRequest {
    hotelId?: string;
    arrivalDate?: Date;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ratePlanCode?: string;
    blockId?: string;
    reservationGuestId?: string;
    companyId?: string;
    travelAgentId?: string;
    sourceId?: string;
    groupId?: string;
    guaranteeCode?: string;
    calculateEstimateAmount?: boolean;
    startDate?: Date;
    endDate?: Date;
    numberOfRooms?: number;
    numberOfAdults?: number;
    numberOfChildren?: number;
    roomType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRestrictionsByDateRangeRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    chainName?: string;
    end?: Date;
    fetchSizeByDay?: number;
    limit?: number;
    restrictionInfo?: GetRestrictionsByDateRangeRestrictionInfoEnum;
    restrictionSearchCriteriaStartDate?: Date;
    bookingChannelCode?: string;
    ratePlanCategory?: string;
    ratePlanCode?: string;
    roomClass?: string;
    roomType?: string;
    filterCodeCategory?: GetRestrictionsByDateRangeFilterCodeCategoryEnum;
    filterCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class AvailabilityApi extends runtime.BaseAPI {
    /**
     * Use this API to get hotel availability for multiple hotels, given dates, Rate Plans, Rate Category, Rate Group, Membership Rates, and number of people. By default five records are returned unless a higher number is specified in the limit query parameter.<p><strong>OperationId:</strong>getHotelAvailability</p>
     * Get hotel availability
     */
    getHotelAvailabilityRaw(requestParameters: GetHotelAvailabilityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelAvailability>>;
    /**
     * Use this API to get hotel availability for multiple hotels, given dates, Rate Plans, Rate Category, Rate Group, Membership Rates, and number of people. By default five records are returned unless a higher number is specified in the limit query parameter.<p><strong>OperationId:</strong>getHotelAvailability</p>
     * Get hotel availability
     */
    getHotelAvailability(requestParameters: GetHotelAvailabilityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelAvailability>;
    /**
     * Use this API to get the required guarantee types in order to complete a booking. The criteria can include the rate plan code, arrival date, guarantee code and the profile information.<p><strong>OperationId:</strong>getReservationGuarantees</p>
     * Get reservation guarantees
     */
    getReservationGuaranteesRaw(requestParameters: GetReservationGuaranteesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReservationGuaranteesPolicies>>;
    /**
     * Use this API to get the required guarantee types in order to complete a booking. The criteria can include the rate plan code, arrival date, guarantee code and the profile information.<p><strong>OperationId:</strong>getReservationGuarantees</p>
     * Get reservation guarantees
     */
    getReservationGuarantees(requestParameters: GetReservationGuaranteesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReservationGuaranteesPolicies>;
    /**
     * Use this API to get the Restrictions for a hotel in given date range. The search criteria can include filter codes or restriction control types, date range and the hotel information.<p><strong>OperationId:</strong>getRestrictionsByDateRange</p>
     * Get hotel restrictions
     */
    getRestrictionsByDateRangeRaw(requestParameters: GetRestrictionsByDateRangeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RestrictionsByDateRange>>;
    /**
     * Use this API to get the Restrictions for a hotel in given date range. The search criteria can include filter codes or restriction control types, date range and the hotel information.<p><strong>OperationId:</strong>getRestrictionsByDateRange</p>
     * Get hotel restrictions
     */
    getRestrictionsByDateRange(requestParameters: GetRestrictionsByDateRangeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RestrictionsByDateRange>;
}
/**
 * @export
 */
export declare const GetHotelAvailabilityReservationProfileTypeEnum: {
    readonly Guest: "Guest";
    readonly Company: "Company";
    readonly Group: "Group";
    readonly TravelAgent: "TravelAgent";
    readonly Source: "Source";
    readonly ReservationContact: "ReservationContact";
    readonly BillingContact: "BillingContact";
    readonly Addressee: "Addressee";
};
export type GetHotelAvailabilityReservationProfileTypeEnum = typeof GetHotelAvailabilityReservationProfileTypeEnum[keyof typeof GetHotelAvailabilityReservationProfileTypeEnum];
/**
 * @export
 */
export declare const GetRestrictionsByDateRangeRestrictionInfoEnum: {
    readonly Detail: "Detail";
    readonly Overview: "Overview";
    readonly Year: "Year";
};
export type GetRestrictionsByDateRangeRestrictionInfoEnum = typeof GetRestrictionsByDateRangeRestrictionInfoEnum[keyof typeof GetRestrictionsByDateRangeRestrictionInfoEnum];
/**
 * @export
 */
export declare const GetRestrictionsByDateRangeFilterCodeCategoryEnum: {
    readonly BookingChannelCode: "BookingChannelCode";
    readonly RoomClass: "RoomClass";
    readonly RoomType: "RoomType";
    readonly RatePlanCategory: "RatePlanCategory";
    readonly RatePlanCode: "RatePlanCode";
};
export type GetRestrictionsByDateRangeFilterCodeCategoryEnum = typeof GetRestrictionsByDateRangeFilterCodeCategoryEnum[keyof typeof GetRestrictionsByDateRangeFilterCodeCategoryEnum];
