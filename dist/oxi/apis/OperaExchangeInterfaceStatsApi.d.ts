/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { MessageStatistics, OXIMessageStatistics, Status } from '../models';
export interface DequeueOXIMessagesRequest {
    queueName?: DequeueOXIMessagesQueueNameEnum;
    hotelId?: string;
    interfaceId?: string;
    messageStatus?: DequeueOXIMessagesMessageStatusEnum;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    endDate?: Date;
    startDate?: Date;
    module?: string;
    actionType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetMessageStatisticsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    code?: Set<GetMessageStatisticsCodeEnum>;
    endDate?: Array<Date>;
    startDate?: Array<Date>;
    statCode?: Set<GetMessageStatisticsStatCodeEnum>;
    interfaceId?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetOXIMessageStatisticsRequest {
    queueName?: GetOXIMessageStatisticsQueueNameEnum;
    hotelId?: string;
    messageStatus?: GetOXIMessageStatisticsMessageStatusEnum;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    interfaceId?: string;
    enqueueEndDate?: Date;
    enqueueStartDate?: Date;
    groupByModuleAndActionType?: boolean;
    limit?: number;
    offset?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class OperaExchangeInterfaceStatsApi extends runtime.BaseAPI {
    /**
     * API to purge messages from inbound and outbound queues. <p><strong>OperationId:</strong>dequeueOXIMessages</p>
     * Purge the messages from OXI inbound and outbound queues.
     */
    dequeueOXIMessagesRaw(requestParameters: DequeueOXIMessagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * API to purge messages from inbound and outbound queues. <p><strong>OperationId:</strong>dequeueOXIMessages</p>
     * Purge the messages from OXI inbound and outbound queues.
     */
    dequeueOXIMessages(requestParameters: DequeueOXIMessagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * API to Fetch OXI Dashboard Tile Statistics (Upload and Download message counts by Success, Fail and Warning Status codes) by Hotel Id and Interface Id. <p><strong>OperationId:</strong>getMessageStatistics</p>
     * Retrieves the statistics of Messages for Opera Exchange Interface.
     */
    getMessageStatisticsRaw(requestParameters: GetMessageStatisticsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageStatistics>>;
    /**
     * API to Fetch OXI Dashboard Tile Statistics (Upload and Download message counts by Success, Fail and Warning Status codes) by Hotel Id and Interface Id. <p><strong>OperationId:</strong>getMessageStatistics</p>
     * Retrieves the statistics of Messages for Opera Exchange Interface.
     */
    getMessageStatistics(requestParameters: GetMessageStatisticsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageStatistics>;
    /**
     * API to retrieve message statistics for inbound , outbound and business event queues. <p><strong>OperationId:</strong>getOXIMessageStatistics</p>
     * Retrieves the statistics of Messages in inbound,outbound and BE queues.
     */
    getOXIMessageStatisticsRaw(requestParameters: GetOXIMessageStatisticsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OXIMessageStatistics>>;
    /**
     * API to retrieve message statistics for inbound , outbound and business event queues. <p><strong>OperationId:</strong>getOXIMessageStatistics</p>
     * Retrieves the statistics of Messages in inbound,outbound and BE queues.
     */
    getOXIMessageStatistics(requestParameters: GetOXIMessageStatisticsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OXIMessageStatistics>;
}
/**
 * @export
 */
export declare const DequeueOXIMessagesQueueNameEnum: {
    readonly Inbound: "Inbound";
    readonly Outbound: "Outbound";
};
export type DequeueOXIMessagesQueueNameEnum = typeof DequeueOXIMessagesQueueNameEnum[keyof typeof DequeueOXIMessagesQueueNameEnum];
/**
 * @export
 */
export declare const DequeueOXIMessagesMessageStatusEnum: {
    readonly Processed: "Processed";
    readonly Failed: "Failed";
    readonly Ready: "Ready";
    readonly Expired: "Expired";
};
export type DequeueOXIMessagesMessageStatusEnum = typeof DequeueOXIMessagesMessageStatusEnum[keyof typeof DequeueOXIMessagesMessageStatusEnum];
/**
 * @export
 */
export declare const GetMessageStatisticsCodeEnum: {
    readonly UploadedMessages: "UploadedMessages";
    readonly DownloadedMessages: "DownloadedMessages";
};
export type GetMessageStatisticsCodeEnum = typeof GetMessageStatisticsCodeEnum[keyof typeof GetMessageStatisticsCodeEnum];
/**
 * @export
 */
export declare const GetMessageStatisticsStatCodeEnum: {
    readonly Success: "Success";
    readonly Failed: "Failed";
    readonly Warning: "Warning";
    readonly Total: "Total";
};
export type GetMessageStatisticsStatCodeEnum = typeof GetMessageStatisticsStatCodeEnum[keyof typeof GetMessageStatisticsStatCodeEnum];
/**
 * @export
 */
export declare const GetOXIMessageStatisticsQueueNameEnum: {
    readonly Inbound: "Inbound";
    readonly Outbound: "Outbound";
    readonly Be: "Be";
};
export type GetOXIMessageStatisticsQueueNameEnum = typeof GetOXIMessageStatisticsQueueNameEnum[keyof typeof GetOXIMessageStatisticsQueueNameEnum];
/**
 * @export
 */
export declare const GetOXIMessageStatisticsMessageStatusEnum: {
    readonly Processed: "Processed";
    readonly Failed: "Failed";
    readonly Ready: "Ready";
    readonly Expired: "Expired";
};
export type GetOXIMessageStatisticsMessageStatusEnum = typeof GetOXIMessageStatisticsMessageStatusEnum[keyof typeof GetOXIMessageStatisticsMessageStatusEnum];
