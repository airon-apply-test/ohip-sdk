"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExchangeStatTypeToJSON = exports.ExchangeStatTypeFromJSONTyped = exports.ExchangeStatTypeFromJSON = exports.instanceOfExchangeStatType = void 0;
const runtime_1 = require("../runtime");
const ExchangeStatCodeType_1 = require("./ExchangeStatCodeType");
const StatUnitCategoryType_1 = require("./StatUnitCategoryType");
/**
 * Check if a given object implements the ExchangeStatType interface.
 */
function instanceOfExchangeStatType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfExchangeStatType = instanceOfExchangeStatType;
function ExchangeStatTypeFromJSON(json) {
    return ExchangeStatTypeFromJSONTyped(json, false);
}
exports.ExchangeStatTypeFromJSON = ExchangeStatTypeFromJSON;
function ExchangeStatTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'unitType': !(0, runtime_1.exists)(json, 'unitType') ? undefined : json['unitType'],
        'unitValue': !(0, runtime_1.exists)(json, 'unitValue') ? undefined : json['unitValue'],
        'unitCategory': !(0, runtime_1.exists)(json, 'unitCategory') ? undefined : (0, StatUnitCategoryType_1.StatUnitCategoryTypeFromJSON)(json['unitCategory']),
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : (0, ExchangeStatCodeType_1.ExchangeStatCodeTypeFromJSON)(json['code']),
    };
}
exports.ExchangeStatTypeFromJSONTyped = ExchangeStatTypeFromJSONTyped;
function ExchangeStatTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'unitType': value.unitType,
        'unitValue': value.unitValue,
        'unitCategory': (0, StatUnitCategoryType_1.StatUnitCategoryTypeToJSON)(value.unitCategory),
        'code': (0, ExchangeStatCodeType_1.ExchangeStatCodeTypeToJSON)(value.code),
    };
}
exports.ExchangeStatTypeToJSON = ExchangeStatTypeToJSON;
