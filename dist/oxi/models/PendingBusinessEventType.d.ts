/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Business event queue status common details
 * @export
 * @interface PendingBusinessEventType
 */
export interface PendingBusinessEventType {
    /**
     * Module name where the change occurred
     * @type {string}
     * @memberof PendingBusinessEventType
     */
    module?: string;
    /**
     * Name of the external system that the message was created for
     * @type {string}
     * @memberof PendingBusinessEventType
     */
    externalSystem?: string;
    /**
     * Type of action that the outbound message is pertaining to
     * @type {string}
     * @memberof PendingBusinessEventType
     */
    actionType?: string;
    /**
     * Action Id number that is automatically assigned to the action when it happened
     * @type {string}
     * @memberof PendingBusinessEventType
     */
    actionId?: string;
    /**
     * Date when the business event change occurred
     * @type {Date}
     * @memberof PendingBusinessEventType
     */
    enquiryDate?: Date;
    /**
     * Hotel Code associated with business event
     * @type {string}
     * @memberof PendingBusinessEventType
     */
    hotelId?: string;
    /**
     * Date and time that the change happened
     * @type {Date}
     * @memberof PendingBusinessEventType
     */
    createdDate?: Date;
    /**
     * Alpha-numeric key to uniquely identify the data applicable to that particular action
     * @type {string}
     * @memberof PendingBusinessEventType
     */
    primaryKey?: string;
    /**
     * Name of the external system that the message was created for and needs to picked up by.
     * @type {string}
     * @memberof PendingBusinessEventType
     */
    consumer?: string;
}
/**
 * Check if a given object implements the PendingBusinessEventType interface.
 */
export declare function instanceOfPendingBusinessEventType(value: object): boolean;
export declare function PendingBusinessEventTypeFromJSON(json: any): PendingBusinessEventType;
export declare function PendingBusinessEventTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PendingBusinessEventType;
export declare function PendingBusinessEventTypeToJSON(value?: PendingBusinessEventType | null): any;
