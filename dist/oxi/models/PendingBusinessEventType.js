"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PendingBusinessEventTypeToJSON = exports.PendingBusinessEventTypeFromJSONTyped = exports.PendingBusinessEventTypeFromJSON = exports.instanceOfPendingBusinessEventType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the PendingBusinessEventType interface.
 */
function instanceOfPendingBusinessEventType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPendingBusinessEventType = instanceOfPendingBusinessEventType;
function PendingBusinessEventTypeFromJSON(json) {
    return PendingBusinessEventTypeFromJSONTyped(json, false);
}
exports.PendingBusinessEventTypeFromJSON = PendingBusinessEventTypeFromJSON;
function PendingBusinessEventTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'module': !(0, runtime_1.exists)(json, 'module') ? undefined : json['module'],
        'externalSystem': !(0, runtime_1.exists)(json, 'externalSystem') ? undefined : json['externalSystem'],
        'actionType': !(0, runtime_1.exists)(json, 'actionType') ? undefined : json['actionType'],
        'actionId': !(0, runtime_1.exists)(json, 'actionId') ? undefined : json['actionId'],
        'enquiryDate': !(0, runtime_1.exists)(json, 'enquiryDate') ? undefined : (new Date(json['enquiryDate'])),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'createdDate': !(0, runtime_1.exists)(json, 'createdDate') ? undefined : (new Date(json['createdDate'])),
        'primaryKey': !(0, runtime_1.exists)(json, 'primaryKey') ? undefined : json['primaryKey'],
        'consumer': !(0, runtime_1.exists)(json, 'consumer') ? undefined : json['consumer'],
    };
}
exports.PendingBusinessEventTypeFromJSONTyped = PendingBusinessEventTypeFromJSONTyped;
function PendingBusinessEventTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'module': value.module,
        'externalSystem': value.externalSystem,
        'actionType': value.actionType,
        'actionId': value.actionId,
        'enquiryDate': value.enquiryDate === undefined ? undefined : (value.enquiryDate.toISOString()),
        'hotelId': value.hotelId,
        'createdDate': value.createdDate === undefined ? undefined : (value.createdDate.toISOString()),
        'primaryKey': value.primaryKey,
        'consumer': value.consumer,
    };
}
exports.PendingBusinessEventTypeToJSON = PendingBusinessEventTypeToJSON;
