/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AutomaticTransmissionScheduleFrequencyTypeType } from './AutomaticTransmissionScheduleFrequencyTypeType';
import type { DaysOfWeekType } from './DaysOfWeekType';
/**
 * Automatic transmission schedule frequency details
 * @export
 * @interface AutomaticTransmissionScheduleFrequencyType
 */
export interface AutomaticTransmissionScheduleFrequencyType {
    /**
     *
     * @type {AutomaticTransmissionScheduleFrequencyTypeType}
     * @memberof AutomaticTransmissionScheduleFrequencyType
     */
    frequency?: AutomaticTransmissionScheduleFrequencyTypeType;
    /**
     * Hour of day that the transmission schedule has to run.
     * @type {number}
     * @memberof AutomaticTransmissionScheduleFrequencyType
     */
    hourToRun?: number;
    /**
     *
     * @type {DaysOfWeekType}
     * @memberof AutomaticTransmissionScheduleFrequencyType
     */
    weekDayToRun?: DaysOfWeekType;
    /**
     * Day of the month the transmission schedule is to run. Value should be between 1 and 31.
     * @type {number}
     * @memberof AutomaticTransmissionScheduleFrequencyType
     */
    dayToRun?: number;
    /**
     * Number representing the month of year that the transmission schedule is to run. For example, 1 = January, 2 = February, 12 = December, etc.
     * @type {number}
     * @memberof AutomaticTransmissionScheduleFrequencyType
     */
    monthToRun?: number;
    /**
     * If frequency type is set to intervals then this value will be used to determine the frequency. For example if value is 18 then transmission will be sent every 18 minutes
     * @type {number}
     * @memberof AutomaticTransmissionScheduleFrequencyType
     */
    interval?: number;
}
/**
 * Check if a given object implements the AutomaticTransmissionScheduleFrequencyType interface.
 */
export declare function instanceOfAutomaticTransmissionScheduleFrequencyType(value: object): boolean;
export declare function AutomaticTransmissionScheduleFrequencyTypeFromJSON(json: any): AutomaticTransmissionScheduleFrequencyType;
export declare function AutomaticTransmissionScheduleFrequencyTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AutomaticTransmissionScheduleFrequencyType;
export declare function AutomaticTransmissionScheduleFrequencyTypeToJSON(value?: AutomaticTransmissionScheduleFrequencyType | null): any;
