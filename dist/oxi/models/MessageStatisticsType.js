"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageStatisticsTypeToJSON = exports.MessageStatisticsTypeFromJSONTyped = exports.MessageStatisticsTypeFromJSON = exports.instanceOfMessageStatisticsType = void 0;
const runtime_1 = require("../runtime");
const OXIMessageStatusType_1 = require("./OXIMessageStatusType");
/**
 * Check if a given object implements the MessageStatisticsType interface.
 */
function instanceOfMessageStatisticsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMessageStatisticsType = instanceOfMessageStatisticsType;
function MessageStatisticsTypeFromJSON(json) {
    return MessageStatisticsTypeFromJSONTyped(json, false);
}
exports.MessageStatisticsTypeFromJSON = MessageStatisticsTypeFromJSON;
function MessageStatisticsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'interfaceId': !(0, runtime_1.exists)(json, 'interfaceId') ? undefined : json['interfaceId'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'module': !(0, runtime_1.exists)(json, 'module') ? undefined : json['module'],
        'actionType': !(0, runtime_1.exists)(json, 'actionType') ? undefined : json['actionType'],
        'messageStatus': !(0, runtime_1.exists)(json, 'messageStatus') ? undefined : (0, OXIMessageStatusType_1.OXIMessageStatusTypeFromJSON)(json['messageStatus']),
        'messageCount': !(0, runtime_1.exists)(json, 'messageCount') ? undefined : json['messageCount'],
        'lastProcessedDate': !(0, runtime_1.exists)(json, 'lastProcessedDate') ? undefined : (new Date(json['lastProcessedDate'])),
    };
}
exports.MessageStatisticsTypeFromJSONTyped = MessageStatisticsTypeFromJSONTyped;
function MessageStatisticsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'interfaceId': value.interfaceId,
        'hotelId': value.hotelId,
        'module': value.module,
        'actionType': value.actionType,
        'messageStatus': (0, OXIMessageStatusType_1.OXIMessageStatusTypeToJSON)(value.messageStatus),
        'messageCount': value.messageCount,
        'lastProcessedDate': value.lastProcessedDate === undefined ? undefined : (value.lastProcessedDate.toISOString()),
    };
}
exports.MessageStatisticsTypeToJSON = MessageStatisticsTypeToJSON;
