"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExchangeProfileMatchRuleTypeToJSON = exports.ExchangeProfileMatchRuleTypeFromJSONTyped = exports.ExchangeProfileMatchRuleTypeFromJSON = exports.instanceOfExchangeProfileMatchRuleType = void 0;
const runtime_1 = require("../runtime");
const CriterionType_1 = require("./CriterionType");
const ExchangeProfileTypeType_1 = require("./ExchangeProfileTypeType");
/**
 * Check if a given object implements the ExchangeProfileMatchRuleType interface.
 */
function instanceOfExchangeProfileMatchRuleType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfExchangeProfileMatchRuleType = instanceOfExchangeProfileMatchRuleType;
function ExchangeProfileMatchRuleTypeFromJSON(json) {
    return ExchangeProfileMatchRuleTypeFromJSONTyped(json, false);
}
exports.ExchangeProfileMatchRuleTypeFromJSON = ExchangeProfileMatchRuleTypeFromJSON;
function ExchangeProfileMatchRuleTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'threshold': !(0, runtime_1.exists)(json, 'threshold') ? undefined : json['threshold'],
        'pointCriteria': !(0, runtime_1.exists)(json, 'pointCriteria') ? undefined : (json['pointCriteria'].map(CriterionType_1.CriterionTypeFromJSON)),
        'interfaceId': !(0, runtime_1.exists)(json, 'interfaceId') ? undefined : json['interfaceId'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'profileType': !(0, runtime_1.exists)(json, 'profileType') ? undefined : (0, ExchangeProfileTypeType_1.ExchangeProfileTypeTypeFromJSON)(json['profileType']),
        'active': !(0, runtime_1.exists)(json, 'active') ? undefined : json['active'],
    };
}
exports.ExchangeProfileMatchRuleTypeFromJSONTyped = ExchangeProfileMatchRuleTypeFromJSONTyped;
function ExchangeProfileMatchRuleTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'threshold': value.threshold,
        'pointCriteria': value.pointCriteria === undefined ? undefined : (value.pointCriteria.map(CriterionType_1.CriterionTypeToJSON)),
        'interfaceId': value.interfaceId,
        'hotelId': value.hotelId,
        'profileType': (0, ExchangeProfileTypeType_1.ExchangeProfileTypeTypeToJSON)(value.profileType),
        'active': value.active,
    };
}
exports.ExchangeProfileMatchRuleTypeToJSON = ExchangeProfileMatchRuleTypeToJSON;
