"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntegrationOutboundMessageTypeToJSON = exports.IntegrationOutboundMessageTypeFromJSONTyped = exports.IntegrationOutboundMessageTypeFromJSON = exports.instanceOfIntegrationOutboundMessageType = void 0;
const runtime_1 = require("../runtime");
const PendingBusinessEventType_1 = require("./PendingBusinessEventType");
const UniqueIDType_1 = require("./UniqueIDType");
const WarningType_1 = require("./WarningType");
/**
 * Check if a given object implements the IntegrationOutboundMessageType interface.
 */
function instanceOfIntegrationOutboundMessageType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfIntegrationOutboundMessageType = instanceOfIntegrationOutboundMessageType;
function IntegrationOutboundMessageTypeFromJSON(json) {
    return IntegrationOutboundMessageTypeFromJSONTyped(json, false);
}
exports.IntegrationOutboundMessageTypeFromJSON = IntegrationOutboundMessageTypeFromJSON;
function IntegrationOutboundMessageTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'messageId': !(0, runtime_1.exists)(json, 'messageId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['messageId']),
        'enqueueTime': !(0, runtime_1.exists)(json, 'enqueueTime') ? undefined : (new Date(json['enqueueTime'])),
        'dequeueTime': !(0, runtime_1.exists)(json, 'dequeueTime') ? undefined : (new Date(json['dequeueTime'])),
        '_interface': !(0, runtime_1.exists)(json, 'interface') ? undefined : json['interface'],
        'messageType': !(0, runtime_1.exists)(json, 'messageType') ? undefined : json['messageType'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'messageStatus': !(0, runtime_1.exists)(json, 'messageStatus') ? undefined : json['messageStatus'],
        'reviewed': !(0, runtime_1.exists)(json, 'reviewed') ? undefined : json['reviewed'],
        'messageReference': !(0, runtime_1.exists)(json, 'messageReference') ? undefined : json['messageReference'],
        'messagePrimayInfo': !(0, runtime_1.exists)(json, 'messagePrimayInfo') ? undefined : json['messagePrimayInfo'],
        'notices': !(0, runtime_1.exists)(json, 'notices') ? undefined : (json['notices'].map(WarningType_1.WarningTypeFromJSON)),
        'attachmentExists': !(0, runtime_1.exists)(json, 'attachmentExists') ? undefined : json['attachmentExists'],
        'businessEventQueue': !(0, runtime_1.exists)(json, 'businessEventQueue') ? undefined : (0, PendingBusinessEventType_1.PendingBusinessEventTypeFromJSON)(json['businessEventQueue']),
        'updateTime': !(0, runtime_1.exists)(json, 'updateTime') ? undefined : (new Date(json['updateTime'])),
        'resultTime': !(0, runtime_1.exists)(json, 'resultTime') ? undefined : (new Date(json['resultTime'])),
        'deliveryTime': !(0, runtime_1.exists)(json, 'deliveryTime') ? undefined : (new Date(json['deliveryTime'])),
    };
}
exports.IntegrationOutboundMessageTypeFromJSONTyped = IntegrationOutboundMessageTypeFromJSONTyped;
function IntegrationOutboundMessageTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'messageId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.messageId),
        'enqueueTime': value.enqueueTime === undefined ? undefined : (value.enqueueTime.toISOString()),
        'dequeueTime': value.dequeueTime === undefined ? undefined : (value.dequeueTime.toISOString()),
        'interface': value._interface,
        'messageType': value.messageType,
        'hotelId': value.hotelId,
        'messageStatus': value.messageStatus,
        'reviewed': value.reviewed,
        'messageReference': value.messageReference,
        'messagePrimayInfo': value.messagePrimayInfo,
        'notices': value.notices === undefined ? undefined : (value.notices.map(WarningType_1.WarningTypeToJSON)),
        'attachmentExists': value.attachmentExists,
        'businessEventQueue': (0, PendingBusinessEventType_1.PendingBusinessEventTypeToJSON)(value.businessEventQueue),
        'updateTime': value.updateTime === undefined ? undefined : (value.updateTime.toISOString()),
        'resultTime': value.resultTime === undefined ? undefined : (value.resultTime.toISOString()),
        'deliveryTime': value.deliveryTime === undefined ? undefined : (value.deliveryTime.toISOString()),
    };
}
exports.IntegrationOutboundMessageTypeToJSON = IntegrationOutboundMessageTypeToJSON;
