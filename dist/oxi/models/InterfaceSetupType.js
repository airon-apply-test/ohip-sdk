"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterfaceSetupTypeToJSON = exports.InterfaceSetupTypeFromJSONTyped = exports.InterfaceSetupTypeFromJSON = exports.instanceOfInterfaceSetupType = void 0;
const runtime_1 = require("../runtime");
const InterfaceSetupMessageIndicatorType_1 = require("./InterfaceSetupMessageIndicatorType");
const InterfaceSetupXMLVersionType_1 = require("./InterfaceSetupXMLVersionType");
const InterfaceSystemType_1 = require("./InterfaceSystemType");
/**
 * Check if a given object implements the InterfaceSetupType interface.
 */
function instanceOfInterfaceSetupType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfInterfaceSetupType = instanceOfInterfaceSetupType;
function InterfaceSetupTypeFromJSON(json) {
    return InterfaceSetupTypeFromJSONTyped(json, false);
}
exports.InterfaceSetupTypeFromJSON = InterfaceSetupTypeFromJSON;
function InterfaceSetupTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'interfaceId': !(0, runtime_1.exists)(json, 'interfaceId') ? undefined : json['interfaceId'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'externalHotelCode': !(0, runtime_1.exists)(json, 'externalHotelCode') ? undefined : json['externalHotelCode'],
        'machine': !(0, runtime_1.exists)(json, 'machine') ? undefined : json['machine'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'messageFormat': !(0, runtime_1.exists)(json, 'messageFormat') ? undefined : json['messageFormat'],
        'xMLVersions': !(0, runtime_1.exists)(json, 'xMLVersions') ? undefined : (json['xMLVersions'].map(InterfaceSetupXMLVersionType_1.InterfaceSetupXMLVersionTypeFromJSON)),
        'databaseId': !(0, runtime_1.exists)(json, 'databaseId') ? undefined : json['databaseId'],
        'interfaceType': !(0, runtime_1.exists)(json, 'interfaceType') ? undefined : json['interfaceType'],
        'externalSystemActivated': !(0, runtime_1.exists)(json, 'externalSystemActivated') ? undefined : json['externalSystemActivated'],
        'systemType': !(0, runtime_1.exists)(json, 'systemType') ? undefined : (0, InterfaceSystemType_1.InterfaceSystemTypeFromJSON)(json['systemType']),
        'batchProcessBE': !(0, runtime_1.exists)(json, 'batchProcessBE') ? undefined : json['batchProcessBE'],
        'zipData': !(0, runtime_1.exists)(json, 'zipData') ? undefined : json['zipData'],
        'deltaMode': !(0, runtime_1.exists)(json, 'deltaMode') ? undefined : json['deltaMode'],
        'deletionIndicator': !(0, runtime_1.exists)(json, 'deletionIndicator') ? undefined : (0, InterfaceSetupMessageIndicatorType_1.InterfaceSetupMessageIndicatorTypeFromJSON)(json['deletionIndicator']),
        'keepingIndicator': !(0, runtime_1.exists)(json, 'keepingIndicator') ? undefined : (0, InterfaceSetupMessageIndicatorType_1.InterfaceSetupMessageIndicatorTypeFromJSON)(json['keepingIndicator']),
        'orsDestination': !(0, runtime_1.exists)(json, 'orsDestination') ? undefined : json['orsDestination'],
        'xmlSchemaVersionsNegotiable': !(0, runtime_1.exists)(json, 'xmlSchemaVersionsNegotiable') ? undefined : json['xmlSchemaVersionsNegotiable'],
        'negotiateXmlSchemaVersion': !(0, runtime_1.exists)(json, 'negotiateXmlSchemaVersion') ? undefined : json['negotiateXmlSchemaVersion'],
        'setAllToVersion': !(0, runtime_1.exists)(json, 'setAllToVersion') ? undefined : json['setAllToVersion'],
    };
}
exports.InterfaceSetupTypeFromJSONTyped = InterfaceSetupTypeFromJSONTyped;
function InterfaceSetupTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'interfaceId': value.interfaceId,
        'hotelId': value.hotelId,
        'externalHotelCode': value.externalHotelCode,
        'machine': value.machine,
        'description': value.description,
        'messageFormat': value.messageFormat,
        'xMLVersions': value.xMLVersions === undefined ? undefined : (value.xMLVersions.map(InterfaceSetupXMLVersionType_1.InterfaceSetupXMLVersionTypeToJSON)),
        'databaseId': value.databaseId,
        'interfaceType': value.interfaceType,
        'externalSystemActivated': value.externalSystemActivated,
        'systemType': (0, InterfaceSystemType_1.InterfaceSystemTypeToJSON)(value.systemType),
        'batchProcessBE': value.batchProcessBE,
        'zipData': value.zipData,
        'deltaMode': value.deltaMode,
        'deletionIndicator': (0, InterfaceSetupMessageIndicatorType_1.InterfaceSetupMessageIndicatorTypeToJSON)(value.deletionIndicator),
        'keepingIndicator': (0, InterfaceSetupMessageIndicatorType_1.InterfaceSetupMessageIndicatorTypeToJSON)(value.keepingIndicator),
        'orsDestination': value.orsDestination,
        'xmlSchemaVersionsNegotiable': value.xmlSchemaVersionsNegotiable,
        'negotiateXmlSchemaVersion': value.negotiateXmlSchemaVersion,
        'setAllToVersion': value.setAllToVersion,
    };
}
exports.InterfaceSetupTypeToJSON = InterfaceSetupTypeToJSON;
