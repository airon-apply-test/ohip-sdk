/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CommunicationMethodHTTPSType } from './CommunicationMethodHTTPSType';
import type { CommunicationMethodNoneType } from './CommunicationMethodNoneType';
import type { CommunicationType } from './CommunicationType';
/**
 * Type represents the Communication Method Base Type.
 * @export
 * @interface CommunicationMethodType
 */
export interface CommunicationMethodType {
    /**
     * OXI Interface ID
     * @type {string}
     * @memberof CommunicationMethodType
     */
    interfaceId?: string;
    /**
     * SID-RESORT for Global Level and HotelId associated with the interface for the Property Level configuration.
     * @type {string}
     * @memberof CommunicationMethodType
     */
    hotelId?: string;
    /**
     *
     * @type {CommunicationType}
     * @memberof CommunicationMethodType
     */
    communicationType?: CommunicationType;
    /**
     * Attribute represents the communication flow like UPLOAD,DOWNLOAD.
     * @type {string}
     * @memberof CommunicationMethodType
     */
    communicationFlow?: string;
    /**
     *
     * @type {CommunicationMethodNoneType}
     * @memberof CommunicationMethodType
     */
    noCommunication?: CommunicationMethodNoneType;
    /**
     *
     * @type {CommunicationMethodHTTPSType}
     * @memberof CommunicationMethodType
     */
    hTTPS?: CommunicationMethodHTTPSType;
    /**
     * Attribute that indicates whether the communication type allowed or not.
     * @type {string}
     * @memberof CommunicationMethodType
     */
    allowedComTypes?: string;
    /**
     * Attribute represents Description of Communication Flow
     * @type {string}
     * @memberof CommunicationMethodType
     */
    displayText?: string;
    /**
     * Attribute represents Retry Count
     * @type {number}
     * @memberof CommunicationMethodType
     */
    retryCount?: number;
    /**
     * Attribute represents Interval in seconds between retries
     * @type {number}
     * @memberof CommunicationMethodType
     */
    retryInterval?: number;
    /**
     * Attribute represents Upload start time in HH:MI 24 hrs format
     * @type {string}
     * @memberof CommunicationMethodType
     */
    startTime?: string;
    /**
     * Attribute represents Number of days files to be kept in the backup folder
     * @type {number}
     * @memberof CommunicationMethodType
     */
    noOfDaysToKeep?: number;
    /**
     * Attribute represents Version Number of the PM System.
     * @type {string}
     * @memberof CommunicationMethodType
     */
    versionNumber?: string;
    /**
     * Attribute represents System Type(Production/Test)
     * @type {string}
     * @memberof CommunicationMethodType
     */
    systemType?: string;
    /**
     * Chain code.
     * @type {string}
     * @memberof CommunicationMethodType
     */
    chainCode?: string;
}
/**
 * Check if a given object implements the CommunicationMethodType interface.
 */
export declare function instanceOfCommunicationMethodType(value: object): boolean;
export declare function CommunicationMethodTypeFromJSON(json: any): CommunicationMethodType;
export declare function CommunicationMethodTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommunicationMethodType;
export declare function CommunicationMethodTypeToJSON(value?: CommunicationMethodType | null): any;
