/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { IdType } from './IdType';
import type { ParameterType } from './ParameterType';
/**
 *
 * @export
 * @interface ItemType
 */
export interface ItemType {
    /**
     *
     * @type {Array<IdType>}
     * @memberof ItemType
     */
    iDs?: Array<IdType>;
    /**
     * Collection of generic Name-Value-Pair parameters.
     * @type {Array<ParameterType>}
     * @memberof ItemType
     */
    flexfields?: Array<ParameterType>;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    code?: string;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    sequence?: string;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    parentCode?: string;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    hotelId?: string;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    color?: string;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    shortDescription?: string;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    imageURL?: string;
    /**
     *
     * @type {boolean}
     * @memberof ItemType
     */
    active?: boolean;
}
/**
 * Check if a given object implements the ItemType interface.
 */
export declare function instanceOfItemType(value: object): boolean;
export declare function ItemTypeFromJSON(json: any): ItemType;
export declare function ItemTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemType;
export declare function ItemTypeToJSON(value?: ItemType | null): any;
