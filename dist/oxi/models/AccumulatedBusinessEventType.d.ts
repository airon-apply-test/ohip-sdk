/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AccumulatedBusinessEventStatusType } from './AccumulatedBusinessEventStatusType';
/**
 * Business Event message details
 * @export
 * @interface AccumulatedBusinessEventType
 */
export interface AccumulatedBusinessEventType {
    /**
     * Primary Key identifier assigned to the business event.
     * @type {string}
     * @memberof AccumulatedBusinessEventType
     */
    primaryKey?: string;
    /**
     *
     * @type {AccumulatedBusinessEventStatusType}
     * @memberof AccumulatedBusinessEventType
     */
    status?: AccumulatedBusinessEventStatusType;
    /**
     * Data when the message was created by external systems
     * @type {Date}
     * @memberof AccumulatedBusinessEventType
     */
    createDate?: Date;
    /**
     * The interface this message was created for
     * @type {string}
     * @memberof AccumulatedBusinessEventType
     */
    _interface?: string;
    /**
     * Data module of outgoing message. This identifies the kind of message sent (e.g., reservation, profile, rate, block, rate restriction, inventory, and result)
     * @type {string}
     * @memberof AccumulatedBusinessEventType
     */
    module?: string;
    /**
     * Property this message was sent from.
     * @type {string}
     * @memberof AccumulatedBusinessEventType
     */
    hotelId?: string;
}
/**
 * Check if a given object implements the AccumulatedBusinessEventType interface.
 */
export declare function instanceOfAccumulatedBusinessEventType(value: object): boolean;
export declare function AccumulatedBusinessEventTypeFromJSON(json: any): AccumulatedBusinessEventType;
export declare function AccumulatedBusinessEventTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccumulatedBusinessEventType;
export declare function AccumulatedBusinessEventTypeToJSON(value?: AccumulatedBusinessEventType | null): any;
