"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CriterionTypeToJSON = exports.CriterionTypeFromJSONTyped = exports.CriterionTypeFromJSON = exports.instanceOfCriterionType = void 0;
const runtime_1 = require("../runtime");
const MatchAttributeTypeType_1 = require("./MatchAttributeTypeType");
/**
 * Check if a given object implements the CriterionType interface.
 */
function instanceOfCriterionType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCriterionType = instanceOfCriterionType;
function CriterionTypeFromJSON(json) {
    return CriterionTypeFromJSONTyped(json, false);
}
exports.CriterionTypeFromJSON = CriterionTypeFromJSON;
function CriterionTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'points': !(0, runtime_1.exists)(json, 'points') ? undefined : json['points'],
        'active': !(0, runtime_1.exists)(json, 'active') ? undefined : json['active'],
        'matchAttributes': !(0, runtime_1.exists)(json, 'matchAttributes') ? undefined : (json['matchAttributes'].map(MatchAttributeTypeType_1.MatchAttributeTypeTypeFromJSON)),
    };
}
exports.CriterionTypeFromJSONTyped = CriterionTypeFromJSONTyped;
function CriterionTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'points': value.points,
        'active': value.active,
        'matchAttributes': value.matchAttributes === undefined ? undefined : (value.matchAttributes.map(MatchAttributeTypeType_1.MatchAttributeTypeTypeToJSON)),
    };
}
exports.CriterionTypeToJSON = CriterionTypeToJSON;
