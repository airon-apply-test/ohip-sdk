"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Xchange Interface OXI API
 * APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.0.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterfaceStatusTypeToJSON = exports.InterfaceStatusTypeFromJSONTyped = exports.InterfaceStatusTypeFromJSON = exports.instanceOfInterfaceStatusType = void 0;
const runtime_1 = require("../runtime");
const ExchangeInterfaceStatusCommandType_1 = require("./ExchangeInterfaceStatusCommandType");
const ExchangeInterfaceStatusType_1 = require("./ExchangeInterfaceStatusType");
const InterfaceStatusProcessRoleType_1 = require("./InterfaceStatusProcessRoleType");
const InterfaceStatusProcessTypeType_1 = require("./InterfaceStatusProcessTypeType");
/**
 * Check if a given object implements the InterfaceStatusType interface.
 */
function instanceOfInterfaceStatusType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfInterfaceStatusType = instanceOfInterfaceStatusType;
function InterfaceStatusTypeFromJSON(json) {
    return InterfaceStatusTypeFromJSONTyped(json, false);
}
exports.InterfaceStatusTypeFromJSON = InterfaceStatusTypeFromJSON;
function InterfaceStatusTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'interfaceId': !(0, runtime_1.exists)(json, 'interfaceId') ? undefined : json['interfaceId'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'processType': !(0, runtime_1.exists)(json, 'processType') ? undefined : (0, InterfaceStatusProcessTypeType_1.InterfaceStatusProcessTypeTypeFromJSON)(json['processType']),
        'processRole': !(0, runtime_1.exists)(json, 'processRole') ? undefined : (0, InterfaceStatusProcessRoleType_1.InterfaceStatusProcessRoleTypeFromJSON)(json['processRole']),
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : (0, ExchangeInterfaceStatusType_1.ExchangeInterfaceStatusTypeFromJSON)(json['status']),
        'command': !(0, runtime_1.exists)(json, 'command') ? undefined : (0, ExchangeInterfaceStatusCommandType_1.ExchangeInterfaceStatusCommandTypeFromJSON)(json['command']),
        'updatedTime': !(0, runtime_1.exists)(json, 'updatedTime') ? undefined : (new Date(json['updatedTime'])),
        'user': !(0, runtime_1.exists)(json, 'user') ? undefined : json['user'],
        'systemType': !(0, runtime_1.exists)(json, 'systemType') ? undefined : json['systemType'],
    };
}
exports.InterfaceStatusTypeFromJSONTyped = InterfaceStatusTypeFromJSONTyped;
function InterfaceStatusTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'interfaceId': value.interfaceId,
        'hotelId': value.hotelId,
        'description': value.description,
        'processType': (0, InterfaceStatusProcessTypeType_1.InterfaceStatusProcessTypeTypeToJSON)(value.processType),
        'processRole': (0, InterfaceStatusProcessRoleType_1.InterfaceStatusProcessRoleTypeToJSON)(value.processRole),
        'status': (0, ExchangeInterfaceStatusType_1.ExchangeInterfaceStatusTypeToJSON)(value.status),
        'command': (0, ExchangeInterfaceStatusCommandType_1.ExchangeInterfaceStatusCommandTypeToJSON)(value.command),
        'updatedTime': value.updatedTime === undefined ? undefined : (value.updatedTime.toISOString().substr(0, 10)),
        'user': value.user,
        'systemType': value.systemType,
    };
}
exports.InterfaceStatusTypeToJSON = InterfaceStatusTypeToJSON;
