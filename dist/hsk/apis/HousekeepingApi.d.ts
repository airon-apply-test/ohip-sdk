/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 21.5.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 21.5.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CompleteOutOfOrderRoomsRequest, CompleteOutOfServiceRoomsRequest, CompleteRoomRepairStatus, HousekeepingBoard, HousekeepingRoomStatus, PostOutOfOrderRoomsRequest, PostOutOfServiceRoomsRequest, PutRoomRelatedStatusRequest, Rooms, Status } from '../models';
export interface CompleteOutOfOrderRoomsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    completeRoomRepair?: CompleteOutOfOrderRoomsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CompleteOutOfServiceRoomsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    completeRoomRepair?: CompleteOutOfServiceRoomsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingDiscrepanciesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomDiscrepancyStatus?: Set<GetHousekeepingDiscrepanciesRoomDiscrepancyStatusEnum>;
    fromRoomNumber?: string;
    toRoomNumber?: string;
    roomClass?: Array<string>;
    housekeepingEndDate?: Date;
    housekeepingStartDate?: Date;
    floor?: Array<string>;
    dueOut?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingOverviewRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    housekeepingRoomStatus?: Set<GetHousekeepingOverviewHousekeepingRoomStatusEnum>;
    frontOfficeRoomStatus?: Set<GetHousekeepingOverviewFrontOfficeRoomStatusEnum>;
    turndownStatus?: Set<GetHousekeepingOverviewTurndownStatusEnum>;
    roomParityStatus?: Set<GetHousekeepingOverviewRoomParityStatusEnum>;
    serviceRequestStatus?: Set<GetHousekeepingOverviewServiceRequestStatusEnum>;
    roomAssignmentStatus?: Set<GetHousekeepingOverviewRoomAssignmentStatusEnum>;
    fetchInstructions?: Set<GetHousekeepingOverviewFetchInstructionsEnum>;
    fromRoomNumber?: string;
    toRoomNumber?: string;
    floor?: Array<string>;
    roomType?: Array<string>;
    roomClass?: Array<string>;
    building?: Array<string>;
    roomFeatures?: Array<string>;
    daySection?: Array<string>;
    eveningSection?: Array<string>;
    reservationStatus?: Array<string>;
    guestServiceRequest?: GetHousekeepingOverviewGuestServiceRequestEnum;
    roomIdText?: string;
    excludeCombo?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetOutOfOrderRoomsRequest {
    hotelId?: string;
    startDate?: Date;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomId?: string;
    endDate?: Date;
    roomTypes?: Array<string>;
    roomClasses?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetOutOfServiceRoomsRequest {
    hotelId?: string;
    startDate?: Date;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomId?: string;
    endDate?: Date;
    roomTypes?: Array<string>;
    roomClasses?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostOutOfOrderRoomsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomRepairOutOfOrder?: PostOutOfOrderRoomsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostOutOfServiceRoomsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomRepairOutOfService?: PostOutOfServiceRoomsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomRelatedStatusOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingRoomStatusCriteria?: PutRoomRelatedStatusRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class HousekeepingApi extends runtime.BaseAPI {
    /**
     * Use this API when one or more rooms are no longer Out Of Order, and can now be available for a guest to stay in.  Specify in the request what status the room(s) should be returned to, such as clean, Inspected, dirty or Pickup. <p><strong>OperationId:</strong>completeOutOfOrderRooms</p>
     * Complete rooms Out Of Order
     */
    completeOutOfOrderRoomsRaw(requestParameters: CompleteOutOfOrderRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompleteRoomRepairStatus>>;
    /**
     * Use this API when one or more rooms are no longer Out Of Order, and can now be available for a guest to stay in.  Specify in the request what status the room(s) should be returned to, such as clean, Inspected, dirty or Pickup. <p><strong>OperationId:</strong>completeOutOfOrderRooms</p>
     * Complete rooms Out Of Order
     */
    completeOutOfOrderRooms(requestParameters: CompleteOutOfOrderRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompleteRoomRepairStatus>;
    /**
     * Use this API when one or more rooms are no longer Out Of Service, and can now be available for a guest to stay in.  Specify in the request what status the room(s) should be returned to, such as clean, Inspected, dirty or Pickup. <p><strong>OperationId:</strong>completeOutOfServiceRooms</p>
     * Complete Rooms Out of Service
     */
    completeOutOfServiceRoomsRaw(requestParameters: CompleteOutOfServiceRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompleteRoomRepairStatus>>;
    /**
     * Use this API when one or more rooms are no longer Out Of Service, and can now be available for a guest to stay in.  Specify in the request what status the room(s) should be returned to, such as clean, Inspected, dirty or Pickup. <p><strong>OperationId:</strong>completeOutOfServiceRooms</p>
     * Complete Rooms Out of Service
     */
    completeOutOfServiceRooms(requestParameters: CompleteOutOfServiceRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompleteRoomRepairStatus>;
    /**
     * Use this API to return the current housekeeping discrepant rooms for a specific property based on search parameters such as roomDiscrepancyStatus, roomClass, floor, dueOut, etc. These are rooms where the housekeeping status does not match the front office status.<p><strong>OperationId:</strong>getHousekeepingDiscrepancies</p>
     * Get hotel housekeeping discrepant rooms
     */
    getHousekeepingDiscrepanciesRaw(requestParameters: GetHousekeepingDiscrepanciesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Rooms>>;
    /**
     * Use this API to return the current housekeeping discrepant rooms for a specific property based on search parameters such as roomDiscrepancyStatus, roomClass, floor, dueOut, etc. These are rooms where the housekeeping status does not match the front office status.<p><strong>OperationId:</strong>getHousekeepingDiscrepancies</p>
     * Get hotel housekeeping discrepant rooms
     */
    getHousekeepingDiscrepancies(requestParameters: GetHousekeepingDiscrepanciesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Rooms>;
    /**
     * Use this API to return the status of rooms for a specific property based on search criteria such as hotelId, limit, housekeepingRoomStatus, frontOfficeRoomStatus, roomAssignmentStatus, roomType, roomFeatures. The results will give you a list of rooms, and their current housekeeping details.  You could then go ahead and update any of these rooms by using postOutOfOrderRoom for example. <p><strong>OperationId:</strong>getHousekeepingOverview</p>
     * Get housekeeping rooms overview
     */
    getHousekeepingOverviewRaw(requestParameters: GetHousekeepingOverviewRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingBoard>>;
    /**
     * Use this API to return the status of rooms for a specific property based on search criteria such as hotelId, limit, housekeepingRoomStatus, frontOfficeRoomStatus, roomAssignmentStatus, roomType, roomFeatures. The results will give you a list of rooms, and their current housekeeping details.  You could then go ahead and update any of these rooms by using postOutOfOrderRoom for example. <p><strong>OperationId:</strong>getHousekeepingOverview</p>
     * Get housekeeping rooms overview
     */
    getHousekeepingOverview(requestParameters: GetHousekeepingOverviewRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingBoard>;
    /**
     * Use this API to get a list of rooms for a hotel that are Out of Order.  You can narrow down your results with search criteria such as Room class, Room Type, date range. <p><strong>OperationId:</strong>getOutOfOrderRooms</p>
     * Get Out of Order Rooms
     */
    getOutOfOrderRoomsRaw(requestParameters: GetOutOfOrderRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Rooms>>;
    /**
     * Use this API to get a list of rooms for a hotel that are Out of Order.  You can narrow down your results with search criteria such as Room class, Room Type, date range. <p><strong>OperationId:</strong>getOutOfOrderRooms</p>
     * Get Out of Order Rooms
     */
    getOutOfOrderRooms(requestParameters: GetOutOfOrderRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Rooms>;
    /**
     * Use this API to get a list of rooms for a hotel that are Out of Service.  You can narrow down your results with search criteria such as Room class, Room Type, date range. <p><strong>OperationId:</strong>getOutOfServiceRooms</p>
     * Get Out of Service Rooms
     */
    getOutOfServiceRoomsRaw(requestParameters: GetOutOfServiceRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Rooms>>;
    /**
     * Use this API to get a list of rooms for a hotel that are Out of Service.  You can narrow down your results with search criteria such as Room class, Room Type, date range. <p><strong>OperationId:</strong>getOutOfServiceRooms</p>
     * Get Out of Service Rooms
     */
    getOutOfServiceRooms(requestParameters: GetOutOfServiceRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Rooms>;
    /**
     * This API allows you to initially set rooms to \'Out Of Order\' housekeeping status and update existing outOfOrderRooms. <p><strong>OperationId:</strong>postOutOfOrderRooms</p>
     * Set multiple rooms to Out Of Order
     */
    postOutOfOrderRoomsRaw(requestParameters: PostOutOfOrderRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to initially set rooms to \'Out Of Order\' housekeeping status and update existing outOfOrderRooms. <p><strong>OperationId:</strong>postOutOfOrderRooms</p>
     * Set multiple rooms to Out Of Order
     */
    postOutOfOrderRooms(requestParameters: PostOutOfOrderRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to initially set rooms to \'Out Of Service\' housekeeping status and update existing outOfServiceRooms. <p><strong>OperationId:</strong>postOutOfServiceRooms</p>
     * Set multiple rooms to Out Of Service
     */
    postOutOfServiceRoomsRaw(requestParameters: PostOutOfServiceRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to initially set rooms to \'Out Of Service\' housekeeping status and update existing outOfServiceRooms. <p><strong>OperationId:</strong>postOutOfServiceRooms</p>
     * Set multiple rooms to Out Of Service
     */
    postOutOfServiceRooms(requestParameters: PostOutOfServiceRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update the housekeeping room status for multiple rooms.  Statuses typically include Inspected, Clean, Pickup or Dirty. <p><strong>OperationId:</strong>putRoomRelatedStatus</p>
     * Update Housekeeping Room Status
     */
    putRoomRelatedStatusRaw(requestParameters: PutRoomRelatedStatusOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingRoomStatus>>;
    /**
     * Use this API to update the housekeeping room status for multiple rooms.  Statuses typically include Inspected, Clean, Pickup or Dirty. <p><strong>OperationId:</strong>putRoomRelatedStatus</p>
     * Update Housekeeping Room Status
     */
    putRoomRelatedStatus(requestParameters: PutRoomRelatedStatusOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingRoomStatus>;
}
/**
 * @export
 */
export declare const GetHousekeepingDiscrepanciesRoomDiscrepancyStatusEnum: {
    readonly Sleep: "Sleep";
    readonly Skip: "Skip";
    readonly PersonDiscrepancy: "PersonDiscrepancy";
};
export type GetHousekeepingDiscrepanciesRoomDiscrepancyStatusEnum = typeof GetHousekeepingDiscrepanciesRoomDiscrepancyStatusEnum[keyof typeof GetHousekeepingDiscrepanciesRoomDiscrepancyStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewHousekeepingRoomStatusEnum: {
    readonly Clean: "Clean";
    readonly Dirty: "Dirty";
    readonly Pickup: "Pickup";
    readonly Inspected: "Inspected";
    readonly OutOfOrder: "OutOfOrder";
    readonly OutOfService: "OutOfService";
};
export type GetHousekeepingOverviewHousekeepingRoomStatusEnum = typeof GetHousekeepingOverviewHousekeepingRoomStatusEnum[keyof typeof GetHousekeepingOverviewHousekeepingRoomStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewFrontOfficeRoomStatusEnum: {
    readonly Vacant: "Vacant";
    readonly Occupied: "Occupied";
};
export type GetHousekeepingOverviewFrontOfficeRoomStatusEnum = typeof GetHousekeepingOverviewFrontOfficeRoomStatusEnum[keyof typeof GetHousekeepingOverviewFrontOfficeRoomStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewTurndownStatusEnum: {
    readonly Required: "Required";
    readonly NotRequired: "NotRequired";
    readonly Compeleted: "Compeleted";
};
export type GetHousekeepingOverviewTurndownStatusEnum = typeof GetHousekeepingOverviewTurndownStatusEnum[keyof typeof GetHousekeepingOverviewTurndownStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewRoomParityStatusEnum: {
    readonly Odd: "Odd";
    readonly Even: "Even";
};
export type GetHousekeepingOverviewRoomParityStatusEnum = typeof GetHousekeepingOverviewRoomParityStatusEnum[keyof typeof GetHousekeepingOverviewRoomParityStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewServiceRequestStatusEnum: {
    readonly Open: "Open";
    readonly PendingFollowUp: "PendingFollowUp";
    readonly Closed: "Closed";
    readonly DoNotDisturb: "DoNotDisturb";
    readonly MakeUpRoom: "MakeUpRoom";
};
export type GetHousekeepingOverviewServiceRequestStatusEnum = typeof GetHousekeepingOverviewServiceRequestStatusEnum[keyof typeof GetHousekeepingOverviewServiceRequestStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewRoomAssignmentStatusEnum: {
    readonly Assigned: "Assigned";
    readonly Unassigned: "Unassigned";
};
export type GetHousekeepingOverviewRoomAssignmentStatusEnum = typeof GetHousekeepingOverviewRoomAssignmentStatusEnum[keyof typeof GetHousekeepingOverviewRoomAssignmentStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewFetchInstructionsEnum: {
    readonly Summary: "Summary";
    readonly ResvInfo: "ResvInfo";
    readonly TurndownInfo: "TurndownInfo";
};
export type GetHousekeepingOverviewFetchInstructionsEnum = typeof GetHousekeepingOverviewFetchInstructionsEnum[keyof typeof GetHousekeepingOverviewFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewGuestServiceRequestEnum: {
    readonly DoNotDisturb: "DoNotDisturb";
    readonly MakeUpRoom: "MakeUpRoom";
    readonly NoStatusSelected: "NoStatusSelected";
};
export type GetHousekeepingOverviewGuestServiceRequestEnum = typeof GetHousekeepingOverviewGuestServiceRequestEnum[keyof typeof GetHousekeepingOverviewGuestServiceRequestEnum];
