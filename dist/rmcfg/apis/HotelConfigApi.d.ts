/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 21.5.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 21.5.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ChangeHotelRoomMaintenanceReasonsRequest, ChangeHousekeepingRoomSchedulesRequest, ChangeHousekeepingSectionsRequest, ChangeTemplateFloorsRequest, HotelRoomMaintenanceReasonsDetails, HousekeepingRoomSchedulesDetails, HousekeepingSectionsDetails, PostHotelRoomMaintenanceReasonsRequest, PostHousekeepingRoomSchedulesRequest, PostHousekeepingSectionsRequest, PostRoomTypeTemplatesRequest, PostRoomTypesRequest, PostTemplateFloorsRequest, PutRoomTypeTemplatesRequest, PutRoomTypesRequest, RoomTypeTemplatesDetails, RoomTypesDetails, RoomsDetails, Status, TemplateFloorsDetails } from '../models';
export interface ChangeHotelRoomMaintenanceReasonsOperationRequest {
    reasonCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelRoomMaintenanceReasonsToBeChanged?: ChangeHotelRoomMaintenanceReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHousekeepingRoomSchedulesOperationRequest {
    roomScheduleId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingRoomSchedulesToBeChanged?: ChangeHousekeepingRoomSchedulesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHousekeepingSectionsOperationRequest {
    code?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingSectionsToBeChanged?: ChangeHousekeepingSectionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateFloorsOperationRequest {
    templateFloorsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateFloorsToBeChanged?: ChangeTemplateFloorsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRoomTypeTemplatesRequest {
    roomTypeTemplatesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRoomTypesRequest {
    roomTypeId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelRoomMaintenanceReasonsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    roomMaintenanceReasonCodes?: Array<string>;
    wildCard?: string;
    includeInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingRoomSchedulesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomTypeCodes?: Array<string>;
    housekeepingRoomScheduleCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingSectionsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeInactive?: boolean;
    housekeepingSectionsCodes?: Array<string>;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomTypeTemplatesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeInactive?: boolean;
    physical?: boolean;
    pseudo?: boolean;
    summaryInfo?: boolean;
    roomTypeCodes?: Array<string>;
    roomClassCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomTypesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    accessible?: boolean;
    includeInactive?: boolean;
    limit?: number;
    offset?: number;
    physical?: boolean;
    pseudo?: boolean;
    summaryInfo?: boolean;
    roomTypeCodes?: Array<string>;
    roomClassCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    physical?: boolean;
    pseudo?: boolean;
    roomClassCodes?: Array<string>;
    roomTypeCodes?: Array<string>;
    room?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateFloorsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    floors?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHotelRoomMaintenanceReasonsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelRoomMaintenanceReasonsCriteria?: PostHotelRoomMaintenanceReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHousekeepingRoomSchedulesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingRoomSchedulesCriteria?: PostHousekeepingRoomSchedulesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHousekeepingSectionsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingSectionsCriteria?: PostHousekeepingSectionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomTypeTemplatesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomTypeTemplatesCriteria?: PostRoomTypeTemplatesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomTypesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomTypesCriteria?: PostRoomTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateFloorsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateFloorsCriteria?: PostTemplateFloorsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomTypeTemplatesOperationRequest {
    roomTypeTemplatesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomTypeTemplatesToBeChanged?: PutRoomTypeTemplatesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomTypesOperationRequest {
    roomTypeId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomTypesToBeChanged?: PutRoomTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHotelRoomMaintenanceReasonsRequest {
    reasonCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHousekeepingRoomSchedulesRequest {
    roomScheduleId?: string;
    roomTypeCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHousekeepingSectionsRequest {
    code?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateFloorsRequest {
    templateFloorsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class HotelConfigApi extends runtime.BaseAPI {
    /**
     * Use this API to update Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>changeHotelRoomMaintenanceReasons</p>
     * Change Hotel Room Maintenance Reasons
     */
    changeHotelRoomMaintenanceReasonsRaw(requestParameters: ChangeHotelRoomMaintenanceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>changeHotelRoomMaintenanceReasons</p>
     * Change Hotel Room Maintenance Reasons
     */
    changeHotelRoomMaintenanceReasons(requestParameters: ChangeHotelRoomMaintenanceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update housekeeping room schedules. <p><strong>OperationId:</strong>changeHousekeepingRoomSchedules</p>
     * Change housekeeping room schedules
     */
    changeHousekeepingRoomSchedulesRaw(requestParameters: ChangeHousekeepingRoomSchedulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update housekeeping room schedules. <p><strong>OperationId:</strong>changeHousekeepingRoomSchedules</p>
     * Change housekeeping room schedules
     */
    changeHousekeepingRoomSchedules(requestParameters: ChangeHousekeepingRoomSchedulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Housekeeping Sections. <p><strong>OperationId:</strong>changeHousekeepingSections</p>
     * Change Housekeeping Sections
     */
    changeHousekeepingSectionsRaw(requestParameters: ChangeHousekeepingSectionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Housekeeping Sections. <p><strong>OperationId:</strong>changeHousekeepingSections</p>
     * Change Housekeeping Sections
     */
    changeHousekeepingSections(requestParameters: ChangeHousekeepingSectionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update template floors. <p><strong>OperationId:</strong>changeTemplateFloors</p>
     * Change template floors
     */
    changeTemplateFloorsRaw(requestParameters: ChangeTemplateFloorsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update template floors. <p><strong>OperationId:</strong>changeTemplateFloors</p>
     * Change template floors
     */
    changeTemplateFloors(requestParameters: ChangeTemplateFloorsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete new Room Type templates. <p><strong>OperationId:</strong>deleteRoomTypeTemplates</p>
     * Delete new Room Type templates
     */
    deleteRoomTypeTemplatesRaw(requestParameters: DeleteRoomTypeTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete new Room Type templates. <p><strong>OperationId:</strong>deleteRoomTypeTemplates</p>
     * Delete new Room Type templates
     */
    deleteRoomTypeTemplates(requestParameters: DeleteRoomTypeTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete a Room Type from a property. <p><strong>OperationId:</strong>deleteRoomTypes</p>
     * Delete Room Types
     */
    deleteRoomTypesRaw(requestParameters: DeleteRoomTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete a Room Type from a property. <p><strong>OperationId:</strong>deleteRoomTypes</p>
     * Delete Room Types
     */
    deleteRoomTypes(requestParameters: DeleteRoomTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to get Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>getHotelRoomMaintenanceReasons</p>
     * Get Hotel Room Maintenance Reasons
     */
    getHotelRoomMaintenanceReasonsRaw(requestParameters: GetHotelRoomMaintenanceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelRoomMaintenanceReasonsDetails>>;
    /**
     * Use this API to get Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>getHotelRoomMaintenanceReasons</p>
     * Get Hotel Room Maintenance Reasons
     */
    getHotelRoomMaintenanceReasons(requestParameters: GetHotelRoomMaintenanceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelRoomMaintenanceReasonsDetails>;
    /**
     * Use this API to get housekeeping room schedules. <p><strong>OperationId:</strong>getHousekeepingRoomSchedules</p>
     * Get housekeeping room schedules
     */
    getHousekeepingRoomSchedulesRaw(requestParameters: GetHousekeepingRoomSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingRoomSchedulesDetails>>;
    /**
     * Use this API to get housekeeping room schedules. <p><strong>OperationId:</strong>getHousekeepingRoomSchedules</p>
     * Get housekeeping room schedules
     */
    getHousekeepingRoomSchedules(requestParameters: GetHousekeepingRoomSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingRoomSchedulesDetails>;
    /**
     * Use this API to get Housekeeping Sections. <p><strong>OperationId:</strong>getHousekeepingSections</p>
     * Get Housekeeping Sections
     */
    getHousekeepingSectionsRaw(requestParameters: GetHousekeepingSectionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingSectionsDetails>>;
    /**
     * Use this API to get Housekeeping Sections. <p><strong>OperationId:</strong>getHousekeepingSections</p>
     * Get Housekeeping Sections
     */
    getHousekeepingSections(requestParameters: GetHousekeepingSectionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingSectionsDetails>;
    /**
     * This API accepts the room type template request search criteria and gets the Room Type templates. <p><strong>OperationId:</strong>getRoomTypeTemplates</p>
     * Get Room Type Templates
     */
    getRoomTypeTemplatesRaw(requestParameters: GetRoomTypeTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomTypeTemplatesDetails>>;
    /**
     * This API accepts the room type template request search criteria and gets the Room Type templates. <p><strong>OperationId:</strong>getRoomTypeTemplates</p>
     * Get Room Type Templates
     */
    getRoomTypeTemplates(requestParameters: GetRoomTypeTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomTypeTemplatesDetails>;
    /**
     * Use this API to return room types for a specific property based on search criteria such as roomClassCodes, roomTypeCodes, physical, pseudo, etc.<p><strong>OperationId:</strong>getRoomTypes</p>
     * Get hotel room types
     */
    getRoomTypesRaw(requestParameters: GetRoomTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomTypesDetails>>;
    /**
     * Use this API to return room types for a specific property based on search criteria such as roomClassCodes, roomTypeCodes, physical, pseudo, etc.<p><strong>OperationId:</strong>getRoomTypes</p>
     * Get hotel room types
     */
    getRoomTypes(requestParameters: GetRoomTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomTypesDetails>;
    /**
     * Use this API to return rooms for a specific property based on search criteria such as roomClassCodes, roomTypeCodes, room, etc.<p><strong>OperationId:</strong>getRooms</p>
     * Get hotel rooms
     */
    getRoomsRaw(requestParameters: GetRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomsDetails>>;
    /**
     * Use this API to return rooms for a specific property based on search criteria such as roomClassCodes, roomTypeCodes, room, etc.<p><strong>OperationId:</strong>getRooms</p>
     * Get hotel rooms
     */
    getRooms(requestParameters: GetRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomsDetails>;
    /**
     * Use this API to get template floors. <p><strong>OperationId:</strong>getTemplateFloors</p>
     * Get template floors
     */
    getTemplateFloorsRaw(requestParameters: GetTemplateFloorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateFloorsDetails>>;
    /**
     * Use this API to get template floors. <p><strong>OperationId:</strong>getTemplateFloors</p>
     * Get template floors
     */
    getTemplateFloors(requestParameters: GetTemplateFloorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateFloorsDetails>;
    /**
     * Use this API to create Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>postHotelRoomMaintenanceReasons</p>
     * Create Hotel Room Maintenance Reasons
     */
    postHotelRoomMaintenanceReasonsRaw(requestParameters: PostHotelRoomMaintenanceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>postHotelRoomMaintenanceReasons</p>
     * Create Hotel Room Maintenance Reasons
     */
    postHotelRoomMaintenanceReasons(requestParameters: PostHotelRoomMaintenanceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create housekeeping room schedules. <p><strong>OperationId:</strong>postHousekeepingRoomSchedules</p>
     * Create housekeeping room schedules
     */
    postHousekeepingRoomSchedulesRaw(requestParameters: PostHousekeepingRoomSchedulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create housekeeping room schedules. <p><strong>OperationId:</strong>postHousekeepingRoomSchedules</p>
     * Create housekeeping room schedules
     */
    postHousekeepingRoomSchedules(requestParameters: PostHousekeepingRoomSchedulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Housekeeping Sections. <p><strong>OperationId:</strong>postHousekeepingSections</p>
     * Create Housekeeping Sections
     */
    postHousekeepingSectionsRaw(requestParameters: PostHousekeepingSectionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Housekeeping Sections. <p><strong>OperationId:</strong>postHousekeepingSections</p>
     * Create Housekeeping Sections
     */
    postHousekeepingSections(requestParameters: PostHousekeepingSectionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API is used to Use this API to create new Room Type templates. <p><strong>OperationId:</strong>postRoomTypeTemplates</p>
     * Create Room Type Templates
     */
    postRoomTypeTemplatesRaw(requestParameters: PostRoomTypeTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API is used to Use this API to create new Room Type templates. <p><strong>OperationId:</strong>postRoomTypeTemplates</p>
     * Create Room Type Templates
     */
    postRoomTypeTemplates(requestParameters: PostRoomTypeTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create new room types for a property. A list of new room types can be passed as part of the request to Use this API to create multiple rooms in one request. <p><strong>OperationId:</strong>postRoomTypes</p>
     * Create a new room type
     */
    postRoomTypesRaw(requestParameters: PostRoomTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create new room types for a property. A list of new room types can be passed as part of the request to Use this API to create multiple rooms in one request. <p><strong>OperationId:</strong>postRoomTypes</p>
     * Create a new room type
     */
    postRoomTypes(requestParameters: PostRoomTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create template floors. <p><strong>OperationId:</strong>postTemplateFloors</p>
     * Create template floors
     */
    postTemplateFloorsRaw(requestParameters: PostTemplateFloorsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create template floors. <p><strong>OperationId:</strong>postTemplateFloors</p>
     * Create template floors
     */
    postTemplateFloors(requestParameters: PostTemplateFloorsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API is used to update a Room Type template. Use this API to updates can be made concurrently to multiple templates by passing Collection of Room Type templates with the new values. <p><strong>OperationId:</strong>putRoomTypeTemplates</p>
     * Change Room Type Templates
     */
    putRoomTypeTemplatesRaw(requestParameters: PutRoomTypeTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API is used to update a Room Type template. Use this API to updates can be made concurrently to multiple templates by passing Collection of Room Type templates with the new values. <p><strong>OperationId:</strong>putRoomTypeTemplates</p>
     * Change Room Type Templates
     */
    putRoomTypeTemplates(requestParameters: PutRoomTypeTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update a Room Type from a property. A list of room types that need to be modified can also passed as part of the request. <p><strong>OperationId:</strong>putRoomTypes</p>
     * Update a Room Type
     */
    putRoomTypesRaw(requestParameters: PutRoomTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update a Room Type from a property. A list of room types that need to be modified can also passed as part of the request. <p><strong>OperationId:</strong>putRoomTypes</p>
     * Update a Room Type
     */
    putRoomTypes(requestParameters: PutRoomTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>removeHotelRoomMaintenanceReasons</p>
     * Delete Hotel Room Maintenance Reasons
     */
    removeHotelRoomMaintenanceReasonsRaw(requestParameters: RemoveHotelRoomMaintenanceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>removeHotelRoomMaintenanceReasons</p>
     * Delete Hotel Room Maintenance Reasons
     */
    removeHotelRoomMaintenanceReasons(requestParameters: RemoveHotelRoomMaintenanceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete housekeeping room schedules. <p><strong>OperationId:</strong>removeHousekeepingRoomSchedules</p>
     * Delete housekeeping room schedules
     */
    removeHousekeepingRoomSchedulesRaw(requestParameters: RemoveHousekeepingRoomSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete housekeeping room schedules. <p><strong>OperationId:</strong>removeHousekeepingRoomSchedules</p>
     * Delete housekeeping room schedules
     */
    removeHousekeepingRoomSchedules(requestParameters: RemoveHousekeepingRoomSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Housekeeping Sections. <p><strong>OperationId:</strong>removeHousekeepingSections</p>
     * Delete Housekeeping Sections
     */
    removeHousekeepingSectionsRaw(requestParameters: RemoveHousekeepingSectionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Housekeeping Sections. <p><strong>OperationId:</strong>removeHousekeepingSections</p>
     * Delete Housekeeping Sections
     */
    removeHousekeepingSections(requestParameters: RemoveHousekeepingSectionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete template floors. <p><strong>OperationId:</strong>removeTemplateFloors</p>
     * Delete template floors
     */
    removeTemplateFloorsRaw(requestParameters: RemoveTemplateFloorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete template floors. <p><strong>OperationId:</strong>removeTemplateFloors</p>
     * Delete template floors
     */
    removeTemplateFloors(requestParameters: RemoveTemplateFloorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
}
