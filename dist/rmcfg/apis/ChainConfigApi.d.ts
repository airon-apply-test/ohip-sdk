/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 21.5.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 21.5.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { BedTypesDetails, PostRoomPotentialsRequest, PutRoomPotentialsRequest, RoomPotentialsDetails, Status } from '../models';
export interface DeleteRoomPotentialsRequest {
    roomPotentialsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomPotentialsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBedTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomPotentialsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomPotentialsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomPotentialsCriteria?: PostRoomPotentialsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomPotentialsOperationRequest {
    roomPotentialsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomPotentialsToBeChanged?: PutRoomPotentialsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class ChainConfigApi extends runtime.BaseAPI {
    /**
     * Use this API to delete Room Potentials. <p><strong>OperationId:</strong>deleteRoomPotentials</p>
     * Delete Room Potentials
     */
    deleteRoomPotentialsRaw(requestParameters: DeleteRoomPotentialsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Room Potentials. <p><strong>OperationId:</strong>deleteRoomPotentials</p>
     * Delete Room Potentials
     */
    deleteRoomPotentials(requestParameters: DeleteRoomPotentialsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to return bed types based on search criteria such as fetchInactive, codes, wildCard, description.<p><strong>OperationId:</strong>getBedTypes</p>
     * Get bed types
     */
    getBedTypesRaw(requestParameters: GetBedTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BedTypesDetails>>;
    /**
     * Use this API to return bed types based on search criteria such as fetchInactive, codes, wildCard, description.<p><strong>OperationId:</strong>getBedTypes</p>
     * Get bed types
     */
    getBedTypes(requestParameters: GetBedTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BedTypesDetails>;
    /**
     * Use this API to get Room Potentials. <p><strong>OperationId:</strong>getRoomPotentials</p>
     * Get Room Potentials
     */
    getRoomPotentialsRaw(requestParameters: GetRoomPotentialsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomPotentialsDetails>>;
    /**
     * Use this API to get Room Potentials. <p><strong>OperationId:</strong>getRoomPotentials</p>
     * Get Room Potentials
     */
    getRoomPotentials(requestParameters: GetRoomPotentialsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomPotentialsDetails>;
    /**
     * Use this API to create Room Potentials. <p><strong>OperationId:</strong>postRoomPotentials</p>
     * Create Room Potentials
     */
    postRoomPotentialsRaw(requestParameters: PostRoomPotentialsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Room Potentials. <p><strong>OperationId:</strong>postRoomPotentials</p>
     * Create Room Potentials
     */
    postRoomPotentials(requestParameters: PostRoomPotentialsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Room Potentials. <p><strong>OperationId:</strong>putRoomPotentials</p>
     * Change Room Potentials
     */
    putRoomPotentialsRaw(requestParameters: PutRoomPotentialsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Room Potentials. <p><strong>OperationId:</strong>putRoomPotentials</p>
     * Change Room Potentials
     */
    putRoomPotentials(requestParameters: PutRoomPotentialsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
}
