/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 21.5.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 21.5.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AirportsDetails, AmenitiesDetails, AttractionsDetails, ChangeAttractionsRequest, ChangeCreditCardTypesRequest, ChangeDepartmentsRequest, ChangeHotelContactsRequest, ChangeHotelNotesRequest, CopyDepartmentsRequest, CreditCardTypesDetails, DepartmentsDetails, HotelDetails, HotelDetailsDetails, LanguagesDetails, PostAmenitiesRequest, PostAttractionsRequest, PostCreditCardTypesRequest, PostDepartmentsRequest, PostHotelContactsRequest, PostHotelNotesRequest, PostTransportationRequest, Status, TemplateJobTitlesDetails, TransportationDetails, TransportationTemplatesDetails } from '../models';
export interface ChangeAttractionsOperationRequest {
    attractionCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attractionsToBeChanged?: ChangeAttractionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeCreditCardTypesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    creditCardTypesToBeChanged?: ChangeCreditCardTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeDepartmentsOperationRequest {
    departmentCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    departmentsToBeChanged?: ChangeDepartmentsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHotelContactsOperationRequest {
    contactId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelContactsToBeChanged?: ChangeHotelContactsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHotelNotesOperationRequest {
    noteCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelNotesToBeChanged?: ChangeHotelNotesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyDepartmentsOperationRequest {
    sourceHotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyDepartments?: CopyDepartmentsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAirportsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    pageNumber?: number;
    airportCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAmenitiesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    general?: boolean;
    meeting?: boolean;
    amenityCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAttractionsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attractionCodes?: Array<string>;
    wildCard?: string;
    classCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCreditCardTypesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetDepartmentsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    departmentCodes?: Array<string>;
    departmentWildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInstructions?: Set<GetHotelFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelDetailsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelDetailCodes?: Array<string>;
    hotelDetailCategoriesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetLanguagesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    languageCodes?: Array<string>;
    description?: string;
    useAsAlternateLanguage?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateJobTitlesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    jobTitleCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTransportationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transportationCodes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTransportationTemplatesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transportationCodes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAmenitiesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    amenitiesCriteria?: PostAmenitiesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAttractionsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attractionsCriteria?: PostAttractionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCreditCardTypesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    creditCardTypesCriteria?: PostCreditCardTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostDepartmentsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    departmentsCriteria?: PostDepartmentsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHotelContactsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelContactsCriteria?: PostHotelContactsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHotelNotesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelNotesCriteria?: PostHotelNotesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTransportationOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transportationCriteria?: PostTransportationRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveAttractionsRequest {
    attractionCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attractionCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveCreditCardTypesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    creditCardTypesCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveDepartmentsRequest {
    departmentCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHotelContactsRequest {
    contactId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idExtension?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHotelNotesRequest {
    noteCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class HotelConfigApi extends runtime.BaseAPI {
    /**
     * This API is used to Use this API to update an existing attraction. . <p><strong>OperationId:</strong>changeAttractions</p>
     * Update an Attraction
     */
    changeAttractionsRaw(requestParameters: ChangeAttractionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API is used to Use this API to update an existing attraction. . <p><strong>OperationId:</strong>changeAttractions</p>
     * Update an Attraction
     */
    changeAttractions(requestParameters: ChangeAttractionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Credit Card Types. <p><strong>OperationId:</strong>changeCreditCardTypes</p>
     * Change Credit Card Types
     */
    changeCreditCardTypesRaw(requestParameters: ChangeCreditCardTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Credit Card Types. <p><strong>OperationId:</strong>changeCreditCardTypes</p>
     * Change Credit Card Types
     */
    changeCreditCardTypes(requestParameters: ChangeCreditCardTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Departments. <p><strong>OperationId:</strong>changeDepartments</p>
     * Change Departments
     */
    changeDepartmentsRaw(requestParameters: ChangeDepartmentsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Departments. <p><strong>OperationId:</strong>changeDepartments</p>
     * Change Departments
     */
    changeDepartments(requestParameters: ChangeDepartmentsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Hotel Contact. <p><strong>OperationId:</strong>changeHotelContacts</p>
     * Change Hotel Contact
     */
    changeHotelContactsRaw(requestParameters: ChangeHotelContactsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Hotel Contact. <p><strong>OperationId:</strong>changeHotelContacts</p>
     * Change Hotel Contact
     */
    changeHotelContacts(requestParameters: ChangeHotelContactsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Update Note information. <p><strong>OperationId:</strong>changeHotelNotes</p>
     * Update Note information
     */
    changeHotelNotesRaw(requestParameters: ChangeHotelNotesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Update Note information. <p><strong>OperationId:</strong>changeHotelNotes</p>
     * Update Note information
     */
    changeHotelNotes(requestParameters: ChangeHotelNotesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy Departments. <p><strong>OperationId:</strong>copyDepartments</p>
     *  copy Departments
     */
    copyDepartmentsRaw(requestParameters: CopyDepartmentsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy Departments. <p><strong>OperationId:</strong>copyDepartments</p>
     *  copy Departments
     */
    copyDepartments(requestParameters: CopyDepartmentsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to get resort airports. <p><strong>OperationId:</strong>getAirports</p>
     * Get resort airports
     */
    getAirportsRaw(requestParameters: GetAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AirportsDetails>>;
    /**
     * Use this API to get resort airports. <p><strong>OperationId:</strong>getAirports</p>
     * Get resort airports
     */
    getAirports(requestParameters: GetAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AirportsDetails>;
    /**
     * Use this API to get amenities. <p><strong>OperationId:</strong>getAmenities</p>
     * Get amenities
     */
    getAmenitiesRaw(requestParameters: GetAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AmenitiesDetails>>;
    /**
     * Use this API to get amenities. <p><strong>OperationId:</strong>getAmenities</p>
     * Get amenities
     */
    getAmenities(requestParameters: GetAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AmenitiesDetails>;
    /**
     * Use this API to get Attractions. <p><strong>OperationId:</strong>getAttractions</p>
     * Get Attractions
     */
    getAttractionsRaw(requestParameters: GetAttractionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AttractionsDetails>>;
    /**
     * Use this API to get Attractions. <p><strong>OperationId:</strong>getAttractions</p>
     * Get Attractions
     */
    getAttractions(requestParameters: GetAttractionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AttractionsDetails>;
    /**
     * Use this API to get Credit Card Types. <p><strong>OperationId:</strong>getCreditCardTypes</p>
     * Get Credit Card Types
     */
    getCreditCardTypesRaw(requestParameters: GetCreditCardTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreditCardTypesDetails>>;
    /**
     * Use this API to get Credit Card Types. <p><strong>OperationId:</strong>getCreditCardTypes</p>
     * Get Credit Card Types
     */
    getCreditCardTypes(requestParameters: GetCreditCardTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreditCardTypesDetails>;
    /**
     * Use this API to get Departments. <p><strong>OperationId:</strong>getDepartments</p>
     * Get Departments
     */
    getDepartmentsRaw(requestParameters: GetDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DepartmentsDetails>>;
    /**
     * Use this API to get Departments. <p><strong>OperationId:</strong>getDepartments</p>
     * Get Departments
     */
    getDepartments(requestParameters: GetDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DepartmentsDetails>;
    /**
     * Use this API to return hotel configuration information details for a specific property.  Specific areas of configuration can be returned based on the fetchInstructions query parameter such as General, Attraction, Airports, Alternatehotels, Raterange, etc.<p><strong>OperationId:</strong>getHotel</p>
     * Get hotel property configuration details
     */
    getHotelRaw(requestParameters: GetHotelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelDetails>>;
    /**
     * Use this API to return hotel configuration information details for a specific property.  Specific areas of configuration can be returned based on the fetchInstructions query parameter such as General, Attraction, Airports, Alternatehotels, Raterange, etc.<p><strong>OperationId:</strong>getHotel</p>
     * Get hotel property configuration details
     */
    getHotel(requestParameters: GetHotelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelDetails>;
    /**
     * Use this API to get hotel details. <p><strong>OperationId:</strong>getHotelDetails</p>
     * Get hotel details
     */
    getHotelDetailsRaw(requestParameters: GetHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelDetailsDetails>>;
    /**
     * Use this API to get hotel details. <p><strong>OperationId:</strong>getHotelDetails</p>
     * Get hotel details
     */
    getHotelDetails(requestParameters: GetHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelDetailsDetails>;
    /**
     * Use this API to get Languages. <p><strong>OperationId:</strong>getLanguages</p>
     * Get Languages
     */
    getLanguagesRaw(requestParameters: GetLanguagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LanguagesDetails>>;
    /**
     * Use this API to get Languages. <p><strong>OperationId:</strong>getLanguages</p>
     * Get Languages
     */
    getLanguages(requestParameters: GetLanguagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LanguagesDetails>;
    /**
     * Use this API to get template job titles. <p><strong>OperationId:</strong>getTemplateJobTitles</p>
     * Get template job titles
     */
    getTemplateJobTitlesRaw(requestParameters: GetTemplateJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateJobTitlesDetails>>;
    /**
     * Use this API to get template job titles. <p><strong>OperationId:</strong>getTemplateJobTitles</p>
     * Get template job titles
     */
    getTemplateJobTitles(requestParameters: GetTemplateJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateJobTitlesDetails>;
    /**
     * Use this API to get transportation. <p><strong>OperationId:</strong>getTransportation</p>
     * Get transportation
     */
    getTransportationRaw(requestParameters: GetTransportationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TransportationDetails>>;
    /**
     * Use this API to get transportation. <p><strong>OperationId:</strong>getTransportation</p>
     * Get transportation
     */
    getTransportation(requestParameters: GetTransportationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TransportationDetails>;
    /**
     * Use this API to get transportation templates. <p><strong>OperationId:</strong>getTransportationTemplates</p>
     * Get transportation templates
     */
    getTransportationTemplatesRaw(requestParameters: GetTransportationTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TransportationTemplatesDetails>>;
    /**
     * Use this API to get transportation templates. <p><strong>OperationId:</strong>getTransportationTemplates</p>
     * Get transportation templates
     */
    getTransportationTemplates(requestParameters: GetTransportationTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TransportationTemplatesDetails>;
    /**
     * Use this API to create amenities. <p><strong>OperationId:</strong>postAmenities</p>
     * Create amenities
     */
    postAmenitiesRaw(requestParameters: PostAmenitiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create amenities. <p><strong>OperationId:</strong>postAmenities</p>
     * Create amenities
     */
    postAmenities(requestParameters: PostAmenitiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API can be used to Use this API to create a new attraction for a property. . <p><strong>OperationId:</strong>postAttractions</p>
     * Create Attractions
     */
    postAttractionsRaw(requestParameters: PostAttractionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API can be used to Use this API to create a new attraction for a property. . <p><strong>OperationId:</strong>postAttractions</p>
     * Create Attractions
     */
    postAttractions(requestParameters: PostAttractionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Credit Card Types. <p><strong>OperationId:</strong>postCreditCardTypes</p>
     * Create Credit Card Types
     */
    postCreditCardTypesRaw(requestParameters: PostCreditCardTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Credit Card Types. <p><strong>OperationId:</strong>postCreditCardTypes</p>
     * Create Credit Card Types
     */
    postCreditCardTypes(requestParameters: PostCreditCardTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Departments. <p><strong>OperationId:</strong>postDepartments</p>
     * Create Departments
     */
    postDepartmentsRaw(requestParameters: PostDepartmentsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Departments. <p><strong>OperationId:</strong>postDepartments</p>
     * Create Departments
     */
    postDepartments(requestParameters: PostDepartmentsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Hotel Contacts. <p><strong>OperationId:</strong>postHotelContacts</p>
     * Create Hotel Contacts
     */
    postHotelContactsRaw(requestParameters: PostHotelContactsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Hotel Contacts. <p><strong>OperationId:</strong>postHotelContacts</p>
     * Create Hotel Contacts
     */
    postHotelContacts(requestParameters: PostHotelContactsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Note information. <p><strong>OperationId:</strong>postHotelNotes</p>
     * Create Note information
     */
    postHotelNotesRaw(requestParameters: PostHotelNotesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Note information. <p><strong>OperationId:</strong>postHotelNotes</p>
     * Create Note information
     */
    postHotelNotes(requestParameters: PostHotelNotesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create transportation. <p><strong>OperationId:</strong>postTransportation</p>
     * Create transportation
     */
    postTransportationRaw(requestParameters: PostTransportationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create transportation. <p><strong>OperationId:</strong>postTransportation</p>
     * Create transportation
     */
    postTransportation(requestParameters: PostTransportationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     *  Use this API to remove an existing attraction. <p><strong>OperationId:</strong>removeAttractions</p>
     * Delete Attractions
     */
    removeAttractionsRaw(requestParameters: RemoveAttractionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     *  Use this API to remove an existing attraction. <p><strong>OperationId:</strong>removeAttractions</p>
     * Delete Attractions
     */
    removeAttractions(requestParameters: RemoveAttractionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Credit Card Types. <p><strong>OperationId:</strong>removeCreditCardTypes</p>
     * Delete Credit Card Types
     */
    removeCreditCardTypesRaw(requestParameters: RemoveCreditCardTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Credit Card Types. <p><strong>OperationId:</strong>removeCreditCardTypes</p>
     * Delete Credit Card Types
     */
    removeCreditCardTypes(requestParameters: RemoveCreditCardTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Departments. <p><strong>OperationId:</strong>removeDepartments</p>
     * Delete Departments
     */
    removeDepartmentsRaw(requestParameters: RemoveDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Departments. <p><strong>OperationId:</strong>removeDepartments</p>
     * Delete Departments
     */
    removeDepartments(requestParameters: RemoveDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Hotel contact. <p><strong>OperationId:</strong>removeHotelContacts</p>
     * Delete Hotel contact
     */
    removeHotelContactsRaw(requestParameters: RemoveHotelContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Hotel contact. <p><strong>OperationId:</strong>removeHotelContacts</p>
     * Delete Hotel contact
     */
    removeHotelContacts(requestParameters: RemoveHotelContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Note information. <p><strong>OperationId:</strong>removeHotelNotes</p>
     * Delete Note information
     */
    removeHotelNotesRaw(requestParameters: RemoveHotelNotesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Note information. <p><strong>OperationId:</strong>removeHotelNotes</p>
     * Delete Note information
     */
    removeHotelNotes(requestParameters: RemoveHotelNotesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
}
/**
 * @export
 */
export declare const GetHotelFetchInstructionsEnum: {
    readonly General: "General";
    readonly Attraction: "Attraction";
    readonly Transportation: "Transportation";
    readonly Package: "Package";
    readonly Dining: "Dining";
    readonly Feature: "Feature";
    readonly Directions: "Directions";
    readonly GeneralNotes: "GeneralNotes";
    readonly Airports: "Airports";
    readonly Alternatehotels: "Alternatehotels";
    readonly Miscellaneous: "Miscellaneous";
    readonly Raterange: "Raterange";
    readonly Contacts: "Contacts";
    readonly EventSpaces: "EventSpaces";
    readonly Notes: "Notes";
    readonly Corporateinformation: "Corporateinformation";
    readonly Meetingrooms: "Meetingrooms";
};
export type GetHotelFetchInstructionsEnum = typeof GetHotelFetchInstructionsEnum[keyof typeof GetHotelFetchInstructionsEnum];
